// -*- C++ -*-
#ifndef leptree_v0_H
#define leptree_v0_H
#include "Math/LorentzVector.h"
#include "Math/Point3D.h"
#include "TMath.h"
#include "TBranch.h"
#include "TTree.h"
#include "TH1F.h"
#include "TFile.h"
#include "TBits.h"
#include <vector> 
#include <unistd.h> 
typedef ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > LorentzVector;

// Generated with the command
// makeCMS3ClassFiles("chain files", "t", "leptree_v0", "leptree_v0_np", "leptr_v0")

using namespace std; 
class leptree_v0 {
private: 
protected: 
	unsigned int index;
	float	evt_pfmet_;
	TBranch *evt_pfmet_branch;
	bool evt_pfmet_isLoaded;
	float	evt_pfmetPhi_;
	TBranch *evt_pfmetPhi_branch;
	bool evt_pfmetPhi_isLoaded;
	float	evt_trackmet_;
	TBranch *evt_trackmet_branch;
	bool evt_trackmet_isLoaded;
	float	evt_trackmetPhi_;
	TBranch *evt_trackmetPhi_branch;
	bool evt_trackmetPhi_isLoaded;
	float	evt_corrMET_;
	TBranch *evt_corrMET_branch;
	bool evt_corrMET_isLoaded;
	float	evt_corrMETPhi_;
	TBranch *evt_corrMETPhi_branch;
	bool evt_corrMETPhi_isLoaded;
	float	evt_pfsumet_;
	TBranch *evt_pfsumet_branch;
	bool evt_pfsumet_isLoaded;
	float	evt_pfmetSig_;
	TBranch *evt_pfmetSig_branch;
	bool evt_pfmetSig_isLoaded;
	int	evt_event_;
	TBranch *evt_event_branch;
	bool evt_event_isLoaded;
	int	evt_lumiBlock_;
	TBranch *evt_lumiBlock_branch;
	bool evt_lumiBlock_isLoaded;
	int	evt_run_;
	TBranch *evt_run_branch;
	bool evt_run_isLoaded;
	bool	filt_csc_;
	TBranch *filt_csc_branch;
	bool filt_csc_isLoaded;
	bool	filt_hbhe_;
	TBranch *filt_hbhe_branch;
	bool filt_hbhe_isLoaded;
	bool	passes_met_filters_;
	TBranch *passes_met_filters_branch;
	bool passes_met_filters_isLoaded;
	bool	filt_hcallaser_;
	TBranch *filt_hcallaser_branch;
	bool filt_hcallaser_isLoaded;
	bool	filt_ecaltp_;
	TBranch *filt_ecaltp_branch;
	bool filt_ecaltp_isLoaded;
	bool	filt_trkfail_;
	TBranch *filt_trkfail_branch;
	bool filt_trkfail_isLoaded;
	bool	filt_eebadsc_;
	TBranch *filt_eebadsc_branch;
	bool filt_eebadsc_isLoaded;
	bool	evt_isRealData_;
	TBranch *evt_isRealData_branch;
	bool evt_isRealData_isLoaded;
	float	scale1fb_;
	TBranch *scale1fb_branch;
	bool scale1fb_isLoaded;
	float	evt_xsec_incl_;
	TBranch *evt_xsec_incl_branch;
	bool evt_xsec_incl_isLoaded;
	float	evt_kfactor_;
	TBranch *evt_kfactor_branch;
	bool evt_kfactor_isLoaded;
	float	gen_met_;
	TBranch *gen_met_branch;
	bool gen_met_isLoaded;
	float	gen_metPhi_;
	TBranch *gen_metPhi_branch;
	bool gen_metPhi_isLoaded;
	float	njets_;
	TBranch *njets_branch;
	bool njets_isLoaded;
	float	ht_;
	TBranch *ht_branch;
	bool ht_isLoaded;
	float	ht_SS_;
	TBranch *ht_SS_branch;
	bool ht_SS_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *jets_;
	TBranch *jets_branch;
	bool jets_isLoaded;
	vector<float> *jets_disc_;
	TBranch *jets_disc_branch;
	bool jets_disc_isLoaded;
	vector<float> *jets_area_;
	TBranch *jets_area_branch;
	bool jets_area_isLoaded;
	vector<float> *jets_undoJEC_;
	TBranch *jets_undoJEC_branch;
	bool jets_undoJEC_isLoaded;
	TString *sample_;
	TBranch *sample_branch;
	bool sample_isLoaded;
	int	nFOs_SS_;
	TBranch *nFOs_SS_branch;
	bool nFOs_SS_isLoaded;
	int	nvtx_;
	TBranch *nvtx_branch;
	bool nvtx_isLoaded;
	float	rho_;
	TBranch *rho_branch;
	bool rho_isLoaded;
	float	rho_neut_centr_;
	TBranch *rho_neut_centr_branch;
	bool rho_neut_centr_isLoaded;
	float	rho_calo_;
	TBranch *rho_calo_branch;
	bool rho_calo_isLoaded;
	float	rho_calo_centr_;
	TBranch *rho_calo_centr_branch;
	bool rho_calo_centr_isLoaded;
	ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *p4_;
	TBranch *p4_branch;
	bool p4_isLoaded;
	ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *tag_p4_;
	TBranch *tag_p4_branch;
	bool tag_p4_isLoaded;
	ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *dilep_p4_;
	TBranch *dilep_p4_branch;
	bool dilep_p4_isLoaded;
	ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *mc_p4_;
	TBranch *mc_p4_branch;
	bool mc_p4_isLoaded;
	ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *mc_motherp4_;
	TBranch *mc_motherp4_branch;
	bool mc_motherp4_isLoaded;
	int	mc_motherid_;
	TBranch *mc_motherid_branch;
	bool mc_motherid_isLoaded;
	int	id_;
	TBranch *id_branch;
	bool id_isLoaded;
	bool	isPF_;
	TBranch *isPF_branch;
	bool isPF_isLoaded;
	int	idx_;
	TBranch *idx_branch;
	bool idx_isLoaded;
	float	dxyPV_;
	TBranch *dxyPV_branch;
	bool dxyPV_isLoaded;
	float	dZ_;
	TBranch *dZ_branch;
	bool dZ_isLoaded;
	float	dxyPV_err_;
	TBranch *dxyPV_err_branch;
	bool dxyPV_err_isLoaded;
	int	motherID_;
	TBranch *motherID_branch;
	bool motherID_isLoaded;
	int	mc_id_;
	TBranch *mc_id_branch;
	bool mc_id_isLoaded;
	float	RelIso03_;
	TBranch *RelIso03_branch;
	bool RelIso03_isLoaded;
	float	RelIso03EA_;
	TBranch *RelIso03EA_branch;
	bool RelIso03EA_isLoaded;
	float	tag_RelIso03EA_;
	TBranch *tag_RelIso03EA_branch;
	bool tag_RelIso03EA_isLoaded;
	float	RelIso03DB_;
	TBranch *RelIso03DB_branch;
	bool RelIso03DB_isLoaded;
	float	pfChargedHadronIso_;
	TBranch *pfChargedHadronIso_branch;
	bool pfChargedHadronIso_isLoaded;
	float	pfPhotonIso_;
	TBranch *pfPhotonIso_branch;
	bool pfPhotonIso_isLoaded;
	float	pfNeutralHadronIso_;
	TBranch *pfNeutralHadronIso_branch;
	bool pfNeutralHadronIso_isLoaded;
	float	tkIso_;
	TBranch *tkIso_branch;
	bool tkIso_isLoaded;
	float	sumPUPt_;
	TBranch *sumPUPt_branch;
	bool sumPUPt_isLoaded;
	bool	passes_SS_tight_v3_;
	TBranch *passes_SS_tight_v3_branch;
	bool passes_SS_tight_v3_isLoaded;
	bool	passes_SS_tight_noiso_v3_;
	TBranch *passes_SS_tight_noiso_v3_branch;
	bool passes_SS_tight_noiso_v3_isLoaded;
	bool	passes_SS_fo_v3_;
	TBranch *passes_SS_fo_v3_branch;
	bool passes_SS_fo_v3_isLoaded;
	bool	passes_SS_fo_noiso_v3_;
	TBranch *passes_SS_fo_noiso_v3_branch;
	bool passes_SS_fo_noiso_v3_isLoaded;
	bool	passes_SS_fo_looseMVA_v3_;
	TBranch *passes_SS_fo_looseMVA_v3_branch;
	bool passes_SS_fo_looseMVA_v3_isLoaded;
	bool	passes_SS_fo_looseMVA_noiso_v3_;
	TBranch *passes_SS_fo_looseMVA_noiso_v3_branch;
	bool passes_SS_fo_looseMVA_noiso_v3_isLoaded;
	bool	passes_SS_veto_v3_;
	TBranch *passes_SS_veto_v3_branch;
	bool passes_SS_veto_v3_isLoaded;
	bool	passes_SS_veto_noiso_v3_;
	TBranch *passes_SS_veto_noiso_v3_branch;
	bool passes_SS_veto_noiso_v3_isLoaded;
	bool	passes_SS_tight_v4_;
	TBranch *passes_SS_tight_v4_branch;
	bool passes_SS_tight_v4_isLoaded;
	bool	passes_SS_tight_noiso_v4_;
	TBranch *passes_SS_tight_noiso_v4_branch;
	bool passes_SS_tight_noiso_v4_isLoaded;
	bool	passes_SS_fo_v4_;
	TBranch *passes_SS_fo_v4_branch;
	bool passes_SS_fo_v4_isLoaded;
	bool	passes_SS_fo_noiso_v4_;
	TBranch *passes_SS_fo_noiso_v4_branch;
	bool passes_SS_fo_noiso_v4_isLoaded;
	bool	passes_SS_fo_looseMVA_v4_;
	TBranch *passes_SS_fo_looseMVA_v4_branch;
	bool passes_SS_fo_looseMVA_v4_isLoaded;
	bool	passes_SS_fo_looseMVA_noiso_v4_;
	TBranch *passes_SS_fo_looseMVA_noiso_v4_branch;
	bool passes_SS_fo_looseMVA_noiso_v4_isLoaded;
	bool	passes_SS_veto_v4_;
	TBranch *passes_SS_veto_v4_branch;
	bool passes_SS_veto_v4_isLoaded;
	bool	passes_SS_veto_noiso_v4_;
	TBranch *passes_SS_veto_noiso_v4_branch;
	bool passes_SS_veto_noiso_v4_isLoaded;
	bool	passes_SS_tight_v5_;
	TBranch *passes_SS_tight_v5_branch;
	bool passes_SS_tight_v5_isLoaded;
	bool	passes_SS_tight_noiso_v5_;
	TBranch *passes_SS_tight_noiso_v5_branch;
	bool passes_SS_tight_noiso_v5_isLoaded;
	bool	passes_SS_fo_v5_;
	TBranch *passes_SS_fo_v5_branch;
	bool passes_SS_fo_v5_isLoaded;
	bool	passes_SS_fo_noiso_v5_;
	TBranch *passes_SS_fo_noiso_v5_branch;
	bool passes_SS_fo_noiso_v5_isLoaded;
	bool	passes_SS_fo_looseMVA_v5_;
	TBranch *passes_SS_fo_looseMVA_v5_branch;
	bool passes_SS_fo_looseMVA_v5_isLoaded;
	bool	passes_SS_fo_looseMVA_noiso_v5_;
	TBranch *passes_SS_fo_looseMVA_noiso_v5_branch;
	bool passes_SS_fo_looseMVA_noiso_v5_isLoaded;
	bool	passes_SS_veto_v5_;
	TBranch *passes_SS_veto_v5_branch;
	bool passes_SS_veto_v5_isLoaded;
	bool	passes_SS_veto_noiso_v5_;
	TBranch *passes_SS_veto_noiso_v5_branch;
	bool passes_SS_veto_noiso_v5_isLoaded;
	bool	passes_WW_medium_v2_;
	TBranch *passes_WW_medium_v2_branch;
	bool passes_WW_medium_v2_isLoaded;
	bool	passes_WW_medium_noiso_v2_;
	TBranch *passes_WW_medium_noiso_v2_branch;
	bool passes_WW_medium_noiso_v2_isLoaded;
	bool	passes_WW_fo_v2_;
	TBranch *passes_WW_fo_v2_branch;
	bool passes_WW_fo_v2_isLoaded;
	bool	passes_WW_fo_noiso_v2_;
	TBranch *passes_WW_fo_noiso_v2_branch;
	bool passes_WW_fo_noiso_v2_isLoaded;
	bool	passes_WW_veto_v2_;
	TBranch *passes_WW_veto_v2_branch;
	bool passes_WW_veto_v2_isLoaded;
	bool	passes_WW_veto_noiso_v2_;
	TBranch *passes_WW_veto_noiso_v2_branch;
	bool passes_WW_veto_noiso_v2_isLoaded;
	bool	passes_HAD_veto_v3_;
	TBranch *passes_HAD_veto_v3_branch;
	bool passes_HAD_veto_v3_isLoaded;
	bool	passes_HAD_veto_noiso_v3_;
	TBranch *passes_HAD_veto_noiso_v3_branch;
	bool passes_HAD_veto_noiso_v3_isLoaded;
	bool	passes_HAD_loose_v3_;
	TBranch *passes_HAD_loose_v3_branch;
	bool passes_HAD_loose_v3_isLoaded;
	bool	passes_HAD_loose_noiso_v3_;
	TBranch *passes_HAD_loose_noiso_v3_branch;
	bool passes_HAD_loose_noiso_v3_isLoaded;
	bool	passes_POG_vetoID_;
	TBranch *passes_POG_vetoID_branch;
	bool passes_POG_vetoID_isLoaded;
	bool	passes_POG_looseID_;
	TBranch *passes_POG_looseID_branch;
	bool passes_POG_looseID_isLoaded;
	bool	passes_POG_mediumID_;
	TBranch *passes_POG_mediumID_branch;
	bool passes_POG_mediumID_isLoaded;
	bool	passes_POG_tightID_;
	TBranch *passes_POG_tightID_branch;
	bool passes_POG_tightID_isLoaded;
	float	ip3d_;
	TBranch *ip3d_branch;
	bool ip3d_isLoaded;
	float	ip3derr_;
	TBranch *ip3derr_branch;
	bool ip3derr_isLoaded;
	int	type_;
	TBranch *type_branch;
	bool type_isLoaded;
	float	mt_;
	TBranch *mt_branch;
	bool mt_isLoaded;
	float	ptrelv0_;
	TBranch *ptrelv0_branch;
	bool ptrelv0_isLoaded;
	float	ptrelv1_;
	TBranch *ptrelv1_branch;
	bool ptrelv1_isLoaded;
	float	miniiso_;
	TBranch *miniiso_branch;
	bool miniiso_isLoaded;
	float	miniisoDB_;
	TBranch *miniisoDB_branch;
	bool miniisoDB_isLoaded;
	float	reliso04_;
	TBranch *reliso04_branch;
	bool reliso04_isLoaded;
	float	annulus04_;
	TBranch *annulus04_branch;
	bool annulus04_isLoaded;
	float	AbsTrkIso_;
	TBranch *AbsTrkIso_branch;
	bool AbsTrkIso_isLoaded;
	float	TrkAn04_;
	TBranch *TrkAn04_branch;
	bool TrkAn04_isLoaded;
	float	iso03sumPt_;
	TBranch *iso03sumPt_branch;
	bool iso03sumPt_isLoaded;
	float	iso03emEt_;
	TBranch *iso03emEt_branch;
	bool iso03emEt_isLoaded;
	float	iso03hadEt_;
	TBranch *iso03hadEt_branch;
	bool iso03hadEt_isLoaded;
	int	jet_close_lep_idx_;
	TBranch *jet_close_lep_idx_branch;
	bool jet_close_lep_idx_isLoaded;
	ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *jet_close_lep_;
	TBranch *jet_close_lep_branch;
	bool jet_close_lep_isLoaded;
	float	jet_close_lep_undoJEC_;
	TBranch *jet_close_lep_undoJEC_branch;
	bool jet_close_lep_undoJEC_isLoaded;
	float	jet_close_lep_area_;
	TBranch *jet_close_lep_area_branch;
	bool jet_close_lep_area_isLoaded;
	float	jet_close_L1_;
	TBranch *jet_close_L1_branch;
	bool jet_close_L1_isLoaded;
	float	jet_close_L1nc_;
	TBranch *jet_close_L1nc_branch;
	bool jet_close_L1nc_isLoaded;
	float	jet_close_L1ncmc_;
	TBranch *jet_close_L1ncmc_branch;
	bool jet_close_L1ncmc_isLoaded;
	float	jet_close_L1L2L3_;
	TBranch *jet_close_L1L2L3_branch;
	bool jet_close_L1L2L3_isLoaded;
	float	jet_close_L2L3_;
	TBranch *jet_close_L2L3_branch;
	bool jet_close_L2L3_isLoaded;
	float	ptratio_;
	TBranch *ptratio_branch;
	bool ptratio_isLoaded;
	int	tag_charge_;
	TBranch *tag_charge_branch;
	bool tag_charge_isLoaded;
	int	tag_mc_motherid_;
	TBranch *tag_mc_motherid_branch;
	bool tag_mc_motherid_isLoaded;
	float	tag_eSeed_;
	TBranch *tag_eSeed_branch;
	bool tag_eSeed_isLoaded;
	float	tag_eSCRaw_;
	TBranch *tag_eSCRaw_branch;
	bool tag_eSCRaw_isLoaded;
	float	tag_eSC_;
	TBranch *tag_eSC_branch;
	bool tag_eSC_isLoaded;
	float	tag_ecalEnergy_;
	TBranch *tag_ecalEnergy_branch;
	bool tag_ecalEnergy_isLoaded;
	int	exp_innerlayers_;
	TBranch *exp_innerlayers_branch;
	bool exp_innerlayers_isLoaded;
	int	exp_outerlayers_;
	TBranch *exp_outerlayers_branch;
	bool exp_outerlayers_isLoaded;
	int	tag_HLT_Ele27_eta2p1_WPTight_Gsf_;
	TBranch *tag_HLT_Ele27_eta2p1_WPTight_Gsf_branch;
	bool tag_HLT_Ele27_eta2p1_WPTight_Gsf_isLoaded;
	int	tag_HLT_Ele32_eta2p1_WPTight_Gsf_;
	TBranch *tag_HLT_Ele32_eta2p1_WPTight_Gsf_branch;
	bool tag_HLT_Ele32_eta2p1_WPTight_Gsf_isLoaded;
	int	tag_HLT_IsoMu24_;
	TBranch *tag_HLT_IsoMu24_branch;
	bool tag_HLT_IsoMu24_isLoaded;
	int	tag_HLT_IsoTkMu24_;
	TBranch *tag_HLT_IsoTkMu24_branch;
	bool tag_HLT_IsoTkMu24_isLoaded;
	float	dilep_mass_;
	TBranch *dilep_mass_branch;
	bool dilep_mass_isLoaded;
	bool	isRandom_;
	TBranch *isRandom_branch;
	bool isRandom_isLoaded;
	float	sigmaIEtaIEta_full5x5_;
	TBranch *sigmaIEtaIEta_full5x5_branch;
	bool sigmaIEtaIEta_full5x5_isLoaded;
	float	sigmaIEtaIEta_;
	TBranch *sigmaIEtaIEta_branch;
	bool sigmaIEtaIEta_isLoaded;
	float	etaSC_;
	TBranch *etaSC_branch;
	bool etaSC_isLoaded;
	float	dEtaIn_;
	TBranch *dEtaIn_branch;
	bool dEtaIn_isLoaded;
	float	dPhiIn_;
	TBranch *dPhiIn_branch;
	bool dPhiIn_isLoaded;
	float	hOverE_;
	TBranch *hOverE_branch;
	bool hOverE_isLoaded;
	float	eSeed_;
	TBranch *eSeed_branch;
	bool eSeed_isLoaded;
	float	scSeedEta_;
	TBranch *scSeedEta_branch;
	bool scSeedEta_isLoaded;
	float	ecalEnergy_;
	TBranch *ecalEnergy_branch;
	bool ecalEnergy_isLoaded;
	float	eOverPIn_;
	TBranch *eOverPIn_branch;
	bool eOverPIn_isLoaded;
	bool	conv_vtx_flag_;
	TBranch *conv_vtx_flag_branch;
	bool conv_vtx_flag_isLoaded;
	int	charge_;
	TBranch *charge_branch;
	bool charge_isLoaded;
	int	sccharge_;
	TBranch *sccharge_branch;
	bool sccharge_isLoaded;
	int	ckf_charge_;
	TBranch *ckf_charge_branch;
	bool ckf_charge_isLoaded;
	bool	threeChargeAgree_;
	TBranch *threeChargeAgree_branch;
	bool threeChargeAgree_isLoaded;
	float	mva_;
	TBranch *mva_branch;
	bool mva_isLoaded;
	float	mva_25ns_;
	TBranch *mva_25ns_branch;
	bool mva_25ns_isLoaded;
	float	tag_mva_25ns_;
	TBranch *tag_mva_25ns_branch;
	bool tag_mva_25ns_isLoaded;
	float	ecalIso_;
	TBranch *ecalIso_branch;
	bool ecalIso_isLoaded;
	float	hcalIso_;
	TBranch *hcalIso_branch;
	bool hcalIso_isLoaded;
	float	ecalPFClusterIso_;
	TBranch *ecalPFClusterIso_branch;
	bool ecalPFClusterIso_isLoaded;
	float	hcalPFClusterIso_;
	TBranch *hcalPFClusterIso_branch;
	bool hcalPFClusterIso_isLoaded;
	int	ckf_laywithmeas_;
	TBranch *ckf_laywithmeas_branch;
	bool ckf_laywithmeas_isLoaded;
	float	sigmaIPhiIPhi_full5x5_;
	TBranch *sigmaIPhiIPhi_full5x5_branch;
	bool sigmaIPhiIPhi_full5x5_isLoaded;
	float	e1x5_full5x5_;
	TBranch *e1x5_full5x5_branch;
	bool e1x5_full5x5_isLoaded;
	float	e5x5_full5x5_;
	TBranch *e5x5_full5x5_branch;
	bool e5x5_full5x5_isLoaded;
	float	r9_full5x5_;
	TBranch *r9_full5x5_branch;
	bool r9_full5x5_isLoaded;
	float	tag_r9_full5x5_;
	TBranch *tag_r9_full5x5_branch;
	bool tag_r9_full5x5_isLoaded;
	float	etaSCwidth_;
	TBranch *etaSCwidth_branch;
	bool etaSCwidth_isLoaded;
	float	phiSCwidth_;
	TBranch *phiSCwidth_branch;
	bool phiSCwidth_isLoaded;
	float	eSCRaw_;
	TBranch *eSCRaw_branch;
	bool eSCRaw_isLoaded;
	float	eSC_;
	TBranch *eSC_branch;
	bool eSC_isLoaded;
	float	eSCPresh_;
	TBranch *eSCPresh_branch;
	bool eSCPresh_isLoaded;
	float	ckf_chi2_;
	TBranch *ckf_chi2_branch;
	bool ckf_chi2_isLoaded;
	int	ckf_ndof_;
	TBranch *ckf_ndof_branch;
	bool ckf_ndof_isLoaded;
	float	chi2_;
	TBranch *chi2_branch;
	bool chi2_isLoaded;
	int	ndof_;
	TBranch *ndof_branch;
	bool ndof_isLoaded;
	float	fbrem_;
	TBranch *fbrem_branch;
	bool fbrem_isLoaded;
	float	eOverPOut_;
	TBranch *eOverPOut_branch;
	bool eOverPOut_isLoaded;
	float	dEtaOut_;
	TBranch *dEtaOut_branch;
	bool dEtaOut_isLoaded;
	float	dPhiOut_;
	TBranch *dPhiOut_branch;
	bool dPhiOut_isLoaded;
	int	gsf_validHits_;
	TBranch *gsf_validHits_branch;
	bool gsf_validHits_isLoaded;
	float	conv_vtx_prob_;
	TBranch *conv_vtx_prob_branch;
	bool conv_vtx_prob_isLoaded;
	int	pid_PFMuon_;
	TBranch *pid_PFMuon_branch;
	bool pid_PFMuon_isLoaded;
	float	gfit_chi2_;
	TBranch *gfit_chi2_branch;
	bool gfit_chi2_isLoaded;
	int	gfit_validSTAHits_;
	TBranch *gfit_validSTAHits_branch;
	bool gfit_validSTAHits_isLoaded;
	int	numberOfMatchedStations_;
	TBranch *numberOfMatchedStations_branch;
	bool numberOfMatchedStations_isLoaded;
	int	validPixelHits_;
	TBranch *validPixelHits_branch;
	bool validPixelHits_isLoaded;
	int	nlayers_;
	TBranch *nlayers_branch;
	bool nlayers_isLoaded;
	float	chi2LocalPosition_;
	TBranch *chi2LocalPosition_branch;
	bool chi2LocalPosition_isLoaded;
	float	trkKink_;
	TBranch *trkKink_branch;
	bool trkKink_isLoaded;
	int	validHits_;
	TBranch *validHits_branch;
	bool validHits_isLoaded;
	int	lostHits_;
	TBranch *lostHits_branch;
	bool lostHits_isLoaded;
	float	segmCompatibility_;
	TBranch *segmCompatibility_branch;
	bool segmCompatibility_isLoaded;
	int	HLT_Mu8_;
	TBranch *HLT_Mu8_branch;
	bool HLT_Mu8_isLoaded;
	int	HLT_Mu17_;
	TBranch *HLT_Mu17_branch;
	bool HLT_Mu17_isLoaded;
	int	HLT_Mu8_TrkIsoVVL_;
	TBranch *HLT_Mu8_TrkIsoVVL_branch;
	bool HLT_Mu8_TrkIsoVVL_isLoaded;
	int	HLT_Mu17_TrkIsoVVL_;
	TBranch *HLT_Mu17_TrkIsoVVL_branch;
	bool HLT_Mu17_TrkIsoVVL_isLoaded;
	int	HLT_IsoMu24_;
	TBranch *HLT_IsoMu24_branch;
	bool HLT_IsoMu24_isLoaded;
	int	HLT_IsoTkMu24_;
	TBranch *HLT_IsoTkMu24_branch;
	bool HLT_IsoTkMu24_isLoaded;
	int	HLT_Mu50_;
	TBranch *HLT_Mu50_branch;
	bool HLT_Mu50_isLoaded;
	int	HLT_Mu55_;
	TBranch *HLT_Mu55_branch;
	bool HLT_Mu55_isLoaded;
	int	HLT_TkMu50_;
	TBranch *HLT_TkMu50_branch;
	bool HLT_TkMu50_isLoaded;
	int	HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_TrailingLeg_;
	TBranch *HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_TrailingLeg_branch;
	bool HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_TrailingLeg_isLoaded;
	int	HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_LeadingLeg_;
	TBranch *HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_LeadingLeg_branch;
	bool HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_LeadingLeg_isLoaded;
	int	HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_TrailingLeg_;
	TBranch *HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_TrailingLeg_branch;
	bool HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_TrailingLeg_isLoaded;
	int	HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_LeadingLeg_;
	TBranch *HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_LeadingLeg_branch;
	bool HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_LeadingLeg_isLoaded;
	int	HLT_Ele8_CaloIdM_TrackIdM_PFJet30_;
	TBranch *HLT_Ele8_CaloIdM_TrackIdM_PFJet30_branch;
	bool HLT_Ele8_CaloIdM_TrackIdM_PFJet30_isLoaded;
	int	HLT_Ele12_CaloIdM_TrackIdM_PFJet30_;
	TBranch *HLT_Ele12_CaloIdM_TrackIdM_PFJet30_branch;
	bool HLT_Ele12_CaloIdM_TrackIdM_PFJet30_isLoaded;
	int	HLT_Ele17_CaloIdM_TrackIdM_PFJet30_;
	TBranch *HLT_Ele17_CaloIdM_TrackIdM_PFJet30_branch;
	bool HLT_Ele17_CaloIdM_TrackIdM_PFJet30_isLoaded;
	int	HLT_Ele23_CaloIdM_TrackIdM_PFJet30_;
	TBranch *HLT_Ele23_CaloIdM_TrackIdM_PFJet30_branch;
	bool HLT_Ele23_CaloIdM_TrackIdM_PFJet30_isLoaded;
	int	HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_;
	TBranch *HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_branch;
	bool HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_isLoaded;
	int	HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_;
	TBranch *HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_branch;
	bool HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_isLoaded;
	int	HLT_Ele17_CaloIdL_TrackIdL_IsoVL_PFJet30_;
	TBranch *HLT_Ele17_CaloIdL_TrackIdL_IsoVL_PFJet30_branch;
	bool HLT_Ele17_CaloIdL_TrackIdL_IsoVL_PFJet30_isLoaded;
	int	HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_;
	TBranch *HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_branch;
	bool HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_isLoaded;
	int	HLT_Ele27_eta2p1_WPTight_Gsf_;
	TBranch *HLT_Ele27_eta2p1_WPTight_Gsf_branch;
	bool HLT_Ele27_eta2p1_WPTight_Gsf_isLoaded;
	int	HLT_Ele32_eta2p1_WPTight_Gsf_;
	TBranch *HLT_Ele32_eta2p1_WPTight_Gsf_branch;
	bool HLT_Ele32_eta2p1_WPTight_Gsf_isLoaded;
	int	HLT_Ele105_CaloIdVT_GsfTrkIdT_;
	TBranch *HLT_Ele105_CaloIdVT_GsfTrkIdT_branch;
	bool HLT_Ele105_CaloIdVT_GsfTrkIdT_isLoaded;
	int	HLT_Ele115_CaloIdVT_GsfTrkIdT_;
	TBranch *HLT_Ele115_CaloIdVT_GsfTrkIdT_branch;
	bool HLT_Ele115_CaloIdVT_GsfTrkIdT_isLoaded;
	int	HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_LeadingLeg_;
	TBranch *HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_LeadingLeg_branch;
	bool HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_LeadingLeg_isLoaded;
	int	HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_TrailingLeg_;
	TBranch *HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_TrailingLeg_branch;
	bool HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_TrailingLeg_isLoaded;
	int	HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_L1_;
	TBranch *HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_L1_branch;
	bool HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_L1_isLoaded;
	int	HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_;
	TBranch *HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_branch;
	bool HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_isLoaded;
	int	HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_LeadingLeg_;
	TBranch *HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_LeadingLeg_branch;
	bool HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_LeadingLeg_isLoaded;
	int	HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_TrailingLeg_;
	TBranch *HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_TrailingLeg_branch;
	bool HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_TrailingLeg_isLoaded;
	int	HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_L1_;
	TBranch *HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_L1_branch;
	bool HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_L1_isLoaded;
	int	HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_;
	TBranch *HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_branch;
	bool HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_isLoaded;
public: 
void Init(TTree *tree);
void GetEntry(unsigned int idx); 
void LoadAllBranches(); 
	const float &evt_pfmet();
	const float &evt_pfmetPhi();
	const float &evt_trackmet();
	const float &evt_trackmetPhi();
	const float &evt_corrMET();
	const float &evt_corrMETPhi();
	const float &evt_pfsumet();
	const float &evt_pfmetSig();
	const int &evt_event();
	const int &evt_lumiBlock();
	const int &evt_run();
	const bool &	filt_csc();
	const bool &	filt_hbhe();
	const bool &	passes_met_filters();
	const bool &	filt_hcallaser();
	const bool &	filt_ecaltp();
	const bool &	filt_trkfail();
	const bool &	filt_eebadsc();
	const bool &	evt_isRealData();
	const float &scale1fb();
	const float &evt_xsec_incl();
	const float &evt_kfactor();
	const float &gen_met();
	const float &gen_metPhi();
	const float &njets();
	const float &ht();
	const float &ht_SS();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jets();
	const vector<float> &jets_disc();
	const vector<float> &jets_area();
	const vector<float> &jets_undoJEC();
	const TString &sample();
	const int &nFOs_SS();
	const int &nvtx();
	const float &rho();
	const float &rho_neut_centr();
	const float &rho_calo();
	const float &rho_calo_centr();
	const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &p4();
	const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &tag_p4();
	const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &dilep_p4();
	const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &mc_p4();
	const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &mc_motherp4();
	const int &mc_motherid();
	const int &id();
	const bool &	isPF();
	const int &idx();
	const float &dxyPV();
	const float &dZ();
	const float &dxyPV_err();
	const int &motherID();
	const int &mc_id();
	const float &RelIso03();
	const float &RelIso03EA();
	const float &tag_RelIso03EA();
	const float &RelIso03DB();
	const float &pfChargedHadronIso();
	const float &pfPhotonIso();
	const float &pfNeutralHadronIso();
	const float &tkIso();
	const float &sumPUPt();
	const bool &	passes_SS_tight_v3();
	const bool &	passes_SS_tight_noiso_v3();
	const bool &	passes_SS_fo_v3();
	const bool &	passes_SS_fo_noiso_v3();
	const bool &	passes_SS_fo_looseMVA_v3();
	const bool &	passes_SS_fo_looseMVA_noiso_v3();
	const bool &	passes_SS_veto_v3();
	const bool &	passes_SS_veto_noiso_v3();
	const bool &	passes_SS_tight_v4();
	const bool &	passes_SS_tight_noiso_v4();
	const bool &	passes_SS_fo_v4();
	const bool &	passes_SS_fo_noiso_v4();
	const bool &	passes_SS_fo_looseMVA_v4();
	const bool &	passes_SS_fo_looseMVA_noiso_v4();
	const bool &	passes_SS_veto_v4();
	const bool &	passes_SS_veto_noiso_v4();
	const bool &	passes_SS_tight_v5();
	const bool &	passes_SS_tight_noiso_v5();
	const bool &	passes_SS_fo_v5();
	const bool &	passes_SS_fo_noiso_v5();
	const bool &	passes_SS_fo_looseMVA_v5();
	const bool &	passes_SS_fo_looseMVA_noiso_v5();
	const bool &	passes_SS_veto_v5();
	const bool &	passes_SS_veto_noiso_v5();
	const bool &	passes_WW_medium_v2();
	const bool &	passes_WW_medium_noiso_v2();
	const bool &	passes_WW_fo_v2();
	const bool &	passes_WW_fo_noiso_v2();
	const bool &	passes_WW_veto_v2();
	const bool &	passes_WW_veto_noiso_v2();
	const bool &	passes_HAD_veto_v3();
	const bool &	passes_HAD_veto_noiso_v3();
	const bool &	passes_HAD_loose_v3();
	const bool &	passes_HAD_loose_noiso_v3();
	const bool &	passes_POG_vetoID();
	const bool &	passes_POG_looseID();
	const bool &	passes_POG_mediumID();
	const bool &	passes_POG_tightID();
	const float &ip3d();
	const float &ip3derr();
	const int &type();
	const float &mt();
	const float &ptrelv0();
	const float &ptrelv1();
	const float &miniiso();
	const float &miniisoDB();
	const float &reliso04();
	const float &annulus04();
	const float &AbsTrkIso();
	const float &TrkAn04();
	const float &iso03sumPt();
	const float &iso03emEt();
	const float &iso03hadEt();
	const int &jet_close_lep_idx();
	const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &jet_close_lep();
	const float &jet_close_lep_undoJEC();
	const float &jet_close_lep_area();
	const float &jet_close_L1();
	const float &jet_close_L1nc();
	const float &jet_close_L1ncmc();
	const float &jet_close_L1L2L3();
	const float &jet_close_L2L3();
	const float &ptratio();
	const int &tag_charge();
	const int &tag_mc_motherid();
	const float &tag_eSeed();
	const float &tag_eSCRaw();
	const float &tag_eSC();
	const float &tag_ecalEnergy();
	const int &exp_innerlayers();
	const int &exp_outerlayers();
	const int &tag_HLT_Ele27_eta2p1_WPTight_Gsf();
	const int &tag_HLT_Ele32_eta2p1_WPTight_Gsf();
	const int &tag_HLT_IsoMu24();
	const int &tag_HLT_IsoTkMu24();
	const float &dilep_mass();
	const bool &	isRandom();
	const float &sigmaIEtaIEta_full5x5();
	const float &sigmaIEtaIEta();
	const float &etaSC();
	const float &dEtaIn();
	const float &dPhiIn();
	const float &hOverE();
	const float &eSeed();
	const float &scSeedEta();
	const float &ecalEnergy();
	const float &eOverPIn();
	const bool &	conv_vtx_flag();
	const int &charge();
	const int &sccharge();
	const int &ckf_charge();
	const bool &	threeChargeAgree();
	const float &mva();
	const float &mva_25ns();
	const float &tag_mva_25ns();
	const float &ecalIso();
	const float &hcalIso();
	const float &ecalPFClusterIso();
	const float &hcalPFClusterIso();
	const int &ckf_laywithmeas();
	const float &sigmaIPhiIPhi_full5x5();
	const float &e1x5_full5x5();
	const float &e5x5_full5x5();
	const float &r9_full5x5();
	const float &tag_r9_full5x5();
	const float &etaSCwidth();
	const float &phiSCwidth();
	const float &eSCRaw();
	const float &eSC();
	const float &eSCPresh();
	const float &ckf_chi2();
	const int &ckf_ndof();
	const float &chi2();
	const int &ndof();
	const float &fbrem();
	const float &eOverPOut();
	const float &dEtaOut();
	const float &dPhiOut();
	const int &gsf_validHits();
	const float &conv_vtx_prob();
	const int &pid_PFMuon();
	const float &gfit_chi2();
	const int &gfit_validSTAHits();
	const int &numberOfMatchedStations();
	const int &validPixelHits();
	const int &nlayers();
	const float &chi2LocalPosition();
	const float &trkKink();
	const int &validHits();
	const int &lostHits();
	const float &segmCompatibility();
	const int &HLT_Mu8();
	const int &HLT_Mu17();
	const int &HLT_Mu8_TrkIsoVVL();
	const int &HLT_Mu17_TrkIsoVVL();
	const int &HLT_IsoMu24();
	const int &HLT_IsoTkMu24();
	const int &HLT_Mu50();
	const int &HLT_Mu55();
	const int &HLT_TkMu50();
	const int &HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_TrailingLeg();
	const int &HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_LeadingLeg();
	const int &HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_TrailingLeg();
	const int &HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_LeadingLeg();
	const int &HLT_Ele8_CaloIdM_TrackIdM_PFJet30();
	const int &HLT_Ele12_CaloIdM_TrackIdM_PFJet30();
	const int &HLT_Ele17_CaloIdM_TrackIdM_PFJet30();
	const int &HLT_Ele23_CaloIdM_TrackIdM_PFJet30();
	const int &HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30();
	const int &HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30();
	const int &HLT_Ele17_CaloIdL_TrackIdL_IsoVL_PFJet30();
	const int &HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30();
	const int &HLT_Ele27_eta2p1_WPTight_Gsf();
	const int &HLT_Ele32_eta2p1_WPTight_Gsf();
	const int &HLT_Ele105_CaloIdVT_GsfTrkIdT();
	const int &HLT_Ele115_CaloIdVT_GsfTrkIdT();
	const int &HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_LeadingLeg();
	const int &HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_TrailingLeg();
	const int &HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_L1();
	const int &HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL();
	const int &HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_LeadingLeg();
	const int &HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_TrailingLeg();
	const int &HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_L1();
	const int &HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL();

  static void progress( int nEventsTotal, int nEventsChain );
};

#ifndef __CINT__
extern leptree_v0 leptr_v0;
#endif

namespace leptree_v0_np {
	const float &evt_pfmet();
	const float &evt_pfmetPhi();
	const float &evt_trackmet();
	const float &evt_trackmetPhi();
	const float &evt_corrMET();
	const float &evt_corrMETPhi();
	const float &evt_pfsumet();
	const float &evt_pfmetSig();
	const int &evt_event();
	const int &evt_lumiBlock();
	const int &evt_run();
	const bool &filt_csc();
	const bool &filt_hbhe();
	const bool &passes_met_filters();
	const bool &filt_hcallaser();
	const bool &filt_ecaltp();
	const bool &filt_trkfail();
	const bool &filt_eebadsc();
	const bool &evt_isRealData();
	const float &scale1fb();
	const float &evt_xsec_incl();
	const float &evt_kfactor();
	const float &gen_met();
	const float &gen_metPhi();
	const float &njets();
	const float &ht();
	const float &ht_SS();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jets();
	const vector<float> &jets_disc();
	const vector<float> &jets_area();
	const vector<float> &jets_undoJEC();
	const TString &sample();
	const int &nFOs_SS();
	const int &nvtx();
	const float &rho();
	const float &rho_neut_centr();
	const float &rho_calo();
	const float &rho_calo_centr();
	const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &p4();
	const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &tag_p4();
	const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &dilep_p4();
	const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &mc_p4();
	const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &mc_motherp4();
	const int &mc_motherid();
	const int &id();
	const bool &isPF();
	const int &idx();
	const float &dxyPV();
	const float &dZ();
	const float &dxyPV_err();
	const int &motherID();
	const int &mc_id();
	const float &RelIso03();
	const float &RelIso03EA();
	const float &tag_RelIso03EA();
	const float &RelIso03DB();
	const float &pfChargedHadronIso();
	const float &pfPhotonIso();
	const float &pfNeutralHadronIso();
	const float &tkIso();
	const float &sumPUPt();
	const bool &passes_SS_tight_v3();
	const bool &passes_SS_tight_noiso_v3();
	const bool &passes_SS_fo_v3();
	const bool &passes_SS_fo_noiso_v3();
	const bool &passes_SS_fo_looseMVA_v3();
	const bool &passes_SS_fo_looseMVA_noiso_v3();
	const bool &passes_SS_veto_v3();
	const bool &passes_SS_veto_noiso_v3();
	const bool &passes_SS_tight_v4();
	const bool &passes_SS_tight_noiso_v4();
	const bool &passes_SS_fo_v4();
	const bool &passes_SS_fo_noiso_v4();
	const bool &passes_SS_fo_looseMVA_v4();
	const bool &passes_SS_fo_looseMVA_noiso_v4();
	const bool &passes_SS_veto_v4();
	const bool &passes_SS_veto_noiso_v4();
	const bool &passes_SS_tight_v5();
	const bool &passes_SS_tight_noiso_v5();
	const bool &passes_SS_fo_v5();
	const bool &passes_SS_fo_noiso_v5();
	const bool &passes_SS_fo_looseMVA_v5();
	const bool &passes_SS_fo_looseMVA_noiso_v5();
	const bool &passes_SS_veto_v5();
	const bool &passes_SS_veto_noiso_v5();
	const bool &passes_WW_medium_v2();
	const bool &passes_WW_medium_noiso_v2();
	const bool &passes_WW_fo_v2();
	const bool &passes_WW_fo_noiso_v2();
	const bool &passes_WW_veto_v2();
	const bool &passes_WW_veto_noiso_v2();
	const bool &passes_HAD_veto_v3();
	const bool &passes_HAD_veto_noiso_v3();
	const bool &passes_HAD_loose_v3();
	const bool &passes_HAD_loose_noiso_v3();
	const bool &passes_POG_vetoID();
	const bool &passes_POG_looseID();
	const bool &passes_POG_mediumID();
	const bool &passes_POG_tightID();
	const float &ip3d();
	const float &ip3derr();
	const int &type();
	const float &mt();
	const float &ptrelv0();
	const float &ptrelv1();
	const float &miniiso();
	const float &miniisoDB();
	const float &reliso04();
	const float &annulus04();
	const float &AbsTrkIso();
	const float &TrkAn04();
	const float &iso03sumPt();
	const float &iso03emEt();
	const float &iso03hadEt();
	const int &jet_close_lep_idx();
	const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &jet_close_lep();
	const float &jet_close_lep_undoJEC();
	const float &jet_close_lep_area();
	const float &jet_close_L1();
	const float &jet_close_L1nc();
	const float &jet_close_L1ncmc();
	const float &jet_close_L1L2L3();
	const float &jet_close_L2L3();
	const float &ptratio();
	const int &tag_charge();
	const int &tag_mc_motherid();
	const float &tag_eSeed();
	const float &tag_eSCRaw();
	const float &tag_eSC();
	const float &tag_ecalEnergy();
	const int &exp_innerlayers();
	const int &exp_outerlayers();
	const int &tag_HLT_Ele27_eta2p1_WPTight_Gsf();
	const int &tag_HLT_Ele32_eta2p1_WPTight_Gsf();
	const int &tag_HLT_IsoMu24();
	const int &tag_HLT_IsoTkMu24();
	const float &dilep_mass();
	const bool &isRandom();
	const float &sigmaIEtaIEta_full5x5();
	const float &sigmaIEtaIEta();
	const float &etaSC();
	const float &dEtaIn();
	const float &dPhiIn();
	const float &hOverE();
	const float &eSeed();
	const float &scSeedEta();
	const float &ecalEnergy();
	const float &eOverPIn();
	const bool &conv_vtx_flag();
	const int &charge();
	const int &sccharge();
	const int &ckf_charge();
	const bool &threeChargeAgree();
	const float &mva();
	const float &mva_25ns();
	const float &tag_mva_25ns();
	const float &ecalIso();
	const float &hcalIso();
	const float &ecalPFClusterIso();
	const float &hcalPFClusterIso();
	const int &ckf_laywithmeas();
	const float &sigmaIPhiIPhi_full5x5();
	const float &e1x5_full5x5();
	const float &e5x5_full5x5();
	const float &r9_full5x5();
	const float &tag_r9_full5x5();
	const float &etaSCwidth();
	const float &phiSCwidth();
	const float &eSCRaw();
	const float &eSC();
	const float &eSCPresh();
	const float &ckf_chi2();
	const int &ckf_ndof();
	const float &chi2();
	const int &ndof();
	const float &fbrem();
	const float &eOverPOut();
	const float &dEtaOut();
	const float &dPhiOut();
	const int &gsf_validHits();
	const float &conv_vtx_prob();
	const int &pid_PFMuon();
	const float &gfit_chi2();
	const int &gfit_validSTAHits();
	const int &numberOfMatchedStations();
	const int &validPixelHits();
	const int &nlayers();
	const float &chi2LocalPosition();
	const float &trkKink();
	const int &validHits();
	const int &lostHits();
	const float &segmCompatibility();
	const int &HLT_Mu8();
	const int &HLT_Mu17();
	const int &HLT_Mu8_TrkIsoVVL();
	const int &HLT_Mu17_TrkIsoVVL();
	const int &HLT_IsoMu24();
	const int &HLT_IsoTkMu24();
	const int &HLT_Mu50();
	const int &HLT_Mu55();
	const int &HLT_TkMu50();
	const int &HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_TrailingLeg();
	const int &HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_LeadingLeg();
	const int &HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_TrailingLeg();
	const int &HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_LeadingLeg();
	const int &HLT_Ele8_CaloIdM_TrackIdM_PFJet30();
	const int &HLT_Ele12_CaloIdM_TrackIdM_PFJet30();
	const int &HLT_Ele17_CaloIdM_TrackIdM_PFJet30();
	const int &HLT_Ele23_CaloIdM_TrackIdM_PFJet30();
	const int &HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30();
	const int &HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30();
	const int &HLT_Ele17_CaloIdL_TrackIdL_IsoVL_PFJet30();
	const int &HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30();
	const int &HLT_Ele27_eta2p1_WPTight_Gsf();
	const int &HLT_Ele32_eta2p1_WPTight_Gsf();
	const int &HLT_Ele105_CaloIdVT_GsfTrkIdT();
	const int &HLT_Ele115_CaloIdVT_GsfTrkIdT();
	const int &HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_LeadingLeg();
	const int &HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_TrailingLeg();
	const int &HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_L1();
	const int &HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL();
	const int &HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_LeadingLeg();
	const int &HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_TrailingLeg();
	const int &HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL_L1();
	const int &HLT_Ele17_Ele12_CaloIdL_TrackIdL_IsoVL();
}
#endif
