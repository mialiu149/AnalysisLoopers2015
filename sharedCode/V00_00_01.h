// -*- C++ -*-
#ifndef V00_00_01_H
#define V00_00_01_H
#include "Math/LorentzVector.h"
#include "Math/Point3D.h"
#include "TMath.h"
#include "TBranch.h"
#include "TTree.h"
#include "TH1F.h"
#include "TFile.h"
#include "TBits.h"
#include <vector> 
#include <unistd.h> 
typedef ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > LorentzVector;

// Generated with the command
// makeCMS3ClassFiles("chain files", "t", "V00_00_01", "V00_00_01_np", "cms3")

using namespace std; 
class V00_00_01 {
private: 
protected: 
	unsigned int index;
	unsigned int	run_;
	TBranch *run_branch;
	bool run_isLoaded;
	unsigned int	ls_;
	TBranch *ls_branch;
	bool ls_isLoaded;
	unsigned int	evt_;
	TBranch *evt_branch;
	bool evt_isLoaded;
	int	nvtxs_;
	TBranch *nvtxs_branch;
	bool nvtxs_isLoaded;
	int	firstGoodVtxIdx_;
	TBranch *firstGoodVtxIdx_branch;
	bool firstGoodVtxIdx_isLoaded;
	int	firstVtx_isfake_;
	TBranch *firstVtx_isfake_branch;
	bool firstVtx_isfake_isLoaded;
	float	firstVtx_ndof_;
	TBranch *firstVtx_ndof_branch;
	bool firstVtx_ndof_isLoaded;
	float	firstVtx_posRho_;
	TBranch *firstVtx_posRho_branch;
	bool firstVtx_posRho_isLoaded;
	float	firstVtx_posZ_;
	TBranch *firstVtx_posZ_branch;
	bool firstVtx_posZ_isLoaded;
	ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *firstVtx_posp4_;
	TBranch *firstVtx_posp4_branch;
	bool firstVtx_posp4_isLoaded;
	int	pu_nvtxs_;
	TBranch *pu_nvtxs_branch;
	bool pu_nvtxs_isLoaded;
	float	pfmet_;
	TBranch *pfmet_branch;
	bool pfmet_isLoaded;
	float	pfmet_phi_;
	TBranch *pfmet_phi_branch;
	bool pfmet_phi_isLoaded;
	float	calomet_;
	TBranch *calomet_branch;
	bool calomet_isLoaded;
	float	calomet_phi_;
	TBranch *calomet_phi_branch;
	bool calomet_phi_isLoaded;
	float	filt_cscbeamhalo_;
	TBranch *filt_cscbeamhalo_branch;
	bool filt_cscbeamhalo_isLoaded;
	float	filt_ecallaser_;
	TBranch *filt_ecallaser_branch;
	bool filt_ecallaser_isLoaded;
	float	filt_ecaltp_;
	TBranch *filt_ecaltp_branch;
	bool filt_ecaltp_isLoaded;
	float	filt_eebadsc_;
	TBranch *filt_eebadsc_branch;
	bool filt_eebadsc_isLoaded;
	float	filt_goodvtx_;
	TBranch *filt_goodvtx_branch;
	bool filt_goodvtx_isLoaded;
	float	filt_hbhenoise_;
	TBranch *filt_hbhenoise_branch;
	bool filt_hbhenoise_isLoaded;
	float	filt_hbhenoise_25ns_;
	TBranch *filt_hbhenoise_25ns_branch;
	bool filt_hbhenoise_25ns_isLoaded;
	float	filt_hbhenoise_50ns_;
	TBranch *filt_hbhenoise_50ns_branch;
	bool filt_hbhenoise_50ns_isLoaded;
	float	filt_hcallaser_;
	TBranch *filt_hcallaser_branch;
	bool filt_hcallaser_isLoaded;
	float	filt_met_;
	TBranch *filt_met_branch;
	bool filt_met_isLoaded;
	float	filt_trkfail_;
	TBranch *filt_trkfail_branch;
	bool filt_trkfail_isLoaded;
	float	filt_trkPOG_;
	TBranch *filt_trkPOG_branch;
	bool filt_trkPOG_isLoaded;
	float	filt_trkPOG_tmc_;
	TBranch *filt_trkPOG_tmc_branch;
	bool filt_trkPOG_tmc_isLoaded;
	float	filt_trkPOG_tms_;
	TBranch *filt_trkPOG_tms_branch;
	bool filt_trkPOG_tms_isLoaded;
	float	filt_eff_;
	TBranch *filt_eff_branch;
	bool filt_eff_isLoaded;
	float	scale1fb_;
	TBranch *scale1fb_branch;
	bool scale1fb_isLoaded;
	float	xsec_;
	TBranch *xsec_branch;
	bool xsec_isLoaded;
	float	kfactor_;
	TBranch *kfactor_branch;
	bool kfactor_isLoaded;
	float	pu_ntrue_;
	TBranch *pu_ntrue_branch;
	bool pu_ntrue_isLoaded;
	int	ngoodleps_;
	TBranch *ngoodleps_branch;
	bool ngoodleps_isLoaded;
	int	nlooseleps_;
	TBranch *nlooseleps_branch;
	bool nlooseleps_isLoaded;
	int	nvetoleps_;
	TBranch *nvetoleps_branch;
	bool nvetoleps_isLoaded;
	bool	is_data_;
	TBranch *is_data_branch;
	bool is_data_isLoaded;
	string *dataset_;
	TBranch *dataset_branch;
	bool dataset_isLoaded;
	string *filename_;
	TBranch *filename_branch;
	bool filename_isLoaded;
	string *cms3tag_;
	TBranch *cms3tag_branch;
	bool cms3tag_isLoaded;
	unsigned int	nEvents_;
	TBranch *nEvents_branch;
	bool nEvents_isLoaded;
	unsigned int	nEvents_goodvtx_;
	TBranch *nEvents_goodvtx_branch;
	bool nEvents_goodvtx_isLoaded;
	unsigned int	nEvents_MET30_;
	TBranch *nEvents_MET30_branch;
	bool nEvents_MET30_isLoaded;
	unsigned int	nEvents_1goodlep_;
	TBranch *nEvents_1goodlep_branch;
	bool nEvents_1goodlep_isLoaded;
	unsigned int	nEvents_2goodjets_;
	TBranch *nEvents_2goodjets_branch;
	bool nEvents_2goodjets_isLoaded;
	int	genlepsfromtop_;
	TBranch *genlepsfromtop_branch;
	bool genlepsfromtop_isLoaded;
	float	MT2W_;
	TBranch *MT2W_branch;
	bool MT2W_isLoaded;
	float	MT2W_lep2_;
	TBranch *MT2W_lep2_branch;
	bool MT2W_lep2_isLoaded;
	float	mindphi_met_j1_j2_;
	TBranch *mindphi_met_j1_j2_branch;
	bool mindphi_met_j1_j2_isLoaded;
	float	mt_met_lep_;
	TBranch *mt_met_lep_branch;
	bool mt_met_lep_isLoaded;
	float	mt_met_lep2_;
	TBranch *mt_met_lep2_branch;
	bool mt_met_lep2_isLoaded;
	float	dR_lep_leadb_;
	TBranch *dR_lep_leadb_branch;
	bool dR_lep_leadb_isLoaded;
	float	dR_lep2_leadb_;
	TBranch *dR_lep2_leadb_branch;
	bool dR_lep2_leadb_isLoaded;
	float	hadronic_top_chi2_;
	TBranch *hadronic_top_chi2_branch;
	bool hadronic_top_chi2_isLoaded;
	float	dphi_Wlep_;
	TBranch *dphi_Wlep_branch;
	bool dphi_Wlep_isLoaded;
	float	MET_over_sqrtHT_;
	TBranch *MET_over_sqrtHT_branch;
	bool MET_over_sqrtHT_isLoaded;
	float	ak4pfjets_rho_;
	TBranch *ak4pfjets_rho_branch;
	bool ak4pfjets_rho_isLoaded;
	vector<string> *genweightsID_;
	TBranch *genweightsID_branch;
	bool genweightsID_isLoaded;
	vector<float> *genweights_;
	TBranch *genweights_branch;
	bool genweights_isLoaded;
	vector<string> *sparms_names_;
	TBranch *sparms_names_branch;
	bool sparms_names_isLoaded;
	float	sparms_filterEfficiency_;
	TBranch *sparms_filterEfficiency_branch;
	bool sparms_filterEfficiency_isLoaded;
	float	sparms_pdfScale_;
	TBranch *sparms_pdfScale_branch;
	bool sparms_pdfScale_isLoaded;
	float	sparms_pdfWeight1_;
	TBranch *sparms_pdfWeight1_branch;
	bool sparms_pdfWeight1_isLoaded;
	float	sparms_pdfWeight2_;
	TBranch *sparms_pdfWeight2_branch;
	bool sparms_pdfWeight2_isLoaded;
	float	sparms_weight_;
	TBranch *sparms_weight_branch;
	bool sparms_weight_isLoaded;
	float	sparms_xsec_;
	TBranch *sparms_xsec_branch;
	bool sparms_xsec_isLoaded;
	vector<float> *sparms_values_;
	TBranch *sparms_values_branch;
	bool sparms_values_isLoaded;
	int	sparms_subProcessId_;
	TBranch *sparms_subProcessId_branch;
	bool sparms_subProcessId_isLoaded;
	float	mass_lsp_;
	TBranch *mass_lsp_branch;
	bool mass_lsp_isLoaded;
	float	mass_chargino_;
	TBranch *mass_chargino_branch;
	bool mass_chargino_isLoaded;
	float	mass_stop_;
	TBranch *mass_stop_branch;
	bool mass_stop_isLoaded;
	float	genmet_;
	TBranch *genmet_branch;
	bool genmet_isLoaded;
	float	genmet_phi_;
	TBranch *genmet_phi_branch;
	bool genmet_phi_isLoaded;
	bool	PassTrackVeto_;
	TBranch *PassTrackVeto_branch;
	bool PassTrackVeto_isLoaded;
	bool	PassTrackVeto_v2_;
	TBranch *PassTrackVeto_v2_branch;
	bool PassTrackVeto_v2_isLoaded;
	bool	PassTrackVeto_v3_;
	TBranch *PassTrackVeto_v3_branch;
	bool PassTrackVeto_v3_isLoaded;
	bool	PassTauVeto_;
	TBranch *PassTauVeto_branch;
	bool PassTauVeto_isLoaded;
	float	EA_all_rho_;
	TBranch *EA_all_rho_branch;
	bool EA_all_rho_isLoaded;
	float	EA_allcalo_rho_;
	TBranch *EA_allcalo_rho_branch;
	bool EA_allcalo_rho_isLoaded;
	float	EA_centralcalo_rho_;
	TBranch *EA_centralcalo_rho_branch;
	bool EA_centralcalo_rho_isLoaded;
	float	EA_centralchargedpileup_rho_;
	TBranch *EA_centralchargedpileup_rho_branch;
	bool EA_centralchargedpileup_rho_isLoaded;
	float	EA_centralneutral_rho_;
	TBranch *EA_centralneutral_rho_branch;
	bool EA_centralneutral_rho_isLoaded;
	float	topness_;
	TBranch *topness_branch;
	bool topness_isLoaded;
	float	topness_lep2_;
	TBranch *topness_lep2_branch;
	bool topness_lep2_isLoaded;
	float	topnessMod_;
	TBranch *topnessMod_branch;
	bool topnessMod_isLoaded;
	float	topnessMod_lep2_;
	TBranch *topnessMod_lep2_branch;
	bool topnessMod_lep2_isLoaded;
	float	MT2_lb_b_;
	TBranch *MT2_lb_b_branch;
	bool MT2_lb_b_isLoaded;
	float	MT2_lb_b_lep2_;
	TBranch *MT2_lb_b_lep2_branch;
	bool MT2_lb_b_lep2_isLoaded;
	float	MT2_lb_b_mass_;
	TBranch *MT2_lb_b_mass_branch;
	bool MT2_lb_b_mass_isLoaded;
	float	MT2_lb_b_mass_lep2_;
	TBranch *MT2_lb_b_mass_lep2_branch;
	bool MT2_lb_b_mass_lep2_isLoaded;
	float	MT2_lb_bqq_;
	TBranch *MT2_lb_bqq_branch;
	bool MT2_lb_bqq_isLoaded;
	float	MT2_lb_bqq_lep2_;
	TBranch *MT2_lb_bqq_lep2_branch;
	bool MT2_lb_bqq_lep2_isLoaded;
	float	MT2_lb_bqq_mass_;
	TBranch *MT2_lb_bqq_mass_branch;
	bool MT2_lb_bqq_mass_isLoaded;
	float	MT2_lb_bqq_mass_lep2_;
	TBranch *MT2_lb_bqq_mass_lep2_branch;
	bool MT2_lb_bqq_mass_lep2_isLoaded;
	float	Mlb_closestb_;
	TBranch *Mlb_closestb_branch;
	bool Mlb_closestb_isLoaded;
	float	Mlb_lead_bdiscr_;
	TBranch *Mlb_lead_bdiscr_branch;
	bool Mlb_lead_bdiscr_isLoaded;
	float	Mlb_closestb_lep2_;
	TBranch *Mlb_closestb_lep2_branch;
	bool Mlb_closestb_lep2_isLoaded;
	float	Mlb_lead_bdiscr_lep2_;
	TBranch *Mlb_lead_bdiscr_lep2_branch;
	bool Mlb_lead_bdiscr_lep2_isLoaded;
	float	Mjjj_;
	TBranch *Mjjj_branch;
	bool Mjjj_isLoaded;
	float	Mjjj_lep2_;
	TBranch *Mjjj_lep2_branch;
	bool Mjjj_lep2_isLoaded;
	int	HLT_SingleEl_;
	TBranch *HLT_SingleEl_branch;
	bool HLT_SingleEl_isLoaded;
	int	HLT_SingleMu_;
	TBranch *HLT_SingleMu_branch;
	bool HLT_SingleMu_isLoaded;
	int	HLT_MET170_;
	TBranch *HLT_MET170_branch;
	bool HLT_MET170_isLoaded;
	int	HLT_MET120Btag_;
	TBranch *HLT_MET120Btag_branch;
	bool HLT_MET120Btag_isLoaded;
	int	HLT_MET120Mu5_;
	TBranch *HLT_MET120Mu5_branch;
	bool HLT_MET120Mu5_isLoaded;
	int	HLT_HT350MET120_;
	TBranch *HLT_HT350MET120_branch;
	bool HLT_HT350MET120_isLoaded;
	int	HLT_DiEl_;
	TBranch *HLT_DiEl_branch;
	bool HLT_DiEl_isLoaded;
	int	HLT_DiMu_;
	TBranch *HLT_DiMu_branch;
	bool HLT_DiMu_isLoaded;
	int	HLT_Mu8El17_;
	TBranch *HLT_Mu8El17_branch;
	bool HLT_Mu8El17_isLoaded;
	int	HLT_Mu8El23_;
	TBranch *HLT_Mu8El23_branch;
	bool HLT_Mu8El23_isLoaded;
	int	HLT_Mu17El12_;
	TBranch *HLT_Mu17El12_branch;
	bool HLT_Mu17El12_isLoaded;
	int	HLT_Mu23El12_;
	TBranch *HLT_Mu23El12_branch;
	bool HLT_Mu23El12_isLoaded;
	int	HLT_SingleEl27_;
	TBranch *HLT_SingleEl27_branch;
	bool HLT_SingleEl27_isLoaded;
	int	HLT_SingleEl27Tight_;
	TBranch *HLT_SingleEl27Tight_branch;
	bool HLT_SingleEl27Tight_isLoaded;
	int	HLT_SingleElTight_;
	TBranch *HLT_SingleElTight_branch;
	bool HLT_SingleElTight_isLoaded;
	int	HLT_SingleElHT200_;
	TBranch *HLT_SingleElHT200_branch;
	bool HLT_SingleElHT200_isLoaded;
	int	HLT_SingleMuNoEta_;
	TBranch *HLT_SingleMuNoEta_branch;
	bool HLT_SingleMuNoEta_isLoaded;
	int	HLT_SingleMuNoIso_;
	TBranch *HLT_SingleMuNoIso_branch;
	bool HLT_SingleMuNoIso_isLoaded;
	int	HLT_SingleMuNoIsoNoEta_;
	TBranch *HLT_SingleMuNoIsoNoEta_branch;
	bool HLT_SingleMuNoIsoNoEta_isLoaded;
	int	HLT_Mu6HT200MET100_;
	TBranch *HLT_Mu6HT200MET100_branch;
	bool HLT_Mu6HT200MET100_isLoaded;
	int	HLT_HT350MET100_;
	TBranch *HLT_HT350MET100_branch;
	bool HLT_HT350MET100_isLoaded;
	int	HLT_SingleMu17_;
	TBranch *HLT_SingleMu17_branch;
	bool HLT_SingleMu17_isLoaded;
	int	HLT_SingleMu20_;
	TBranch *HLT_SingleMu20_branch;
	bool HLT_SingleMu20_isLoaded;
	int	HLT_SingleMu24_;
	TBranch *HLT_SingleMu24_branch;
	bool HLT_SingleMu24_isLoaded;
	int	HLT_MonoCentPFJet80_METNoMu90_MHTNoMu90_IDTight_;
	TBranch *HLT_MonoCentPFJet80_METNoMu90_MHTNoMu90_IDTight_branch;
	bool HLT_MonoCentPFJet80_METNoMu90_MHTNoMu90_IDTight_isLoaded;
	int	HLT_MET90_MHT90_IDTight_;
	TBranch *HLT_MET90_MHT90_IDTight_branch;
	bool HLT_MET90_MHT90_IDTight_isLoaded;
	int	HLT_METNoMu90_NoiseCleaned_MHTNoMu90_IDTight_;
	TBranch *HLT_METNoMu90_NoiseCleaned_MHTNoMu90_IDTight_branch;
	bool HLT_METNoMu90_NoiseCleaned_MHTNoMu90_IDTight_isLoaded;
	int	HLT_Photon90_CaloIdL_PFHT500_;
	TBranch *HLT_Photon90_CaloIdL_PFHT500_branch;
	bool HLT_Photon90_CaloIdL_PFHT500_isLoaded;
	int	HLT_Photon165_R9Id90_HE10_IsoM_;
	TBranch *HLT_Photon165_R9Id90_HE10_IsoM_branch;
	bool HLT_Photon165_R9Id90_HE10_IsoM_isLoaded;
	int	HLT_Photon175_;
	TBranch *HLT_Photon175_branch;
	bool HLT_Photon175_isLoaded;
	int	HLT_Photon165_HE10_;
	TBranch *HLT_Photon165_HE10_branch;
	bool HLT_Photon165_HE10_isLoaded;
	float	pu_weight_;
	TBranch *pu_weight_branch;
	bool pu_weight_isLoaded;
	float	lep_sf_;
	TBranch *lep_sf_branch;
	bool lep_sf_isLoaded;
	float	btag_sf_;
	TBranch *btag_sf_branch;
	bool btag_sf_isLoaded;
	float	HLT_SingleEl_eff_;
	TBranch *HLT_SingleEl_eff_branch;
	bool HLT_SingleEl_eff_isLoaded;
	float	HLT_SingleMu_eff_;
	TBranch *HLT_SingleMu_eff_branch;
	bool HLT_SingleMu_eff_isLoaded;
	int	nPhotons_;
	TBranch *nPhotons_branch;
	bool nPhotons_isLoaded;
	int	ph_selectedidx_;
	TBranch *ph_selectedidx_branch;
	bool ph_selectedidx_isLoaded;
	int	ph_ngoodjets_;
	TBranch *ph_ngoodjets_branch;
	bool ph_ngoodjets_isLoaded;
	int	ph_ngoodbtags_;
	TBranch *ph_ngoodbtags_branch;
	bool ph_ngoodbtags_isLoaded;
	float	ph_met_;
	TBranch *ph_met_branch;
	bool ph_met_isLoaded;
	float	ph_met_phi_;
	TBranch *ph_met_phi_branch;
	bool ph_met_phi_isLoaded;
	float	ph_HT_;
	TBranch *ph_HT_branch;
	bool ph_HT_isLoaded;
	float	ph_htssm_;
	TBranch *ph_htssm_branch;
	bool ph_htssm_isLoaded;
	float	ph_htosm_;
	TBranch *ph_htosm_branch;
	bool ph_htosm_isLoaded;
	float	ph_htratiom_;
	TBranch *ph_htratiom_branch;
	bool ph_htratiom_isLoaded;
	float	ph_mt_met_lep_;
	TBranch *ph_mt_met_lep_branch;
	bool ph_mt_met_lep_isLoaded;
	float	ph_dphi_Wlep_;
	TBranch *ph_dphi_Wlep_branch;
	bool ph_dphi_Wlep_isLoaded;
	float	ph_MT2W_;
	TBranch *ph_MT2W_branch;
	bool ph_MT2W_isLoaded;
	float	ph_topness_;
	TBranch *ph_topness_branch;
	bool ph_topness_isLoaded;
	float	ph_topnessMod_;
	TBranch *ph_topnessMod_branch;
	bool ph_topnessMod_isLoaded;
	float	ph_MT2_lb_b_mass_;
	TBranch *ph_MT2_lb_b_mass_branch;
	bool ph_MT2_lb_b_mass_isLoaded;
	float	ph_MT2_lb_b_;
	TBranch *ph_MT2_lb_b_branch;
	bool ph_MT2_lb_b_isLoaded;
	float	ph_MT2_lb_bqq_mass_;
	TBranch *ph_MT2_lb_bqq_mass_branch;
	bool ph_MT2_lb_bqq_mass_isLoaded;
	float	ph_MT2_lb_bqq_;
	TBranch *ph_MT2_lb_bqq_branch;
	bool ph_MT2_lb_bqq_isLoaded;
	float	ph_hadronic_top_chi2_;
	TBranch *ph_hadronic_top_chi2_branch;
	bool ph_hadronic_top_chi2_isLoaded;
	float	ph_mindphi_met_j1_j2_;
	TBranch *ph_mindphi_met_j1_j2_branch;
	bool ph_mindphi_met_j1_j2_isLoaded;
	float	ph_Mlb_lead_bdiscr_;
	TBranch *ph_Mlb_lead_bdiscr_branch;
	bool ph_Mlb_lead_bdiscr_isLoaded;
	float	ph_dR_lep_leadb_;
	TBranch *ph_dR_lep_leadb_branch;
	bool ph_dR_lep_leadb_isLoaded;
	float	ph_Mlb_closestb_;
	TBranch *ph_Mlb_closestb_branch;
	bool ph_Mlb_closestb_isLoaded;
	float	ph_Mjjj_;
	TBranch *ph_Mjjj_branch;
	bool ph_Mjjj_isLoaded;
	int	Zll_idl1_;
	TBranch *Zll_idl1_branch;
	bool Zll_idl1_isLoaded;
	int	Zll_idl2_;
	TBranch *Zll_idl2_branch;
	bool Zll_idl2_isLoaded;
	ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *Zll_p4l1_;
	TBranch *Zll_p4l1_branch;
	bool Zll_p4l1_isLoaded;
	ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *Zll_p4l2_;
	TBranch *Zll_p4l2_branch;
	bool Zll_p4l2_isLoaded;
	bool	Zll_OS_;
	TBranch *Zll_OS_branch;
	bool Zll_OS_isLoaded;
	bool	Zll_SF_;
	TBranch *Zll_SF_branch;
	bool Zll_SF_isLoaded;
	bool	Zll_isZmass_;
	TBranch *Zll_isZmass_branch;
	bool Zll_isZmass_isLoaded;
	float	Zll_M_;
	TBranch *Zll_M_branch;
	bool Zll_M_isLoaded;
	ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *Zll_p4_;
	TBranch *Zll_p4_branch;
	bool Zll_p4_isLoaded;
	int	Zll_selLep_;
	TBranch *Zll_selLep_branch;
	bool Zll_selLep_isLoaded;
	float	Zll_met_;
	TBranch *Zll_met_branch;
	bool Zll_met_isLoaded;
	float	Zll_met_phi_;
	TBranch *Zll_met_phi_branch;
	bool Zll_met_phi_isLoaded;
	float	Zll_mindphi_met_j1_j2_;
	TBranch *Zll_mindphi_met_j1_j2_branch;
	bool Zll_mindphi_met_j1_j2_isLoaded;
	float	Zll_mt_met_lep_;
	TBranch *Zll_mt_met_lep_branch;
	bool Zll_mt_met_lep_isLoaded;
	float	Zll_dphi_Wlep_;
	TBranch *Zll_dphi_Wlep_branch;
	bool Zll_dphi_Wlep_isLoaded;
	float	Zll_MT2W_;
	TBranch *Zll_MT2W_branch;
	bool Zll_MT2W_isLoaded;
	float	Zll_topness_;
	TBranch *Zll_topness_branch;
	bool Zll_topness_isLoaded;
	float	Zll_topnessMod_;
	TBranch *Zll_topnessMod_branch;
	bool Zll_topnessMod_isLoaded;
	float	Zll_MT2_lb_b_mass_;
	TBranch *Zll_MT2_lb_b_mass_branch;
	bool Zll_MT2_lb_b_mass_isLoaded;
	float	Zll_MT2_lb_b_;
	TBranch *Zll_MT2_lb_b_branch;
	bool Zll_MT2_lb_b_isLoaded;
	float	Zll_MT2_lb_bqq_mass_;
	TBranch *Zll_MT2_lb_bqq_mass_branch;
	bool Zll_MT2_lb_bqq_mass_isLoaded;
	float	Zll_MT2_lb_bqq_;
	TBranch *Zll_MT2_lb_bqq_branch;
	bool Zll_MT2_lb_bqq_isLoaded;
	bool	lep1_is_mu_;
	TBranch *lep1_is_mu_branch;
	bool lep1_is_mu_isLoaded;
	bool	lep1_is_el_;
	TBranch *lep1_is_el_branch;
	bool lep1_is_el_isLoaded;
	int	lep1_charge_;
	TBranch *lep1_charge_branch;
	bool lep1_charge_isLoaded;
	int	lep1_pdgid_;
	TBranch *lep1_pdgid_branch;
	bool lep1_pdgid_isLoaded;
	int	lep1_type_;
	TBranch *lep1_type_branch;
	bool lep1_type_isLoaded;
	int	lep1_production_type_;
	TBranch *lep1_production_type_branch;
	bool lep1_production_type_isLoaded;
	float	lep1_d0_;
	TBranch *lep1_d0_branch;
	bool lep1_d0_isLoaded;
	float	lep1_d0err_;
	TBranch *lep1_d0err_branch;
	bool lep1_d0err_isLoaded;
	float	lep1_dz_;
	TBranch *lep1_dz_branch;
	bool lep1_dz_isLoaded;
	float	lep1_dzerr_;
	TBranch *lep1_dzerr_branch;
	bool lep1_dzerr_isLoaded;
	float	lep1_sigmaIEtaEta_fill5x5_;
	TBranch *lep1_sigmaIEtaEta_fill5x5_branch;
	bool lep1_sigmaIEtaEta_fill5x5_isLoaded;
	float	lep1_dEtaIn_;
	TBranch *lep1_dEtaIn_branch;
	bool lep1_dEtaIn_isLoaded;
	float	lep1_dPhiIn_;
	TBranch *lep1_dPhiIn_branch;
	bool lep1_dPhiIn_isLoaded;
	float	lep1_hOverE_;
	TBranch *lep1_hOverE_branch;
	bool lep1_hOverE_isLoaded;
	float	lep1_ooEmooP_;
	TBranch *lep1_ooEmooP_branch;
	bool lep1_ooEmooP_isLoaded;
	int	lep1_expectedMissingInnerHits_;
	TBranch *lep1_expectedMissingInnerHits_branch;
	bool lep1_expectedMissingInnerHits_isLoaded;
	bool	lep1_conversionVeto_;
	TBranch *lep1_conversionVeto_branch;
	bool lep1_conversionVeto_isLoaded;
	float	lep1_etaSC_;
	TBranch *lep1_etaSC_branch;
	bool lep1_etaSC_isLoaded;
	float	lep1_ChiSqr_;
	TBranch *lep1_ChiSqr_branch;
	bool lep1_ChiSqr_isLoaded;
	float	lep1_chiso_;
	TBranch *lep1_chiso_branch;
	bool lep1_chiso_isLoaded;
	float	lep1_nhiso_;
	TBranch *lep1_nhiso_branch;
	bool lep1_nhiso_isLoaded;
	float	lep1_emiso_;
	TBranch *lep1_emiso_branch;
	bool lep1_emiso_isLoaded;
	float	lep1_deltaBeta_;
	TBranch *lep1_deltaBeta_branch;
	bool lep1_deltaBeta_isLoaded;
	float	lep1_relIso03DB_;
	TBranch *lep1_relIso03DB_branch;
	bool lep1_relIso03DB_isLoaded;
	float	lep1_relIso03EA_;
	TBranch *lep1_relIso03EA_branch;
	bool lep1_relIso03EA_isLoaded;
	float	lep1_relIso04DB_;
	TBranch *lep1_relIso04DB_branch;
	bool lep1_relIso04DB_isLoaded;
	float	lep1_miniRelIsoDB_;
	TBranch *lep1_miniRelIsoDB_branch;
	bool lep1_miniRelIsoDB_isLoaded;
	float	lep1_miniRelIsoEA_;
	TBranch *lep1_miniRelIsoEA_branch;
	bool lep1_miniRelIsoEA_isLoaded;
	float	lep1_MiniIso_;
	TBranch *lep1_MiniIso_branch;
	bool lep1_MiniIso_isLoaded;
	int	lep1_mcid_;
	TBranch *lep1_mcid_branch;
	bool lep1_mcid_isLoaded;
	int	lep1_mcstatus_;
	TBranch *lep1_mcstatus_branch;
	bool lep1_mcstatus_isLoaded;
	int	lep1_mc3dr_;
	TBranch *lep1_mc3dr_branch;
	bool lep1_mc3dr_isLoaded;
	int	lep1_mc3id_;
	TBranch *lep1_mc3id_branch;
	bool lep1_mc3id_isLoaded;
	int	lep1_mc3idx_;
	TBranch *lep1_mc3idx_branch;
	bool lep1_mc3idx_isLoaded;
	int	lep1_mc3motherid_;
	TBranch *lep1_mc3motherid_branch;
	bool lep1_mc3motherid_isLoaded;
	int	lep1_mc3motheridx_;
	TBranch *lep1_mc3motheridx_branch;
	bool lep1_mc3motheridx_isLoaded;
	bool	lep1_is_eleid_loose_;
	TBranch *lep1_is_eleid_loose_branch;
	bool lep1_is_eleid_loose_isLoaded;
	bool	lep1_is_eleid_medium_;
	TBranch *lep1_is_eleid_medium_branch;
	bool lep1_is_eleid_medium_isLoaded;
	bool	lep1_is_eleid_tight_;
	TBranch *lep1_is_eleid_tight_branch;
	bool lep1_is_eleid_tight_isLoaded;
	bool	lep1_is_phys14_loose_noIso_;
	TBranch *lep1_is_phys14_loose_noIso_branch;
	bool lep1_is_phys14_loose_noIso_isLoaded;
	bool	lep1_is_phys14_medium_noIso_;
	TBranch *lep1_is_phys14_medium_noIso_branch;
	bool lep1_is_phys14_medium_noIso_isLoaded;
	bool	lep1_is_phys14_tight_noIso_;
	TBranch *lep1_is_phys14_tight_noIso_branch;
	bool lep1_is_phys14_tight_noIso_isLoaded;
	float	lep1_eoverpin_;
	TBranch *lep1_eoverpin_branch;
	bool lep1_eoverpin_isLoaded;
	bool	lep1_is_muoid_loose_;
	TBranch *lep1_is_muoid_loose_branch;
	bool lep1_is_muoid_loose_isLoaded;
	bool	lep1_is_muoid_medium_;
	TBranch *lep1_is_muoid_medium_branch;
	bool lep1_is_muoid_medium_isLoaded;
	bool	lep1_is_muoid_tight_;
	TBranch *lep1_is_muoid_tight_branch;
	bool lep1_is_muoid_tight_isLoaded;
	float	lep1_ip3d_;
	TBranch *lep1_ip3d_branch;
	bool lep1_ip3d_isLoaded;
	float	lep1_ip3derr_;
	TBranch *lep1_ip3derr_branch;
	bool lep1_ip3derr_isLoaded;
	bool	lep1_is_pfmu_;
	TBranch *lep1_is_pfmu_branch;
	bool lep1_is_pfmu_isLoaded;
	bool	lep1_passMediumID_;
	TBranch *lep1_passMediumID_branch;
	bool lep1_passMediumID_isLoaded;
	bool	lep1_passVeto_;
	TBranch *lep1_passVeto_branch;
	bool lep1_passVeto_isLoaded;
	ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *lep1_p4_;
	TBranch *lep1_p4_branch;
	bool lep1_p4_isLoaded;
	ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *lep1_mcp4_;
	TBranch *lep1_mcp4_branch;
	bool lep1_mcp4_isLoaded;
	float	lep1_pt_;
	TBranch *lep1_pt_branch;
	bool lep1_pt_isLoaded;
	float	lep1_eta_;
	TBranch *lep1_eta_branch;
	bool lep1_eta_isLoaded;
	float	lep1_phi_;
	TBranch *lep1_phi_branch;
	bool lep1_phi_isLoaded;
	float	lep1_mass_;
	TBranch *lep1_mass_branch;
	bool lep1_mass_isLoaded;
	bool	lep2_is_mu_;
	TBranch *lep2_is_mu_branch;
	bool lep2_is_mu_isLoaded;
	bool	lep2_is_el_;
	TBranch *lep2_is_el_branch;
	bool lep2_is_el_isLoaded;
	int	lep2_charge_;
	TBranch *lep2_charge_branch;
	bool lep2_charge_isLoaded;
	int	lep2_pdgid_;
	TBranch *lep2_pdgid_branch;
	bool lep2_pdgid_isLoaded;
	int	lep2_type_;
	TBranch *lep2_type_branch;
	bool lep2_type_isLoaded;
	int	lep2_production_type_;
	TBranch *lep2_production_type_branch;
	bool lep2_production_type_isLoaded;
	float	lep2_d0_;
	TBranch *lep2_d0_branch;
	bool lep2_d0_isLoaded;
	float	lep2_d0err_;
	TBranch *lep2_d0err_branch;
	bool lep2_d0err_isLoaded;
	float	lep2_dz_;
	TBranch *lep2_dz_branch;
	bool lep2_dz_isLoaded;
	float	lep2_dzerr_;
	TBranch *lep2_dzerr_branch;
	bool lep2_dzerr_isLoaded;
	float	lep2_sigmaIEtaEta_fill5x5_;
	TBranch *lep2_sigmaIEtaEta_fill5x5_branch;
	bool lep2_sigmaIEtaEta_fill5x5_isLoaded;
	float	lep2_dEtaIn_;
	TBranch *lep2_dEtaIn_branch;
	bool lep2_dEtaIn_isLoaded;
	float	lep2_dPhiIn_;
	TBranch *lep2_dPhiIn_branch;
	bool lep2_dPhiIn_isLoaded;
	float	lep2_hOverE_;
	TBranch *lep2_hOverE_branch;
	bool lep2_hOverE_isLoaded;
	float	lep2_ooEmooP_;
	TBranch *lep2_ooEmooP_branch;
	bool lep2_ooEmooP_isLoaded;
	int	lep2_expectedMissingInnerHits_;
	TBranch *lep2_expectedMissingInnerHits_branch;
	bool lep2_expectedMissingInnerHits_isLoaded;
	bool	lep2_conversionVeto_;
	TBranch *lep2_conversionVeto_branch;
	bool lep2_conversionVeto_isLoaded;
	float	lep2_etaSC_;
	TBranch *lep2_etaSC_branch;
	bool lep2_etaSC_isLoaded;
	float	lep2_ChiSqr_;
	TBranch *lep2_ChiSqr_branch;
	bool lep2_ChiSqr_isLoaded;
	float	lep2_chiso_;
	TBranch *lep2_chiso_branch;
	bool lep2_chiso_isLoaded;
	float	lep2_nhiso_;
	TBranch *lep2_nhiso_branch;
	bool lep2_nhiso_isLoaded;
	float	lep2_emiso_;
	TBranch *lep2_emiso_branch;
	bool lep2_emiso_isLoaded;
	float	lep2_deltaBeta_;
	TBranch *lep2_deltaBeta_branch;
	bool lep2_deltaBeta_isLoaded;
	float	lep2_relIso03DB_;
	TBranch *lep2_relIso03DB_branch;
	bool lep2_relIso03DB_isLoaded;
	float	lep2_relIso03EA_;
	TBranch *lep2_relIso03EA_branch;
	bool lep2_relIso03EA_isLoaded;
	float	lep2_relIso04DB_;
	TBranch *lep2_relIso04DB_branch;
	bool lep2_relIso04DB_isLoaded;
	float	lep2_miniRelIsoDB_;
	TBranch *lep2_miniRelIsoDB_branch;
	bool lep2_miniRelIsoDB_isLoaded;
	float	lep2_miniRelIsoEA_;
	TBranch *lep2_miniRelIsoEA_branch;
	bool lep2_miniRelIsoEA_isLoaded;
	float	lep2_MiniIso_;
	TBranch *lep2_MiniIso_branch;
	bool lep2_MiniIso_isLoaded;
	int	lep2_mcid_;
	TBranch *lep2_mcid_branch;
	bool lep2_mcid_isLoaded;
	int	lep2_mcstatus_;
	TBranch *lep2_mcstatus_branch;
	bool lep2_mcstatus_isLoaded;
	int	lep2_mc3dr_;
	TBranch *lep2_mc3dr_branch;
	bool lep2_mc3dr_isLoaded;
	int	lep2_mc3id_;
	TBranch *lep2_mc3id_branch;
	bool lep2_mc3id_isLoaded;
	int	lep2_mc3idx_;
	TBranch *lep2_mc3idx_branch;
	bool lep2_mc3idx_isLoaded;
	int	lep2_mc3motherid_;
	TBranch *lep2_mc3motherid_branch;
	bool lep2_mc3motherid_isLoaded;
	int	lep2_mc3motheridx_;
	TBranch *lep2_mc3motheridx_branch;
	bool lep2_mc3motheridx_isLoaded;
	bool	lep2_is_eleid_loose_;
	TBranch *lep2_is_eleid_loose_branch;
	bool lep2_is_eleid_loose_isLoaded;
	bool	lep2_is_eleid_medium_;
	TBranch *lep2_is_eleid_medium_branch;
	bool lep2_is_eleid_medium_isLoaded;
	bool	lep2_is_eleid_tight_;
	TBranch *lep2_is_eleid_tight_branch;
	bool lep2_is_eleid_tight_isLoaded;
	bool	lep2_is_phys14_loose_noIso_;
	TBranch *lep2_is_phys14_loose_noIso_branch;
	bool lep2_is_phys14_loose_noIso_isLoaded;
	bool	lep2_is_phys14_medium_noIso_;
	TBranch *lep2_is_phys14_medium_noIso_branch;
	bool lep2_is_phys14_medium_noIso_isLoaded;
	bool	lep2_is_phys14_tight_noIso_;
	TBranch *lep2_is_phys14_tight_noIso_branch;
	bool lep2_is_phys14_tight_noIso_isLoaded;
	float	lep2_eoverpin_;
	TBranch *lep2_eoverpin_branch;
	bool lep2_eoverpin_isLoaded;
	bool	lep2_is_muoid_loose_;
	TBranch *lep2_is_muoid_loose_branch;
	bool lep2_is_muoid_loose_isLoaded;
	bool	lep2_is_muoid_medium_;
	TBranch *lep2_is_muoid_medium_branch;
	bool lep2_is_muoid_medium_isLoaded;
	bool	lep2_is_muoid_tight_;
	TBranch *lep2_is_muoid_tight_branch;
	bool lep2_is_muoid_tight_isLoaded;
	float	lep2_ip3d_;
	TBranch *lep2_ip3d_branch;
	bool lep2_ip3d_isLoaded;
	float	lep2_ip3derr_;
	TBranch *lep2_ip3derr_branch;
	bool lep2_ip3derr_isLoaded;
	bool	lep2_is_pfmu_;
	TBranch *lep2_is_pfmu_branch;
	bool lep2_is_pfmu_isLoaded;
	bool	lep2_passMediumID_;
	TBranch *lep2_passMediumID_branch;
	bool lep2_passMediumID_isLoaded;
	bool	lep2_passVeto_;
	TBranch *lep2_passVeto_branch;
	bool lep2_passVeto_isLoaded;
	ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *lep2_p4_;
	TBranch *lep2_p4_branch;
	bool lep2_p4_isLoaded;
	ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *lep2_mcp4_;
	TBranch *lep2_mcp4_branch;
	bool lep2_mcp4_isLoaded;
	float	lep2_pt_;
	TBranch *lep2_pt_branch;
	bool lep2_pt_isLoaded;
	float	lep2_eta_;
	TBranch *lep2_eta_branch;
	bool lep2_eta_isLoaded;
	float	lep2_phi_;
	TBranch *lep2_phi_branch;
	bool lep2_phi_isLoaded;
	float	lep2_mass_;
	TBranch *lep2_mass_branch;
	bool lep2_mass_isLoaded;
	vector<float> *ph_sigmaIEtaEta_fill5x5_;
	TBranch *ph_sigmaIEtaEta_fill5x5_branch;
	bool ph_sigmaIEtaEta_fill5x5_isLoaded;
	vector<float> *ph_hOverE_;
	TBranch *ph_hOverE_branch;
	bool ph_hOverE_isLoaded;
	vector<float> *ph_r9_;
	TBranch *ph_r9_branch;
	bool ph_r9_isLoaded;
	vector<float> *ph_chiso_;
	TBranch *ph_chiso_branch;
	bool ph_chiso_isLoaded;
	vector<float> *ph_nhiso_;
	TBranch *ph_nhiso_branch;
	bool ph_nhiso_isLoaded;
	vector<float> *ph_phiso_;
	TBranch *ph_phiso_branch;
	bool ph_phiso_isLoaded;
	vector<bool> *ph_idCutBased_;
	TBranch *ph_idCutBased_branch;
	bool ph_idCutBased_isLoaded;
	vector<int> *ph_overlapJetId_;
	TBranch *ph_overlapJetId_branch;
	bool ph_overlapJetId_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *ph_p4_;
	TBranch *ph_p4_branch;
	bool ph_p4_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *ph_mcp4_;
	TBranch *ph_mcp4_branch;
	bool ph_mcp4_isLoaded;
	vector<float> *ph_pt_;
	TBranch *ph_pt_branch;
	bool ph_pt_isLoaded;
	vector<float> *ph_eta_;
	TBranch *ph_eta_branch;
	bool ph_eta_isLoaded;
	vector<float> *ph_phi_;
	TBranch *ph_phi_branch;
	bool ph_phi_isLoaded;
	vector<float> *ph_mass_;
	TBranch *ph_mass_branch;
	bool ph_mass_isLoaded;
	vector<int> *ph_mcMatchId_;
	TBranch *ph_mcMatchId_branch;
	bool ph_mcMatchId_isLoaded;
	vector<float> *ph_genIso04_;
	TBranch *ph_genIso04_branch;
	bool ph_genIso04_isLoaded;
	vector<float> *ph_drMinParton_;
	TBranch *ph_drMinParton_branch;
	bool ph_drMinParton_isLoaded;
	int	nGoodGenJets_;
	TBranch *nGoodGenJets_branch;
	bool nGoodGenJets_isLoaded;
	int	ngoodjets_;
	TBranch *ngoodjets_branch;
	bool ngoodjets_isLoaded;
	int	nfailjets_;
	TBranch *nfailjets_branch;
	bool nfailjets_isLoaded;
	int	ak8GoodPFJets_;
	TBranch *ak8GoodPFJets_branch;
	bool ak8GoodPFJets_isLoaded;
	int	ngoodbtags_;
	TBranch *ngoodbtags_branch;
	bool ngoodbtags_isLoaded;
	float	ak4_HT_;
	TBranch *ak4_HT_branch;
	bool ak4_HT_isLoaded;
	float	ak4_htssm_;
	TBranch *ak4_htssm_branch;
	bool ak4_htssm_isLoaded;
	float	ak4_htosm_;
	TBranch *ak4_htosm_branch;
	bool ak4_htosm_isLoaded;
	float	ak4_htratiom_;
	TBranch *ak4_htratiom_branch;
	bool ak4_htratiom_isLoaded;
	vector<float> *dphi_ak4pfjet_met_;
	TBranch *dphi_ak4pfjet_met_branch;
	bool dphi_ak4pfjet_met_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *ak4pfjets_p4_;
	TBranch *ak4pfjets_p4_branch;
	bool ak4pfjets_p4_isLoaded;
	vector<float> *ak4pfjets_pt_;
	TBranch *ak4pfjets_pt_branch;
	bool ak4pfjets_pt_isLoaded;
	vector<float> *ak4pfjets_eta_;
	TBranch *ak4pfjets_eta_branch;
	bool ak4pfjets_eta_isLoaded;
	vector<float> *ak4pfjets_phi_;
	TBranch *ak4pfjets_phi_branch;
	bool ak4pfjets_phi_isLoaded;
	vector<float> *ak4pfjets_mass_;
	TBranch *ak4pfjets_mass_branch;
	bool ak4pfjets_mass_isLoaded;
	vector<bool> *ak4pfjets_passMEDbtag_;
	TBranch *ak4pfjets_passMEDbtag_branch;
	bool ak4pfjets_passMEDbtag_isLoaded;
	vector<float> *ak4pfjets_qg_disc_;
	TBranch *ak4pfjets_qg_disc_branch;
	bool ak4pfjets_qg_disc_isLoaded;
	vector<float> *ak4pfjets_CSV_;
	TBranch *ak4pfjets_CSV_branch;
	bool ak4pfjets_CSV_isLoaded;
	vector<float> *ak4pfjets_puid_;
	TBranch *ak4pfjets_puid_branch;
	bool ak4pfjets_puid_isLoaded;
	vector<int> *ak4pfjets_parton_flavor_;
	TBranch *ak4pfjets_parton_flavor_branch;
	bool ak4pfjets_parton_flavor_isLoaded;
	vector<bool> *ak4pfjets_loose_puid_;
	TBranch *ak4pfjets_loose_puid_branch;
	bool ak4pfjets_loose_puid_isLoaded;
	vector<bool> *ak4pfjets_loose_pfid_;
	TBranch *ak4pfjets_loose_pfid_branch;
	bool ak4pfjets_loose_pfid_isLoaded;
	vector<bool> *ak4pfjets_medium_pfid_;
	TBranch *ak4pfjets_medium_pfid_branch;
	bool ak4pfjets_medium_pfid_isLoaded;
	vector<bool> *ak4pfjets_tight_pfid_;
	TBranch *ak4pfjets_tight_pfid_branch;
	bool ak4pfjets_tight_pfid_isLoaded;
	vector<float> *ak4pfjets_MEDbjet_pt_;
	TBranch *ak4pfjets_MEDbjet_pt_branch;
	bool ak4pfjets_MEDbjet_pt_isLoaded;
	float	ak4pfjets_leadMEDbjet_pt_;
	TBranch *ak4pfjets_leadMEDbjet_pt_branch;
	bool ak4pfjets_leadMEDbjet_pt_isLoaded;
	ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *ak4pfjets_leadMEDbjet_p4_;
	TBranch *ak4pfjets_leadMEDbjet_p4_branch;
	bool ak4pfjets_leadMEDbjet_p4_isLoaded;
	ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *ak4pfjets_leadbtag_p4_;
	TBranch *ak4pfjets_leadbtag_p4_branch;
	bool ak4pfjets_leadbtag_p4_isLoaded;
	vector<float> *ak4pfjets_chf_;
	TBranch *ak4pfjets_chf_branch;
	bool ak4pfjets_chf_isLoaded;
	vector<float> *ak4pfjets_nhf_;
	TBranch *ak4pfjets_nhf_branch;
	bool ak4pfjets_nhf_isLoaded;
	vector<float> *ak4pfjets_cef_;
	TBranch *ak4pfjets_cef_branch;
	bool ak4pfjets_cef_isLoaded;
	vector<float> *ak4pfjets_nef_;
	TBranch *ak4pfjets_nef_branch;
	bool ak4pfjets_nef_isLoaded;
	vector<float> *ak4pfjets_muf_;
	TBranch *ak4pfjets_muf_branch;
	bool ak4pfjets_muf_isLoaded;
	vector<int> *ak4pfjets_cm_;
	TBranch *ak4pfjets_cm_branch;
	bool ak4pfjets_cm_isLoaded;
	vector<int> *ak4pfjets_nm_;
	TBranch *ak4pfjets_nm_branch;
	bool ak4pfjets_nm_isLoaded;
	vector<int> *ak4pfjets_mc3dr_;
	TBranch *ak4pfjets_mc3dr_branch;
	bool ak4pfjets_mc3dr_isLoaded;
	vector<int> *ak4pfjets_mc3id_;
	TBranch *ak4pfjets_mc3id_branch;
	bool ak4pfjets_mc3id_isLoaded;
	vector<int> *ak4pfjets_mc3idx_;
	TBranch *ak4pfjets_mc3idx_branch;
	bool ak4pfjets_mc3idx_isLoaded;
	vector<int> *ak4pfjets_mcmotherid_;
	TBranch *ak4pfjets_mcmotherid_branch;
	bool ak4pfjets_mcmotherid_isLoaded;
	ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *ak4pfjet_overlep1_p4_;
	TBranch *ak4pfjet_overlep1_p4_branch;
	bool ak4pfjet_overlep1_p4_isLoaded;
	float	ak4pfjet_overlep1_CSV_;
	TBranch *ak4pfjet_overlep1_CSV_branch;
	bool ak4pfjet_overlep1_CSV_isLoaded;
	float	ak4pfjet_overlep1_pu_id_;
	TBranch *ak4pfjet_overlep1_pu_id_branch;
	bool ak4pfjet_overlep1_pu_id_isLoaded;
	float	ak4pfjet_overlep1_chf_;
	TBranch *ak4pfjet_overlep1_chf_branch;
	bool ak4pfjet_overlep1_chf_isLoaded;
	float	ak4pfjet_overlep1_nhf_;
	TBranch *ak4pfjet_overlep1_nhf_branch;
	bool ak4pfjet_overlep1_nhf_isLoaded;
	float	ak4pfjet_overlep1_cef_;
	TBranch *ak4pfjet_overlep1_cef_branch;
	bool ak4pfjet_overlep1_cef_isLoaded;
	float	ak4pfjet_overlep1_nef_;
	TBranch *ak4pfjet_overlep1_nef_branch;
	bool ak4pfjet_overlep1_nef_isLoaded;
	float	ak4pfjet_overlep1_muf_;
	TBranch *ak4pfjet_overlep1_muf_branch;
	bool ak4pfjet_overlep1_muf_isLoaded;
	int	ak4pfjet_overlep1_cm_;
	TBranch *ak4pfjet_overlep1_cm_branch;
	bool ak4pfjet_overlep1_cm_isLoaded;
	int	ak4pfjet_overlep1_nm_;
	TBranch *ak4pfjet_overlep1_nm_branch;
	bool ak4pfjet_overlep1_nm_isLoaded;
	ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *ak4pfjet_overlep2_p4_;
	TBranch *ak4pfjet_overlep2_p4_branch;
	bool ak4pfjet_overlep2_p4_isLoaded;
	float	ak4pfjet_overlep2_CSV_;
	TBranch *ak4pfjet_overlep2_CSV_branch;
	bool ak4pfjet_overlep2_CSV_isLoaded;
	float	ak4pfjet_overlep2_pu_id_;
	TBranch *ak4pfjet_overlep2_pu_id_branch;
	bool ak4pfjet_overlep2_pu_id_isLoaded;
	float	ak4pfjet_overlep2_chf_;
	TBranch *ak4pfjet_overlep2_chf_branch;
	bool ak4pfjet_overlep2_chf_isLoaded;
	float	ak4pfjet_overlep2_nhf_;
	TBranch *ak4pfjet_overlep2_nhf_branch;
	bool ak4pfjet_overlep2_nhf_isLoaded;
	float	ak4pfjet_overlep2_cef_;
	TBranch *ak4pfjet_overlep2_cef_branch;
	bool ak4pfjet_overlep2_cef_isLoaded;
	float	ak4pfjet_overlep2_nef_;
	TBranch *ak4pfjet_overlep2_nef_branch;
	bool ak4pfjet_overlep2_nef_isLoaded;
	float	ak4pfjet_overlep2_muf_;
	TBranch *ak4pfjet_overlep2_muf_branch;
	bool ak4pfjet_overlep2_muf_isLoaded;
	int	ak4pfjet_overlep2_cm_;
	TBranch *ak4pfjet_overlep2_cm_branch;
	bool ak4pfjet_overlep2_cm_isLoaded;
	int	ak4pfjet_overlep2_nm_;
	TBranch *ak4pfjet_overlep2_nm_branch;
	bool ak4pfjet_overlep2_nm_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *ak8pfjets_p4_;
	TBranch *ak8pfjets_p4_branch;
	bool ak8pfjets_p4_isLoaded;
	vector<float> *ak8pfjets_tau1_;
	TBranch *ak8pfjets_tau1_branch;
	bool ak8pfjets_tau1_isLoaded;
	vector<float> *ak8pfjets_tau2_;
	TBranch *ak8pfjets_tau2_branch;
	bool ak8pfjets_tau2_isLoaded;
	vector<float> *ak8pfjets_tau3_;
	TBranch *ak8pfjets_tau3_branch;
	bool ak8pfjets_tau3_isLoaded;
	vector<float> *ak8pfjets_top_mass_;
	TBranch *ak8pfjets_top_mass_branch;
	bool ak8pfjets_top_mass_isLoaded;
	vector<float> *ak8pfjets_pruned_mass_;
	TBranch *ak8pfjets_pruned_mass_branch;
	bool ak8pfjets_pruned_mass_isLoaded;
	vector<float> *ak8pfjets_trimmed_mass_;
	TBranch *ak8pfjets_trimmed_mass_branch;
	bool ak8pfjets_trimmed_mass_isLoaded;
	vector<float> *ak8pfjets_filtered_mass_;
	TBranch *ak8pfjets_filtered_mass_branch;
	bool ak8pfjets_filtered_mass_isLoaded;
	vector<float> *ak8pfjets_pu_id_;
	TBranch *ak8pfjets_pu_id_branch;
	bool ak8pfjets_pu_id_isLoaded;
	vector<int> *ak8pfjets_parton_flavor_;
	TBranch *ak8pfjets_parton_flavor_branch;
	bool ak8pfjets_parton_flavor_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *ak4genjets_p4_;
	TBranch *ak4genjets_p4_branch;
	bool ak4genjets_p4_isLoaded;
	vector<TString> *tau_IDnames_;
	TBranch *tau_IDnames_branch;
	bool tau_IDnames_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *tau_leadtrack_p4_;
	TBranch *tau_leadtrack_p4_branch;
	bool tau_leadtrack_p4_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *tau_leadneutral_p4_;
	TBranch *tau_leadneutral_p4_branch;
	bool tau_leadneutral_p4_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *tau_p4_;
	TBranch *tau_p4_branch;
	bool tau_p4_isLoaded;
	vector<vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > > *tau_isocand_p4_;
	TBranch *tau_isocand_p4_branch;
	bool tau_isocand_p4_isLoaded;
	vector<vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > > *tau_sigcand_p4_;
	TBranch *tau_sigcand_p4_branch;
	bool tau_sigcand_p4_isLoaded;
	vector<float> *tau_mass_;
	TBranch *tau_mass_branch;
	bool tau_mass_isLoaded;
	vector<vector<float> > *tau_ID_;
	TBranch *tau_ID_branch;
	bool tau_ID_isLoaded;
	vector<float> *tau_passID_;
	TBranch *tau_passID_branch;
	bool tau_passID_isLoaded;
	vector<float> *tau_charge_;
	TBranch *tau_charge_branch;
	bool tau_charge_isLoaded;
	int	ngoodtaus_;
	TBranch *ngoodtaus_branch;
	bool ngoodtaus_isLoaded;
	vector<float> *tau_againstMuonTight_;
	TBranch *tau_againstMuonTight_branch;
	bool tau_againstMuonTight_isLoaded;
	vector<float> *tau_againstElectronLoose_;
	TBranch *tau_againstElectronLoose_branch;
	bool tau_againstElectronLoose_isLoaded;
	vector<bool> *tau_isVetoTau_;
	TBranch *tau_isVetoTau_branch;
	bool tau_isVetoTau_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *isoTracks_p4_;
	TBranch *isoTracks_p4_branch;
	bool isoTracks_p4_isLoaded;
	vector<int> *isoTracks_charge_;
	TBranch *isoTracks_charge_branch;
	bool isoTracks_charge_isLoaded;
	vector<float> *isoTracks_absIso_;
	TBranch *isoTracks_absIso_branch;
	bool isoTracks_absIso_isLoaded;
	vector<float> *isoTracks_dz_;
	TBranch *isoTracks_dz_branch;
	bool isoTracks_dz_isLoaded;
	vector<int> *isoTracks_pdgId_;
	TBranch *isoTracks_pdgId_branch;
	bool isoTracks_pdgId_isLoaded;
	vector<int> *isoTracks_selectedidx_;
	TBranch *isoTracks_selectedidx_branch;
	bool isoTracks_selectedidx_isLoaded;
	int	isoTracks_nselected_;
	TBranch *isoTracks_nselected_branch;
	bool isoTracks_nselected_isLoaded;
	vector<bool> *isoTracks_isVetoTrack_;
	TBranch *isoTracks_isVetoTrack_branch;
	bool isoTracks_isVetoTrack_isLoaded;
	vector<bool> *isoTracks_isVetoTrack_v2_;
	TBranch *isoTracks_isVetoTrack_v2_branch;
	bool isoTracks_isVetoTrack_v2_isLoaded;
	vector<bool> *isoTracks_isVetoTrack_v3_;
	TBranch *isoTracks_isVetoTrack_v3_branch;
	bool isoTracks_isVetoTrack_v3_isLoaded;
	vector<bool> *genels_isfromt_;
	TBranch *genels_isfromt_branch;
	bool genels_isfromt_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genels_p4_;
	TBranch *genels_p4_branch;
	bool genels_p4_isLoaded;
	vector<float> *genels_charge_;
	TBranch *genels_charge_branch;
	bool genels_charge_isLoaded;
	vector<float> *genels_iso_;
	TBranch *genels_iso_branch;
	bool genels_iso_isLoaded;
	vector<float> *genels_mass_;
	TBranch *genels_mass_branch;
	bool genels_mass_isLoaded;
	vector<int> *genels_id_;
	TBranch *genels_id_branch;
	bool genels_id_isLoaded;
	vector<int> *genels__genpsidx_;
	TBranch *genels__genpsidx_branch;
	bool genels__genpsidx_isLoaded;
	vector<int> *genels_status_;
	TBranch *genels_status_branch;
	bool genels_status_isLoaded;
	vector<bool> *genels_fromHardProcessBeforeFSR_;
	TBranch *genels_fromHardProcessBeforeFSR_branch;
	bool genels_fromHardProcessBeforeFSR_isLoaded;
	vector<bool> *genels_fromHardProcessDecayed_;
	TBranch *genels_fromHardProcessDecayed_branch;
	bool genels_fromHardProcessDecayed_isLoaded;
	vector<bool> *genels_fromHardProcessFinalState_;
	TBranch *genels_fromHardProcessFinalState_branch;
	bool genels_fromHardProcessFinalState_isLoaded;
	vector<bool> *genels_isDirectHardProcessTauDecayProductFinalState_;
	TBranch *genels_isDirectHardProcessTauDecayProductFinalState_branch;
	bool genels_isDirectHardProcessTauDecayProductFinalState_isLoaded;
	vector<bool> *genels_isDirectPromptTauDecayProductFinalState_;
	TBranch *genels_isDirectPromptTauDecayProductFinalState_branch;
	bool genels_isDirectPromptTauDecayProductFinalState_isLoaded;
	vector<bool> *genels_isHardProcess_;
	TBranch *genels_isHardProcess_branch;
	bool genels_isHardProcess_isLoaded;
	vector<bool> *genels_isLastCopy_;
	TBranch *genels_isLastCopy_branch;
	bool genels_isLastCopy_isLoaded;
	vector<bool> *genels_isLastCopyBeforeFSR_;
	TBranch *genels_isLastCopyBeforeFSR_branch;
	bool genels_isLastCopyBeforeFSR_isLoaded;
	vector<bool> *genels_isMostlyLikePythia6Status3_;
	TBranch *genels_isMostlyLikePythia6Status3_branch;
	bool genels_isMostlyLikePythia6Status3_isLoaded;
	vector<bool> *genels_isPromptDecayed_;
	TBranch *genels_isPromptDecayed_branch;
	bool genels_isPromptDecayed_isLoaded;
	vector<bool> *genels_isPromptFinalState_;
	TBranch *genels_isPromptFinalState_branch;
	bool genels_isPromptFinalState_isLoaded;
	vector<vector<int> > *genels_lepdaughter_id_;
	TBranch *genels_lepdaughter_id_branch;
	bool genels_lepdaughter_id_isLoaded;
	vector<int> *genels_gentaudecay_;
	TBranch *genels_gentaudecay_branch;
	bool genels_gentaudecay_isLoaded;
	int	gen_nfromtels__;
	TBranch *gen_nfromtels__branch;
	bool gen_nfromtels__isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genels_motherp4_;
	TBranch *genels_motherp4_branch;
	bool genels_motherp4_isLoaded;
	vector<float> *genels_mothercharge_;
	TBranch *genels_mothercharge_branch;
	bool genels_mothercharge_isLoaded;
	vector<int> *genels_motherid_;
	TBranch *genels_motherid_branch;
	bool genels_motherid_isLoaded;
	vector<int> *genels_motheridx_;
	TBranch *genels_motheridx_branch;
	bool genels_motheridx_isLoaded;
	vector<int> *genels_motherstatus_;
	TBranch *genels_motherstatus_branch;
	bool genels_motherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genels_gmotherp4_;
	TBranch *genels_gmotherp4_branch;
	bool genels_gmotherp4_isLoaded;
	vector<int> *genels_gmothercharge_;
	TBranch *genels_gmothercharge_branch;
	bool genels_gmothercharge_isLoaded;
	vector<int> *genels_gmotherid_;
	TBranch *genels_gmotherid_branch;
	bool genels_gmotherid_isLoaded;
	vector<int> *genels_gmotheridx_;
	TBranch *genels_gmotheridx_branch;
	bool genels_gmotheridx_isLoaded;
	vector<int> *genels_gmotherstatus_;
	TBranch *genels_gmotherstatus_branch;
	bool genels_gmotherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genels_simplemotherp4_;
	TBranch *genels_simplemotherp4_branch;
	bool genels_simplemotherp4_isLoaded;
	vector<int> *genels_simplemothercharge_;
	TBranch *genels_simplemothercharge_branch;
	bool genels_simplemothercharge_isLoaded;
	vector<int> *genels_simplemotherid_;
	TBranch *genels_simplemotherid_branch;
	bool genels_simplemotherid_isLoaded;
	vector<int> *genels_simplemotheridx_;
	TBranch *genels_simplemotheridx_branch;
	bool genels_simplemotheridx_isLoaded;
	vector<int> *genels_simplemotherstatus_;
	TBranch *genels_simplemotherstatus_branch;
	bool genels_simplemotherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genels_simplegmotherp4_;
	TBranch *genels_simplegmotherp4_branch;
	bool genels_simplegmotherp4_isLoaded;
	vector<int> *genels_simplegmothercharge_;
	TBranch *genels_simplegmothercharge_branch;
	bool genels_simplegmothercharge_isLoaded;
	vector<int> *genels_simplegmotherid_;
	TBranch *genels_simplegmotherid_branch;
	bool genels_simplegmotherid_isLoaded;
	vector<int> *genels_simplegmotheridx_;
	TBranch *genels_simplegmotheridx_branch;
	bool genels_simplegmotheridx_isLoaded;
	vector<int> *genels_simplegmotherstatus_;
	TBranch *genels_simplegmotherstatus_branch;
	bool genels_simplegmotherstatus_isLoaded;
	vector<bool> *genmus_isfromt_;
	TBranch *genmus_isfromt_branch;
	bool genmus_isfromt_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genmus_p4_;
	TBranch *genmus_p4_branch;
	bool genmus_p4_isLoaded;
	vector<float> *genmus_charge_;
	TBranch *genmus_charge_branch;
	bool genmus_charge_isLoaded;
	vector<float> *genmus_iso_;
	TBranch *genmus_iso_branch;
	bool genmus_iso_isLoaded;
	vector<float> *genmus_mass_;
	TBranch *genmus_mass_branch;
	bool genmus_mass_isLoaded;
	vector<int> *genmus_id_;
	TBranch *genmus_id_branch;
	bool genmus_id_isLoaded;
	vector<int> *genmus__genpsidx_;
	TBranch *genmus__genpsidx_branch;
	bool genmus__genpsidx_isLoaded;
	vector<int> *genmus_status_;
	TBranch *genmus_status_branch;
	bool genmus_status_isLoaded;
	vector<bool> *genmus_fromHardProcessBeforeFSR_;
	TBranch *genmus_fromHardProcessBeforeFSR_branch;
	bool genmus_fromHardProcessBeforeFSR_isLoaded;
	vector<bool> *genmus_fromHardProcessDecayed_;
	TBranch *genmus_fromHardProcessDecayed_branch;
	bool genmus_fromHardProcessDecayed_isLoaded;
	vector<bool> *genmus_fromHardProcessFinalState_;
	TBranch *genmus_fromHardProcessFinalState_branch;
	bool genmus_fromHardProcessFinalState_isLoaded;
	vector<bool> *genmus_isDirectHardProcessTauDecayProductFinalState_;
	TBranch *genmus_isDirectHardProcessTauDecayProductFinalState_branch;
	bool genmus_isDirectHardProcessTauDecayProductFinalState_isLoaded;
	vector<bool> *genmus_isDirectPromptTauDecayProductFinalState_;
	TBranch *genmus_isDirectPromptTauDecayProductFinalState_branch;
	bool genmus_isDirectPromptTauDecayProductFinalState_isLoaded;
	vector<bool> *genmus_isHardProcess_;
	TBranch *genmus_isHardProcess_branch;
	bool genmus_isHardProcess_isLoaded;
	vector<bool> *genmus_isLastCopy_;
	TBranch *genmus_isLastCopy_branch;
	bool genmus_isLastCopy_isLoaded;
	vector<bool> *genmus_isLastCopyBeforeFSR_;
	TBranch *genmus_isLastCopyBeforeFSR_branch;
	bool genmus_isLastCopyBeforeFSR_isLoaded;
	vector<bool> *genmus_isMostlyLikePythia6Status3_;
	TBranch *genmus_isMostlyLikePythia6Status3_branch;
	bool genmus_isMostlyLikePythia6Status3_isLoaded;
	vector<bool> *genmus_isPromptDecayed_;
	TBranch *genmus_isPromptDecayed_branch;
	bool genmus_isPromptDecayed_isLoaded;
	vector<bool> *genmus_isPromptFinalState_;
	TBranch *genmus_isPromptFinalState_branch;
	bool genmus_isPromptFinalState_isLoaded;
	vector<vector<int> > *genmus_lepdaughter_id_;
	TBranch *genmus_lepdaughter_id_branch;
	bool genmus_lepdaughter_id_isLoaded;
	vector<int> *genmus_gentaudecay_;
	TBranch *genmus_gentaudecay_branch;
	bool genmus_gentaudecay_isLoaded;
	int	gen_nfromtmus__;
	TBranch *gen_nfromtmus__branch;
	bool gen_nfromtmus__isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genmus_motherp4_;
	TBranch *genmus_motherp4_branch;
	bool genmus_motherp4_isLoaded;
	vector<float> *genmus_mothercharge_;
	TBranch *genmus_mothercharge_branch;
	bool genmus_mothercharge_isLoaded;
	vector<int> *genmus_motherid_;
	TBranch *genmus_motherid_branch;
	bool genmus_motherid_isLoaded;
	vector<int> *genmus_motheridx_;
	TBranch *genmus_motheridx_branch;
	bool genmus_motheridx_isLoaded;
	vector<int> *genmus_motherstatus_;
	TBranch *genmus_motherstatus_branch;
	bool genmus_motherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genmus_gmotherp4_;
	TBranch *genmus_gmotherp4_branch;
	bool genmus_gmotherp4_isLoaded;
	vector<int> *genmus_gmothercharge_;
	TBranch *genmus_gmothercharge_branch;
	bool genmus_gmothercharge_isLoaded;
	vector<int> *genmus_gmotherid_;
	TBranch *genmus_gmotherid_branch;
	bool genmus_gmotherid_isLoaded;
	vector<int> *genmus_gmotheridx_;
	TBranch *genmus_gmotheridx_branch;
	bool genmus_gmotheridx_isLoaded;
	vector<int> *genmus_gmotherstatus_;
	TBranch *genmus_gmotherstatus_branch;
	bool genmus_gmotherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genmus_simplemotherp4_;
	TBranch *genmus_simplemotherp4_branch;
	bool genmus_simplemotherp4_isLoaded;
	vector<int> *genmus_simplemothercharge_;
	TBranch *genmus_simplemothercharge_branch;
	bool genmus_simplemothercharge_isLoaded;
	vector<int> *genmus_simplemotherid_;
	TBranch *genmus_simplemotherid_branch;
	bool genmus_simplemotherid_isLoaded;
	vector<int> *genmus_simplemotheridx_;
	TBranch *genmus_simplemotheridx_branch;
	bool genmus_simplemotheridx_isLoaded;
	vector<int> *genmus_simplemotherstatus_;
	TBranch *genmus_simplemotherstatus_branch;
	bool genmus_simplemotherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genmus_simplegmotherp4_;
	TBranch *genmus_simplegmotherp4_branch;
	bool genmus_simplegmotherp4_isLoaded;
	vector<int> *genmus_simplegmothercharge_;
	TBranch *genmus_simplegmothercharge_branch;
	bool genmus_simplegmothercharge_isLoaded;
	vector<int> *genmus_simplegmotherid_;
	TBranch *genmus_simplegmotherid_branch;
	bool genmus_simplegmotherid_isLoaded;
	vector<int> *genmus_simplegmotheridx_;
	TBranch *genmus_simplegmotheridx_branch;
	bool genmus_simplegmotheridx_isLoaded;
	vector<int> *genmus_simplegmotherstatus_;
	TBranch *genmus_simplegmotherstatus_branch;
	bool genmus_simplegmotherstatus_isLoaded;
	vector<bool> *gentaus_isfromt_;
	TBranch *gentaus_isfromt_branch;
	bool gentaus_isfromt_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *gentaus_p4_;
	TBranch *gentaus_p4_branch;
	bool gentaus_p4_isLoaded;
	vector<float> *gentaus_charge_;
	TBranch *gentaus_charge_branch;
	bool gentaus_charge_isLoaded;
	vector<float> *gentaus_iso_;
	TBranch *gentaus_iso_branch;
	bool gentaus_iso_isLoaded;
	vector<float> *gentaus_mass_;
	TBranch *gentaus_mass_branch;
	bool gentaus_mass_isLoaded;
	vector<int> *gentaus_id_;
	TBranch *gentaus_id_branch;
	bool gentaus_id_isLoaded;
	vector<int> *gentaus__genpsidx_;
	TBranch *gentaus__genpsidx_branch;
	bool gentaus__genpsidx_isLoaded;
	vector<int> *gentaus_status_;
	TBranch *gentaus_status_branch;
	bool gentaus_status_isLoaded;
	vector<bool> *gentaus_fromHardProcessBeforeFSR_;
	TBranch *gentaus_fromHardProcessBeforeFSR_branch;
	bool gentaus_fromHardProcessBeforeFSR_isLoaded;
	vector<bool> *gentaus_fromHardProcessDecayed_;
	TBranch *gentaus_fromHardProcessDecayed_branch;
	bool gentaus_fromHardProcessDecayed_isLoaded;
	vector<bool> *gentaus_fromHardProcessFinalState_;
	TBranch *gentaus_fromHardProcessFinalState_branch;
	bool gentaus_fromHardProcessFinalState_isLoaded;
	vector<bool> *gentaus_isDirectHardProcessTauDecayProductFinalState_;
	TBranch *gentaus_isDirectHardProcessTauDecayProductFinalState_branch;
	bool gentaus_isDirectHardProcessTauDecayProductFinalState_isLoaded;
	vector<bool> *gentaus_isDirectPromptTauDecayProductFinalState_;
	TBranch *gentaus_isDirectPromptTauDecayProductFinalState_branch;
	bool gentaus_isDirectPromptTauDecayProductFinalState_isLoaded;
	vector<bool> *gentaus_isHardProcess_;
	TBranch *gentaus_isHardProcess_branch;
	bool gentaus_isHardProcess_isLoaded;
	vector<bool> *gentaus_isLastCopy_;
	TBranch *gentaus_isLastCopy_branch;
	bool gentaus_isLastCopy_isLoaded;
	vector<bool> *gentaus_isLastCopyBeforeFSR_;
	TBranch *gentaus_isLastCopyBeforeFSR_branch;
	bool gentaus_isLastCopyBeforeFSR_isLoaded;
	vector<bool> *gentaus_isMostlyLikePythia6Status3_;
	TBranch *gentaus_isMostlyLikePythia6Status3_branch;
	bool gentaus_isMostlyLikePythia6Status3_isLoaded;
	vector<bool> *gentaus_isPromptDecayed_;
	TBranch *gentaus_isPromptDecayed_branch;
	bool gentaus_isPromptDecayed_isLoaded;
	vector<bool> *gentaus_isPromptFinalState_;
	TBranch *gentaus_isPromptFinalState_branch;
	bool gentaus_isPromptFinalState_isLoaded;
	vector<vector<int> > *gentaus_lepdaughter_id_;
	TBranch *gentaus_lepdaughter_id_branch;
	bool gentaus_lepdaughter_id_isLoaded;
	vector<int> *gentaus_gentaudecay_;
	TBranch *gentaus_gentaudecay_branch;
	bool gentaus_gentaudecay_isLoaded;
	int	gen_nfromttaus__;
	TBranch *gen_nfromttaus__branch;
	bool gen_nfromttaus__isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *gentaus_motherp4_;
	TBranch *gentaus_motherp4_branch;
	bool gentaus_motherp4_isLoaded;
	vector<float> *gentaus_mothercharge_;
	TBranch *gentaus_mothercharge_branch;
	bool gentaus_mothercharge_isLoaded;
	vector<int> *gentaus_motherid_;
	TBranch *gentaus_motherid_branch;
	bool gentaus_motherid_isLoaded;
	vector<int> *gentaus_motheridx_;
	TBranch *gentaus_motheridx_branch;
	bool gentaus_motheridx_isLoaded;
	vector<int> *gentaus_motherstatus_;
	TBranch *gentaus_motherstatus_branch;
	bool gentaus_motherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *gentaus_gmotherp4_;
	TBranch *gentaus_gmotherp4_branch;
	bool gentaus_gmotherp4_isLoaded;
	vector<int> *gentaus_gmothercharge_;
	TBranch *gentaus_gmothercharge_branch;
	bool gentaus_gmothercharge_isLoaded;
	vector<int> *gentaus_gmotherid_;
	TBranch *gentaus_gmotherid_branch;
	bool gentaus_gmotherid_isLoaded;
	vector<int> *gentaus_gmotheridx_;
	TBranch *gentaus_gmotheridx_branch;
	bool gentaus_gmotheridx_isLoaded;
	vector<int> *gentaus_gmotherstatus_;
	TBranch *gentaus_gmotherstatus_branch;
	bool gentaus_gmotherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *gentaus_simplemotherp4_;
	TBranch *gentaus_simplemotherp4_branch;
	bool gentaus_simplemotherp4_isLoaded;
	vector<int> *gentaus_simplemothercharge_;
	TBranch *gentaus_simplemothercharge_branch;
	bool gentaus_simplemothercharge_isLoaded;
	vector<int> *gentaus_simplemotherid_;
	TBranch *gentaus_simplemotherid_branch;
	bool gentaus_simplemotherid_isLoaded;
	vector<int> *gentaus_simplemotheridx_;
	TBranch *gentaus_simplemotheridx_branch;
	bool gentaus_simplemotheridx_isLoaded;
	vector<int> *gentaus_simplemotherstatus_;
	TBranch *gentaus_simplemotherstatus_branch;
	bool gentaus_simplemotherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *gentaus_simplegmotherp4_;
	TBranch *gentaus_simplegmotherp4_branch;
	bool gentaus_simplegmotherp4_isLoaded;
	vector<int> *gentaus_simplegmothercharge_;
	TBranch *gentaus_simplegmothercharge_branch;
	bool gentaus_simplegmothercharge_isLoaded;
	vector<int> *gentaus_simplegmotherid_;
	TBranch *gentaus_simplegmotherid_branch;
	bool gentaus_simplegmotherid_isLoaded;
	vector<int> *gentaus_simplegmotheridx_;
	TBranch *gentaus_simplegmotheridx_branch;
	bool gentaus_simplegmotheridx_isLoaded;
	vector<int> *gentaus_simplegmotherstatus_;
	TBranch *gentaus_simplegmotherstatus_branch;
	bool gentaus_simplegmotherstatus_isLoaded;
	vector<bool> *gennuels_isfromt_;
	TBranch *gennuels_isfromt_branch;
	bool gennuels_isfromt_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *gennuels_p4_;
	TBranch *gennuels_p4_branch;
	bool gennuels_p4_isLoaded;
	vector<float> *gennuels_charge_;
	TBranch *gennuels_charge_branch;
	bool gennuels_charge_isLoaded;
	vector<float> *gennuels_iso_;
	TBranch *gennuels_iso_branch;
	bool gennuels_iso_isLoaded;
	vector<float> *gennuels_mass_;
	TBranch *gennuels_mass_branch;
	bool gennuels_mass_isLoaded;
	vector<int> *gennuels_id_;
	TBranch *gennuels_id_branch;
	bool gennuels_id_isLoaded;
	vector<int> *gennuels__genpsidx_;
	TBranch *gennuels__genpsidx_branch;
	bool gennuels__genpsidx_isLoaded;
	vector<int> *gennuels_status_;
	TBranch *gennuels_status_branch;
	bool gennuels_status_isLoaded;
	vector<bool> *gennuels_fromHardProcessBeforeFSR_;
	TBranch *gennuels_fromHardProcessBeforeFSR_branch;
	bool gennuels_fromHardProcessBeforeFSR_isLoaded;
	vector<bool> *gennuels_fromHardProcessDecayed_;
	TBranch *gennuels_fromHardProcessDecayed_branch;
	bool gennuels_fromHardProcessDecayed_isLoaded;
	vector<bool> *gennuels_fromHardProcessFinalState_;
	TBranch *gennuels_fromHardProcessFinalState_branch;
	bool gennuels_fromHardProcessFinalState_isLoaded;
	vector<bool> *gennuels_isDirectHardProcessTauDecayProductFinalState_;
	TBranch *gennuels_isDirectHardProcessTauDecayProductFinalState_branch;
	bool gennuels_isDirectHardProcessTauDecayProductFinalState_isLoaded;
	vector<bool> *gennuels_isDirectPromptTauDecayProductFinalState_;
	TBranch *gennuels_isDirectPromptTauDecayProductFinalState_branch;
	bool gennuels_isDirectPromptTauDecayProductFinalState_isLoaded;
	vector<bool> *gennuels_isHardProcess_;
	TBranch *gennuels_isHardProcess_branch;
	bool gennuels_isHardProcess_isLoaded;
	vector<bool> *gennuels_isLastCopy_;
	TBranch *gennuels_isLastCopy_branch;
	bool gennuels_isLastCopy_isLoaded;
	vector<bool> *gennuels_isLastCopyBeforeFSR_;
	TBranch *gennuels_isLastCopyBeforeFSR_branch;
	bool gennuels_isLastCopyBeforeFSR_isLoaded;
	vector<bool> *gennuels_isMostlyLikePythia6Status3_;
	TBranch *gennuels_isMostlyLikePythia6Status3_branch;
	bool gennuels_isMostlyLikePythia6Status3_isLoaded;
	vector<bool> *gennuels_isPromptDecayed_;
	TBranch *gennuels_isPromptDecayed_branch;
	bool gennuels_isPromptDecayed_isLoaded;
	vector<bool> *gennuels_isPromptFinalState_;
	TBranch *gennuels_isPromptFinalState_branch;
	bool gennuels_isPromptFinalState_isLoaded;
	vector<vector<int> > *gennuels_lepdaughter_id_;
	TBranch *gennuels_lepdaughter_id_branch;
	bool gennuels_lepdaughter_id_isLoaded;
	vector<int> *gennuels_gentaudecay_;
	TBranch *gennuels_gentaudecay_branch;
	bool gennuels_gentaudecay_isLoaded;
	int	gen_nfromtnuels__;
	TBranch *gen_nfromtnuels__branch;
	bool gen_nfromtnuels__isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *gennuels_motherp4_;
	TBranch *gennuels_motherp4_branch;
	bool gennuels_motherp4_isLoaded;
	vector<float> *gennuels_mothercharge_;
	TBranch *gennuels_mothercharge_branch;
	bool gennuels_mothercharge_isLoaded;
	vector<int> *gennuels_motherid_;
	TBranch *gennuels_motherid_branch;
	bool gennuels_motherid_isLoaded;
	vector<int> *gennuels_motheridx_;
	TBranch *gennuels_motheridx_branch;
	bool gennuels_motheridx_isLoaded;
	vector<int> *gennuels_motherstatus_;
	TBranch *gennuels_motherstatus_branch;
	bool gennuels_motherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *gennuels_gmotherp4_;
	TBranch *gennuels_gmotherp4_branch;
	bool gennuels_gmotherp4_isLoaded;
	vector<int> *gennuels_gmothercharge_;
	TBranch *gennuels_gmothercharge_branch;
	bool gennuels_gmothercharge_isLoaded;
	vector<int> *gennuels_gmotherid_;
	TBranch *gennuels_gmotherid_branch;
	bool gennuels_gmotherid_isLoaded;
	vector<int> *gennuels_gmotheridx_;
	TBranch *gennuels_gmotheridx_branch;
	bool gennuels_gmotheridx_isLoaded;
	vector<int> *gennuels_gmotherstatus_;
	TBranch *gennuels_gmotherstatus_branch;
	bool gennuels_gmotherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *gennuels_simplemotherp4_;
	TBranch *gennuels_simplemotherp4_branch;
	bool gennuels_simplemotherp4_isLoaded;
	vector<int> *gennuels_simplemothercharge_;
	TBranch *gennuels_simplemothercharge_branch;
	bool gennuels_simplemothercharge_isLoaded;
	vector<int> *gennuels_simplemotherid_;
	TBranch *gennuels_simplemotherid_branch;
	bool gennuels_simplemotherid_isLoaded;
	vector<int> *gennuels_simplemotheridx_;
	TBranch *gennuels_simplemotheridx_branch;
	bool gennuels_simplemotheridx_isLoaded;
	vector<int> *gennuels_simplemotherstatus_;
	TBranch *gennuels_simplemotherstatus_branch;
	bool gennuels_simplemotherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *gennuels_simplegmotherp4_;
	TBranch *gennuels_simplegmotherp4_branch;
	bool gennuels_simplegmotherp4_isLoaded;
	vector<int> *gennuels_simplegmothercharge_;
	TBranch *gennuels_simplegmothercharge_branch;
	bool gennuels_simplegmothercharge_isLoaded;
	vector<int> *gennuels_simplegmotherid_;
	TBranch *gennuels_simplegmotherid_branch;
	bool gennuels_simplegmotherid_isLoaded;
	vector<int> *gennuels_simplegmotheridx_;
	TBranch *gennuels_simplegmotheridx_branch;
	bool gennuels_simplegmotheridx_isLoaded;
	vector<int> *gennuels_simplegmotherstatus_;
	TBranch *gennuels_simplegmotherstatus_branch;
	bool gennuels_simplegmotherstatus_isLoaded;
	vector<bool> *gennumus_isfromt_;
	TBranch *gennumus_isfromt_branch;
	bool gennumus_isfromt_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *gennumus_p4_;
	TBranch *gennumus_p4_branch;
	bool gennumus_p4_isLoaded;
	vector<float> *gennumus_charge_;
	TBranch *gennumus_charge_branch;
	bool gennumus_charge_isLoaded;
	vector<float> *gennumus_iso_;
	TBranch *gennumus_iso_branch;
	bool gennumus_iso_isLoaded;
	vector<float> *gennumus_mass_;
	TBranch *gennumus_mass_branch;
	bool gennumus_mass_isLoaded;
	vector<int> *gennumus_id_;
	TBranch *gennumus_id_branch;
	bool gennumus_id_isLoaded;
	vector<int> *gennumus__genpsidx_;
	TBranch *gennumus__genpsidx_branch;
	bool gennumus__genpsidx_isLoaded;
	vector<int> *gennumus_status_;
	TBranch *gennumus_status_branch;
	bool gennumus_status_isLoaded;
	vector<bool> *gennumus_fromHardProcessBeforeFSR_;
	TBranch *gennumus_fromHardProcessBeforeFSR_branch;
	bool gennumus_fromHardProcessBeforeFSR_isLoaded;
	vector<bool> *gennumus_fromHardProcessDecayed_;
	TBranch *gennumus_fromHardProcessDecayed_branch;
	bool gennumus_fromHardProcessDecayed_isLoaded;
	vector<bool> *gennumus_fromHardProcessFinalState_;
	TBranch *gennumus_fromHardProcessFinalState_branch;
	bool gennumus_fromHardProcessFinalState_isLoaded;
	vector<bool> *gennumus_isDirectHardProcessTauDecayProductFinalState_;
	TBranch *gennumus_isDirectHardProcessTauDecayProductFinalState_branch;
	bool gennumus_isDirectHardProcessTauDecayProductFinalState_isLoaded;
	vector<bool> *gennumus_isDirectPromptTauDecayProductFinalState_;
	TBranch *gennumus_isDirectPromptTauDecayProductFinalState_branch;
	bool gennumus_isDirectPromptTauDecayProductFinalState_isLoaded;
	vector<bool> *gennumus_isHardProcess_;
	TBranch *gennumus_isHardProcess_branch;
	bool gennumus_isHardProcess_isLoaded;
	vector<bool> *gennumus_isLastCopy_;
	TBranch *gennumus_isLastCopy_branch;
	bool gennumus_isLastCopy_isLoaded;
	vector<bool> *gennumus_isLastCopyBeforeFSR_;
	TBranch *gennumus_isLastCopyBeforeFSR_branch;
	bool gennumus_isLastCopyBeforeFSR_isLoaded;
	vector<bool> *gennumus_isMostlyLikePythia6Status3_;
	TBranch *gennumus_isMostlyLikePythia6Status3_branch;
	bool gennumus_isMostlyLikePythia6Status3_isLoaded;
	vector<bool> *gennumus_isPromptDecayed_;
	TBranch *gennumus_isPromptDecayed_branch;
	bool gennumus_isPromptDecayed_isLoaded;
	vector<bool> *gennumus_isPromptFinalState_;
	TBranch *gennumus_isPromptFinalState_branch;
	bool gennumus_isPromptFinalState_isLoaded;
	vector<vector<int> > *gennumus_lepdaughter_id_;
	TBranch *gennumus_lepdaughter_id_branch;
	bool gennumus_lepdaughter_id_isLoaded;
	vector<int> *gennumus_gentaudecay_;
	TBranch *gennumus_gentaudecay_branch;
	bool gennumus_gentaudecay_isLoaded;
	int	gen_nfromtnumus__;
	TBranch *gen_nfromtnumus__branch;
	bool gen_nfromtnumus__isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *gennumus_motherp4_;
	TBranch *gennumus_motherp4_branch;
	bool gennumus_motherp4_isLoaded;
	vector<float> *gennumus_mothercharge_;
	TBranch *gennumus_mothercharge_branch;
	bool gennumus_mothercharge_isLoaded;
	vector<int> *gennumus_motherid_;
	TBranch *gennumus_motherid_branch;
	bool gennumus_motherid_isLoaded;
	vector<int> *gennumus_motheridx_;
	TBranch *gennumus_motheridx_branch;
	bool gennumus_motheridx_isLoaded;
	vector<int> *gennumus_motherstatus_;
	TBranch *gennumus_motherstatus_branch;
	bool gennumus_motherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *gennumus_gmotherp4_;
	TBranch *gennumus_gmotherp4_branch;
	bool gennumus_gmotherp4_isLoaded;
	vector<int> *gennumus_gmothercharge_;
	TBranch *gennumus_gmothercharge_branch;
	bool gennumus_gmothercharge_isLoaded;
	vector<int> *gennumus_gmotherid_;
	TBranch *gennumus_gmotherid_branch;
	bool gennumus_gmotherid_isLoaded;
	vector<int> *gennumus_gmotheridx_;
	TBranch *gennumus_gmotheridx_branch;
	bool gennumus_gmotheridx_isLoaded;
	vector<int> *gennumus_gmotherstatus_;
	TBranch *gennumus_gmotherstatus_branch;
	bool gennumus_gmotherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *gennumus_simplemotherp4_;
	TBranch *gennumus_simplemotherp4_branch;
	bool gennumus_simplemotherp4_isLoaded;
	vector<int> *gennumus_simplemothercharge_;
	TBranch *gennumus_simplemothercharge_branch;
	bool gennumus_simplemothercharge_isLoaded;
	vector<int> *gennumus_simplemotherid_;
	TBranch *gennumus_simplemotherid_branch;
	bool gennumus_simplemotherid_isLoaded;
	vector<int> *gennumus_simplemotheridx_;
	TBranch *gennumus_simplemotheridx_branch;
	bool gennumus_simplemotheridx_isLoaded;
	vector<int> *gennumus_simplemotherstatus_;
	TBranch *gennumus_simplemotherstatus_branch;
	bool gennumus_simplemotherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *gennumus_simplegmotherp4_;
	TBranch *gennumus_simplegmotherp4_branch;
	bool gennumus_simplegmotherp4_isLoaded;
	vector<int> *gennumus_simplegmothercharge_;
	TBranch *gennumus_simplegmothercharge_branch;
	bool gennumus_simplegmothercharge_isLoaded;
	vector<int> *gennumus_simplegmotherid_;
	TBranch *gennumus_simplegmotherid_branch;
	bool gennumus_simplegmotherid_isLoaded;
	vector<int> *gennumus_simplegmotheridx_;
	TBranch *gennumus_simplegmotheridx_branch;
	bool gennumus_simplegmotheridx_isLoaded;
	vector<int> *gennumus_simplegmotherstatus_;
	TBranch *gennumus_simplegmotherstatus_branch;
	bool gennumus_simplegmotherstatus_isLoaded;
	vector<bool> *gennutaus_isfromt_;
	TBranch *gennutaus_isfromt_branch;
	bool gennutaus_isfromt_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *gennutaus_p4_;
	TBranch *gennutaus_p4_branch;
	bool gennutaus_p4_isLoaded;
	vector<float> *gennutaus_charge_;
	TBranch *gennutaus_charge_branch;
	bool gennutaus_charge_isLoaded;
	vector<float> *gennutaus_iso_;
	TBranch *gennutaus_iso_branch;
	bool gennutaus_iso_isLoaded;
	vector<float> *gennutaus_mass_;
	TBranch *gennutaus_mass_branch;
	bool gennutaus_mass_isLoaded;
	vector<int> *gennutaus_id_;
	TBranch *gennutaus_id_branch;
	bool gennutaus_id_isLoaded;
	vector<int> *gennutaus__genpsidx_;
	TBranch *gennutaus__genpsidx_branch;
	bool gennutaus__genpsidx_isLoaded;
	vector<int> *gennutaus_status_;
	TBranch *gennutaus_status_branch;
	bool gennutaus_status_isLoaded;
	vector<bool> *gennutaus_fromHardProcessBeforeFSR_;
	TBranch *gennutaus_fromHardProcessBeforeFSR_branch;
	bool gennutaus_fromHardProcessBeforeFSR_isLoaded;
	vector<bool> *gennutaus_fromHardProcessDecayed_;
	TBranch *gennutaus_fromHardProcessDecayed_branch;
	bool gennutaus_fromHardProcessDecayed_isLoaded;
	vector<bool> *gennutaus_fromHardProcessFinalState_;
	TBranch *gennutaus_fromHardProcessFinalState_branch;
	bool gennutaus_fromHardProcessFinalState_isLoaded;
	vector<bool> *gennutaus_isDirectHardProcessTauDecayProductFinalState_;
	TBranch *gennutaus_isDirectHardProcessTauDecayProductFinalState_branch;
	bool gennutaus_isDirectHardProcessTauDecayProductFinalState_isLoaded;
	vector<bool> *gennutaus_isDirectPromptTauDecayProductFinalState_;
	TBranch *gennutaus_isDirectPromptTauDecayProductFinalState_branch;
	bool gennutaus_isDirectPromptTauDecayProductFinalState_isLoaded;
	vector<bool> *gennutaus_isHardProcess_;
	TBranch *gennutaus_isHardProcess_branch;
	bool gennutaus_isHardProcess_isLoaded;
	vector<bool> *gennutaus_isLastCopy_;
	TBranch *gennutaus_isLastCopy_branch;
	bool gennutaus_isLastCopy_isLoaded;
	vector<bool> *gennutaus_isLastCopyBeforeFSR_;
	TBranch *gennutaus_isLastCopyBeforeFSR_branch;
	bool gennutaus_isLastCopyBeforeFSR_isLoaded;
	vector<bool> *gennutaus_isMostlyLikePythia6Status3_;
	TBranch *gennutaus_isMostlyLikePythia6Status3_branch;
	bool gennutaus_isMostlyLikePythia6Status3_isLoaded;
	vector<bool> *gennutaus_isPromptDecayed_;
	TBranch *gennutaus_isPromptDecayed_branch;
	bool gennutaus_isPromptDecayed_isLoaded;
	vector<bool> *gennutaus_isPromptFinalState_;
	TBranch *gennutaus_isPromptFinalState_branch;
	bool gennutaus_isPromptFinalState_isLoaded;
	vector<vector<int> > *gennutaus_lepdaughter_id_;
	TBranch *gennutaus_lepdaughter_id_branch;
	bool gennutaus_lepdaughter_id_isLoaded;
	vector<int> *gennutaus_gentaudecay_;
	TBranch *gennutaus_gentaudecay_branch;
	bool gennutaus_gentaudecay_isLoaded;
	int	gen_nfromtnutaus__;
	TBranch *gen_nfromtnutaus__branch;
	bool gen_nfromtnutaus__isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *gennutaus_motherp4_;
	TBranch *gennutaus_motherp4_branch;
	bool gennutaus_motherp4_isLoaded;
	vector<float> *gennutaus_mothercharge_;
	TBranch *gennutaus_mothercharge_branch;
	bool gennutaus_mothercharge_isLoaded;
	vector<int> *gennutaus_motherid_;
	TBranch *gennutaus_motherid_branch;
	bool gennutaus_motherid_isLoaded;
	vector<int> *gennutaus_motheridx_;
	TBranch *gennutaus_motheridx_branch;
	bool gennutaus_motheridx_isLoaded;
	vector<int> *gennutaus_motherstatus_;
	TBranch *gennutaus_motherstatus_branch;
	bool gennutaus_motherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *gennutaus_gmotherp4_;
	TBranch *gennutaus_gmotherp4_branch;
	bool gennutaus_gmotherp4_isLoaded;
	vector<int> *gennutaus_gmothercharge_;
	TBranch *gennutaus_gmothercharge_branch;
	bool gennutaus_gmothercharge_isLoaded;
	vector<int> *gennutaus_gmotherid_;
	TBranch *gennutaus_gmotherid_branch;
	bool gennutaus_gmotherid_isLoaded;
	vector<int> *gennutaus_gmotheridx_;
	TBranch *gennutaus_gmotheridx_branch;
	bool gennutaus_gmotheridx_isLoaded;
	vector<int> *gennutaus_gmotherstatus_;
	TBranch *gennutaus_gmotherstatus_branch;
	bool gennutaus_gmotherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *gennutaus_simplemotherp4_;
	TBranch *gennutaus_simplemotherp4_branch;
	bool gennutaus_simplemotherp4_isLoaded;
	vector<int> *gennutaus_simplemothercharge_;
	TBranch *gennutaus_simplemothercharge_branch;
	bool gennutaus_simplemothercharge_isLoaded;
	vector<int> *gennutaus_simplemotherid_;
	TBranch *gennutaus_simplemotherid_branch;
	bool gennutaus_simplemotherid_isLoaded;
	vector<int> *gennutaus_simplemotheridx_;
	TBranch *gennutaus_simplemotheridx_branch;
	bool gennutaus_simplemotheridx_isLoaded;
	vector<int> *gennutaus_simplemotherstatus_;
	TBranch *gennutaus_simplemotherstatus_branch;
	bool gennutaus_simplemotherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *gennutaus_simplegmotherp4_;
	TBranch *gennutaus_simplegmotherp4_branch;
	bool gennutaus_simplegmotherp4_isLoaded;
	vector<int> *gennutaus_simplegmothercharge_;
	TBranch *gennutaus_simplegmothercharge_branch;
	bool gennutaus_simplegmothercharge_isLoaded;
	vector<int> *gennutaus_simplegmotherid_;
	TBranch *gennutaus_simplegmotherid_branch;
	bool gennutaus_simplegmotherid_isLoaded;
	vector<int> *gennutaus_simplegmotheridx_;
	TBranch *gennutaus_simplegmotheridx_branch;
	bool gennutaus_simplegmotheridx_isLoaded;
	vector<int> *gennutaus_simplegmotherstatus_;
	TBranch *gennutaus_simplegmotherstatus_branch;
	bool gennutaus_simplegmotherstatus_isLoaded;
	vector<bool> *gents_isfromt_;
	TBranch *gents_isfromt_branch;
	bool gents_isfromt_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *gents_p4_;
	TBranch *gents_p4_branch;
	bool gents_p4_isLoaded;
	vector<float> *gents_charge_;
	TBranch *gents_charge_branch;
	bool gents_charge_isLoaded;
	vector<float> *gents_iso_;
	TBranch *gents_iso_branch;
	bool gents_iso_isLoaded;
	vector<float> *gents_mass_;
	TBranch *gents_mass_branch;
	bool gents_mass_isLoaded;
	vector<int> *gents_id_;
	TBranch *gents_id_branch;
	bool gents_id_isLoaded;
	vector<int> *gents__genpsidx_;
	TBranch *gents__genpsidx_branch;
	bool gents__genpsidx_isLoaded;
	vector<int> *gents_status_;
	TBranch *gents_status_branch;
	bool gents_status_isLoaded;
	vector<bool> *gents_fromHardProcessBeforeFSR_;
	TBranch *gents_fromHardProcessBeforeFSR_branch;
	bool gents_fromHardProcessBeforeFSR_isLoaded;
	vector<bool> *gents_fromHardProcessDecayed_;
	TBranch *gents_fromHardProcessDecayed_branch;
	bool gents_fromHardProcessDecayed_isLoaded;
	vector<bool> *gents_fromHardProcessFinalState_;
	TBranch *gents_fromHardProcessFinalState_branch;
	bool gents_fromHardProcessFinalState_isLoaded;
	vector<bool> *gents_isDirectHardProcessTauDecayProductFinalState_;
	TBranch *gents_isDirectHardProcessTauDecayProductFinalState_branch;
	bool gents_isDirectHardProcessTauDecayProductFinalState_isLoaded;
	vector<bool> *gents_isDirectPromptTauDecayProductFinalState_;
	TBranch *gents_isDirectPromptTauDecayProductFinalState_branch;
	bool gents_isDirectPromptTauDecayProductFinalState_isLoaded;
	vector<bool> *gents_isHardProcess_;
	TBranch *gents_isHardProcess_branch;
	bool gents_isHardProcess_isLoaded;
	vector<bool> *gents_isLastCopy_;
	TBranch *gents_isLastCopy_branch;
	bool gents_isLastCopy_isLoaded;
	vector<bool> *gents_isLastCopyBeforeFSR_;
	TBranch *gents_isLastCopyBeforeFSR_branch;
	bool gents_isLastCopyBeforeFSR_isLoaded;
	vector<bool> *gents_isMostlyLikePythia6Status3_;
	TBranch *gents_isMostlyLikePythia6Status3_branch;
	bool gents_isMostlyLikePythia6Status3_isLoaded;
	vector<bool> *gents_isPromptDecayed_;
	TBranch *gents_isPromptDecayed_branch;
	bool gents_isPromptDecayed_isLoaded;
	vector<bool> *gents_isPromptFinalState_;
	TBranch *gents_isPromptFinalState_branch;
	bool gents_isPromptFinalState_isLoaded;
	vector<vector<int> > *gents_lepdaughter_id_;
	TBranch *gents_lepdaughter_id_branch;
	bool gents_lepdaughter_id_isLoaded;
	vector<int> *gents_gentaudecay_;
	TBranch *gents_gentaudecay_branch;
	bool gents_gentaudecay_isLoaded;
	int	gen_nfromtts__;
	TBranch *gen_nfromtts__branch;
	bool gen_nfromtts__isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *gents_motherp4_;
	TBranch *gents_motherp4_branch;
	bool gents_motherp4_isLoaded;
	vector<float> *gents_mothercharge_;
	TBranch *gents_mothercharge_branch;
	bool gents_mothercharge_isLoaded;
	vector<int> *gents_motherid_;
	TBranch *gents_motherid_branch;
	bool gents_motherid_isLoaded;
	vector<int> *gents_motheridx_;
	TBranch *gents_motheridx_branch;
	bool gents_motheridx_isLoaded;
	vector<int> *gents_motherstatus_;
	TBranch *gents_motherstatus_branch;
	bool gents_motherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *gents_gmotherp4_;
	TBranch *gents_gmotherp4_branch;
	bool gents_gmotherp4_isLoaded;
	vector<int> *gents_gmothercharge_;
	TBranch *gents_gmothercharge_branch;
	bool gents_gmothercharge_isLoaded;
	vector<int> *gents_gmotherid_;
	TBranch *gents_gmotherid_branch;
	bool gents_gmotherid_isLoaded;
	vector<int> *gents_gmotheridx_;
	TBranch *gents_gmotheridx_branch;
	bool gents_gmotheridx_isLoaded;
	vector<int> *gents_gmotherstatus_;
	TBranch *gents_gmotherstatus_branch;
	bool gents_gmotherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *gents_simplemotherp4_;
	TBranch *gents_simplemotherp4_branch;
	bool gents_simplemotherp4_isLoaded;
	vector<int> *gents_simplemothercharge_;
	TBranch *gents_simplemothercharge_branch;
	bool gents_simplemothercharge_isLoaded;
	vector<int> *gents_simplemotherid_;
	TBranch *gents_simplemotherid_branch;
	bool gents_simplemotherid_isLoaded;
	vector<int> *gents_simplemotheridx_;
	TBranch *gents_simplemotheridx_branch;
	bool gents_simplemotheridx_isLoaded;
	vector<int> *gents_simplemotherstatus_;
	TBranch *gents_simplemotherstatus_branch;
	bool gents_simplemotherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *gents_simplegmotherp4_;
	TBranch *gents_simplegmotherp4_branch;
	bool gents_simplegmotherp4_isLoaded;
	vector<int> *gents_simplegmothercharge_;
	TBranch *gents_simplegmothercharge_branch;
	bool gents_simplegmothercharge_isLoaded;
	vector<int> *gents_simplegmotherid_;
	TBranch *gents_simplegmotherid_branch;
	bool gents_simplegmotherid_isLoaded;
	vector<int> *gents_simplegmotheridx_;
	TBranch *gents_simplegmotheridx_branch;
	bool gents_simplegmotheridx_isLoaded;
	vector<int> *gents_simplegmotherstatus_;
	TBranch *gents_simplegmotherstatus_branch;
	bool gents_simplegmotherstatus_isLoaded;
	vector<bool> *genbs_isfromt_;
	TBranch *genbs_isfromt_branch;
	bool genbs_isfromt_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genbs_p4_;
	TBranch *genbs_p4_branch;
	bool genbs_p4_isLoaded;
	vector<float> *genbs_charge_;
	TBranch *genbs_charge_branch;
	bool genbs_charge_isLoaded;
	vector<float> *genbs_iso_;
	TBranch *genbs_iso_branch;
	bool genbs_iso_isLoaded;
	vector<float> *genbs_mass_;
	TBranch *genbs_mass_branch;
	bool genbs_mass_isLoaded;
	vector<int> *genbs_id_;
	TBranch *genbs_id_branch;
	bool genbs_id_isLoaded;
	vector<int> *genbs__genpsidx_;
	TBranch *genbs__genpsidx_branch;
	bool genbs__genpsidx_isLoaded;
	vector<int> *genbs_status_;
	TBranch *genbs_status_branch;
	bool genbs_status_isLoaded;
	vector<bool> *genbs_fromHardProcessBeforeFSR_;
	TBranch *genbs_fromHardProcessBeforeFSR_branch;
	bool genbs_fromHardProcessBeforeFSR_isLoaded;
	vector<bool> *genbs_fromHardProcessDecayed_;
	TBranch *genbs_fromHardProcessDecayed_branch;
	bool genbs_fromHardProcessDecayed_isLoaded;
	vector<bool> *genbs_fromHardProcessFinalState_;
	TBranch *genbs_fromHardProcessFinalState_branch;
	bool genbs_fromHardProcessFinalState_isLoaded;
	vector<bool> *genbs_isDirectHardProcessTauDecayProductFinalState_;
	TBranch *genbs_isDirectHardProcessTauDecayProductFinalState_branch;
	bool genbs_isDirectHardProcessTauDecayProductFinalState_isLoaded;
	vector<bool> *genbs_isDirectPromptTauDecayProductFinalState_;
	TBranch *genbs_isDirectPromptTauDecayProductFinalState_branch;
	bool genbs_isDirectPromptTauDecayProductFinalState_isLoaded;
	vector<bool> *genbs_isHardProcess_;
	TBranch *genbs_isHardProcess_branch;
	bool genbs_isHardProcess_isLoaded;
	vector<bool> *genbs_isLastCopy_;
	TBranch *genbs_isLastCopy_branch;
	bool genbs_isLastCopy_isLoaded;
	vector<bool> *genbs_isLastCopyBeforeFSR_;
	TBranch *genbs_isLastCopyBeforeFSR_branch;
	bool genbs_isLastCopyBeforeFSR_isLoaded;
	vector<bool> *genbs_isMostlyLikePythia6Status3_;
	TBranch *genbs_isMostlyLikePythia6Status3_branch;
	bool genbs_isMostlyLikePythia6Status3_isLoaded;
	vector<bool> *genbs_isPromptDecayed_;
	TBranch *genbs_isPromptDecayed_branch;
	bool genbs_isPromptDecayed_isLoaded;
	vector<bool> *genbs_isPromptFinalState_;
	TBranch *genbs_isPromptFinalState_branch;
	bool genbs_isPromptFinalState_isLoaded;
	vector<vector<int> > *genbs_lepdaughter_id_;
	TBranch *genbs_lepdaughter_id_branch;
	bool genbs_lepdaughter_id_isLoaded;
	vector<int> *genbs_gentaudecay_;
	TBranch *genbs_gentaudecay_branch;
	bool genbs_gentaudecay_isLoaded;
	int	gen_nfromtbs__;
	TBranch *gen_nfromtbs__branch;
	bool gen_nfromtbs__isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genbs_motherp4_;
	TBranch *genbs_motherp4_branch;
	bool genbs_motherp4_isLoaded;
	vector<float> *genbs_mothercharge_;
	TBranch *genbs_mothercharge_branch;
	bool genbs_mothercharge_isLoaded;
	vector<int> *genbs_motherid_;
	TBranch *genbs_motherid_branch;
	bool genbs_motherid_isLoaded;
	vector<int> *genbs_motheridx_;
	TBranch *genbs_motheridx_branch;
	bool genbs_motheridx_isLoaded;
	vector<int> *genbs_motherstatus_;
	TBranch *genbs_motherstatus_branch;
	bool genbs_motherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genbs_gmotherp4_;
	TBranch *genbs_gmotherp4_branch;
	bool genbs_gmotherp4_isLoaded;
	vector<int> *genbs_gmothercharge_;
	TBranch *genbs_gmothercharge_branch;
	bool genbs_gmothercharge_isLoaded;
	vector<int> *genbs_gmotherid_;
	TBranch *genbs_gmotherid_branch;
	bool genbs_gmotherid_isLoaded;
	vector<int> *genbs_gmotheridx_;
	TBranch *genbs_gmotheridx_branch;
	bool genbs_gmotheridx_isLoaded;
	vector<int> *genbs_gmotherstatus_;
	TBranch *genbs_gmotherstatus_branch;
	bool genbs_gmotherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genbs_simplemotherp4_;
	TBranch *genbs_simplemotherp4_branch;
	bool genbs_simplemotherp4_isLoaded;
	vector<int> *genbs_simplemothercharge_;
	TBranch *genbs_simplemothercharge_branch;
	bool genbs_simplemothercharge_isLoaded;
	vector<int> *genbs_simplemotherid_;
	TBranch *genbs_simplemotherid_branch;
	bool genbs_simplemotherid_isLoaded;
	vector<int> *genbs_simplemotheridx_;
	TBranch *genbs_simplemotheridx_branch;
	bool genbs_simplemotheridx_isLoaded;
	vector<int> *genbs_simplemotherstatus_;
	TBranch *genbs_simplemotherstatus_branch;
	bool genbs_simplemotherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genbs_simplegmotherp4_;
	TBranch *genbs_simplegmotherp4_branch;
	bool genbs_simplegmotherp4_isLoaded;
	vector<int> *genbs_simplegmothercharge_;
	TBranch *genbs_simplegmothercharge_branch;
	bool genbs_simplegmothercharge_isLoaded;
	vector<int> *genbs_simplegmotherid_;
	TBranch *genbs_simplegmotherid_branch;
	bool genbs_simplegmotherid_isLoaded;
	vector<int> *genbs_simplegmotheridx_;
	TBranch *genbs_simplegmotheridx_branch;
	bool genbs_simplegmotheridx_isLoaded;
	vector<int> *genbs_simplegmotherstatus_;
	TBranch *genbs_simplegmotherstatus_branch;
	bool genbs_simplegmotherstatus_isLoaded;
	vector<bool> *gencs_isfromt_;
	TBranch *gencs_isfromt_branch;
	bool gencs_isfromt_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *gencs_p4_;
	TBranch *gencs_p4_branch;
	bool gencs_p4_isLoaded;
	vector<float> *gencs_charge_;
	TBranch *gencs_charge_branch;
	bool gencs_charge_isLoaded;
	vector<float> *gencs_iso_;
	TBranch *gencs_iso_branch;
	bool gencs_iso_isLoaded;
	vector<float> *gencs_mass_;
	TBranch *gencs_mass_branch;
	bool gencs_mass_isLoaded;
	vector<int> *gencs_id_;
	TBranch *gencs_id_branch;
	bool gencs_id_isLoaded;
	vector<int> *gencs__genpsidx_;
	TBranch *gencs__genpsidx_branch;
	bool gencs__genpsidx_isLoaded;
	vector<int> *gencs_status_;
	TBranch *gencs_status_branch;
	bool gencs_status_isLoaded;
	vector<bool> *gencs_fromHardProcessBeforeFSR_;
	TBranch *gencs_fromHardProcessBeforeFSR_branch;
	bool gencs_fromHardProcessBeforeFSR_isLoaded;
	vector<bool> *gencs_fromHardProcessDecayed_;
	TBranch *gencs_fromHardProcessDecayed_branch;
	bool gencs_fromHardProcessDecayed_isLoaded;
	vector<bool> *gencs_fromHardProcessFinalState_;
	TBranch *gencs_fromHardProcessFinalState_branch;
	bool gencs_fromHardProcessFinalState_isLoaded;
	vector<bool> *gencs_isDirectHardProcessTauDecayProductFinalState_;
	TBranch *gencs_isDirectHardProcessTauDecayProductFinalState_branch;
	bool gencs_isDirectHardProcessTauDecayProductFinalState_isLoaded;
	vector<bool> *gencs_isDirectPromptTauDecayProductFinalState_;
	TBranch *gencs_isDirectPromptTauDecayProductFinalState_branch;
	bool gencs_isDirectPromptTauDecayProductFinalState_isLoaded;
	vector<bool> *gencs_isHardProcess_;
	TBranch *gencs_isHardProcess_branch;
	bool gencs_isHardProcess_isLoaded;
	vector<bool> *gencs_isLastCopy_;
	TBranch *gencs_isLastCopy_branch;
	bool gencs_isLastCopy_isLoaded;
	vector<bool> *gencs_isLastCopyBeforeFSR_;
	TBranch *gencs_isLastCopyBeforeFSR_branch;
	bool gencs_isLastCopyBeforeFSR_isLoaded;
	vector<bool> *gencs_isMostlyLikePythia6Status3_;
	TBranch *gencs_isMostlyLikePythia6Status3_branch;
	bool gencs_isMostlyLikePythia6Status3_isLoaded;
	vector<bool> *gencs_isPromptDecayed_;
	TBranch *gencs_isPromptDecayed_branch;
	bool gencs_isPromptDecayed_isLoaded;
	vector<bool> *gencs_isPromptFinalState_;
	TBranch *gencs_isPromptFinalState_branch;
	bool gencs_isPromptFinalState_isLoaded;
	vector<vector<int> > *gencs_lepdaughter_id_;
	TBranch *gencs_lepdaughter_id_branch;
	bool gencs_lepdaughter_id_isLoaded;
	vector<int> *gencs_gentaudecay_;
	TBranch *gencs_gentaudecay_branch;
	bool gencs_gentaudecay_isLoaded;
	int	gen_nfromtcs__;
	TBranch *gen_nfromtcs__branch;
	bool gen_nfromtcs__isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *gencs_motherp4_;
	TBranch *gencs_motherp4_branch;
	bool gencs_motherp4_isLoaded;
	vector<float> *gencs_mothercharge_;
	TBranch *gencs_mothercharge_branch;
	bool gencs_mothercharge_isLoaded;
	vector<int> *gencs_motherid_;
	TBranch *gencs_motherid_branch;
	bool gencs_motherid_isLoaded;
	vector<int> *gencs_motheridx_;
	TBranch *gencs_motheridx_branch;
	bool gencs_motheridx_isLoaded;
	vector<int> *gencs_motherstatus_;
	TBranch *gencs_motherstatus_branch;
	bool gencs_motherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *gencs_gmotherp4_;
	TBranch *gencs_gmotherp4_branch;
	bool gencs_gmotherp4_isLoaded;
	vector<int> *gencs_gmothercharge_;
	TBranch *gencs_gmothercharge_branch;
	bool gencs_gmothercharge_isLoaded;
	vector<int> *gencs_gmotherid_;
	TBranch *gencs_gmotherid_branch;
	bool gencs_gmotherid_isLoaded;
	vector<int> *gencs_gmotheridx_;
	TBranch *gencs_gmotheridx_branch;
	bool gencs_gmotheridx_isLoaded;
	vector<int> *gencs_gmotherstatus_;
	TBranch *gencs_gmotherstatus_branch;
	bool gencs_gmotherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *gencs_simplemotherp4_;
	TBranch *gencs_simplemotherp4_branch;
	bool gencs_simplemotherp4_isLoaded;
	vector<int> *gencs_simplemothercharge_;
	TBranch *gencs_simplemothercharge_branch;
	bool gencs_simplemothercharge_isLoaded;
	vector<int> *gencs_simplemotherid_;
	TBranch *gencs_simplemotherid_branch;
	bool gencs_simplemotherid_isLoaded;
	vector<int> *gencs_simplemotheridx_;
	TBranch *gencs_simplemotheridx_branch;
	bool gencs_simplemotheridx_isLoaded;
	vector<int> *gencs_simplemotherstatus_;
	TBranch *gencs_simplemotherstatus_branch;
	bool gencs_simplemotherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *gencs_simplegmotherp4_;
	TBranch *gencs_simplegmotherp4_branch;
	bool gencs_simplegmotherp4_isLoaded;
	vector<int> *gencs_simplegmothercharge_;
	TBranch *gencs_simplegmothercharge_branch;
	bool gencs_simplegmothercharge_isLoaded;
	vector<int> *gencs_simplegmotherid_;
	TBranch *gencs_simplegmotherid_branch;
	bool gencs_simplegmotherid_isLoaded;
	vector<int> *gencs_simplegmotheridx_;
	TBranch *gencs_simplegmotheridx_branch;
	bool gencs_simplegmotheridx_isLoaded;
	vector<int> *gencs_simplegmotherstatus_;
	TBranch *gencs_simplegmotherstatus_branch;
	bool gencs_simplegmotherstatus_isLoaded;
	vector<bool> *genqs_isfromt_;
	TBranch *genqs_isfromt_branch;
	bool genqs_isfromt_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genqs_p4_;
	TBranch *genqs_p4_branch;
	bool genqs_p4_isLoaded;
	vector<float> *genqs_charge_;
	TBranch *genqs_charge_branch;
	bool genqs_charge_isLoaded;
	vector<float> *genqs_iso_;
	TBranch *genqs_iso_branch;
	bool genqs_iso_isLoaded;
	vector<float> *genqs_mass_;
	TBranch *genqs_mass_branch;
	bool genqs_mass_isLoaded;
	vector<int> *genqs_id_;
	TBranch *genqs_id_branch;
	bool genqs_id_isLoaded;
	vector<int> *genqs__genpsidx_;
	TBranch *genqs__genpsidx_branch;
	bool genqs__genpsidx_isLoaded;
	vector<int> *genqs_status_;
	TBranch *genqs_status_branch;
	bool genqs_status_isLoaded;
	vector<bool> *genqs_fromHardProcessBeforeFSR_;
	TBranch *genqs_fromHardProcessBeforeFSR_branch;
	bool genqs_fromHardProcessBeforeFSR_isLoaded;
	vector<bool> *genqs_fromHardProcessDecayed_;
	TBranch *genqs_fromHardProcessDecayed_branch;
	bool genqs_fromHardProcessDecayed_isLoaded;
	vector<bool> *genqs_fromHardProcessFinalState_;
	TBranch *genqs_fromHardProcessFinalState_branch;
	bool genqs_fromHardProcessFinalState_isLoaded;
	vector<bool> *genqs_isDirectHardProcessTauDecayProductFinalState_;
	TBranch *genqs_isDirectHardProcessTauDecayProductFinalState_branch;
	bool genqs_isDirectHardProcessTauDecayProductFinalState_isLoaded;
	vector<bool> *genqs_isDirectPromptTauDecayProductFinalState_;
	TBranch *genqs_isDirectPromptTauDecayProductFinalState_branch;
	bool genqs_isDirectPromptTauDecayProductFinalState_isLoaded;
	vector<bool> *genqs_isHardProcess_;
	TBranch *genqs_isHardProcess_branch;
	bool genqs_isHardProcess_isLoaded;
	vector<bool> *genqs_isLastCopy_;
	TBranch *genqs_isLastCopy_branch;
	bool genqs_isLastCopy_isLoaded;
	vector<bool> *genqs_isLastCopyBeforeFSR_;
	TBranch *genqs_isLastCopyBeforeFSR_branch;
	bool genqs_isLastCopyBeforeFSR_isLoaded;
	vector<bool> *genqs_isMostlyLikePythia6Status3_;
	TBranch *genqs_isMostlyLikePythia6Status3_branch;
	bool genqs_isMostlyLikePythia6Status3_isLoaded;
	vector<bool> *genqs_isPromptDecayed_;
	TBranch *genqs_isPromptDecayed_branch;
	bool genqs_isPromptDecayed_isLoaded;
	vector<bool> *genqs_isPromptFinalState_;
	TBranch *genqs_isPromptFinalState_branch;
	bool genqs_isPromptFinalState_isLoaded;
	vector<vector<int> > *genqs_lepdaughter_id_;
	TBranch *genqs_lepdaughter_id_branch;
	bool genqs_lepdaughter_id_isLoaded;
	vector<int> *genqs_gentaudecay_;
	TBranch *genqs_gentaudecay_branch;
	bool genqs_gentaudecay_isLoaded;
	int	gen_nfromtqs__;
	TBranch *gen_nfromtqs__branch;
	bool gen_nfromtqs__isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genqs_motherp4_;
	TBranch *genqs_motherp4_branch;
	bool genqs_motherp4_isLoaded;
	vector<float> *genqs_mothercharge_;
	TBranch *genqs_mothercharge_branch;
	bool genqs_mothercharge_isLoaded;
	vector<int> *genqs_motherid_;
	TBranch *genqs_motherid_branch;
	bool genqs_motherid_isLoaded;
	vector<int> *genqs_motheridx_;
	TBranch *genqs_motheridx_branch;
	bool genqs_motheridx_isLoaded;
	vector<int> *genqs_motherstatus_;
	TBranch *genqs_motherstatus_branch;
	bool genqs_motherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genqs_gmotherp4_;
	TBranch *genqs_gmotherp4_branch;
	bool genqs_gmotherp4_isLoaded;
	vector<int> *genqs_gmothercharge_;
	TBranch *genqs_gmothercharge_branch;
	bool genqs_gmothercharge_isLoaded;
	vector<int> *genqs_gmotherid_;
	TBranch *genqs_gmotherid_branch;
	bool genqs_gmotherid_isLoaded;
	vector<int> *genqs_gmotheridx_;
	TBranch *genqs_gmotheridx_branch;
	bool genqs_gmotheridx_isLoaded;
	vector<int> *genqs_gmotherstatus_;
	TBranch *genqs_gmotherstatus_branch;
	bool genqs_gmotherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genqs_simplemotherp4_;
	TBranch *genqs_simplemotherp4_branch;
	bool genqs_simplemotherp4_isLoaded;
	vector<int> *genqs_simplemothercharge_;
	TBranch *genqs_simplemothercharge_branch;
	bool genqs_simplemothercharge_isLoaded;
	vector<int> *genqs_simplemotherid_;
	TBranch *genqs_simplemotherid_branch;
	bool genqs_simplemotherid_isLoaded;
	vector<int> *genqs_simplemotheridx_;
	TBranch *genqs_simplemotheridx_branch;
	bool genqs_simplemotheridx_isLoaded;
	vector<int> *genqs_simplemotherstatus_;
	TBranch *genqs_simplemotherstatus_branch;
	bool genqs_simplemotherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genqs_simplegmotherp4_;
	TBranch *genqs_simplegmotherp4_branch;
	bool genqs_simplegmotherp4_isLoaded;
	vector<int> *genqs_simplegmothercharge_;
	TBranch *genqs_simplegmothercharge_branch;
	bool genqs_simplegmothercharge_isLoaded;
	vector<int> *genqs_simplegmotherid_;
	TBranch *genqs_simplegmotherid_branch;
	bool genqs_simplegmotherid_isLoaded;
	vector<int> *genqs_simplegmotheridx_;
	TBranch *genqs_simplegmotheridx_branch;
	bool genqs_simplegmotheridx_isLoaded;
	vector<int> *genqs_simplegmotherstatus_;
	TBranch *genqs_simplegmotherstatus_branch;
	bool genqs_simplegmotherstatus_isLoaded;
	vector<bool> *genglus_isfromt_;
	TBranch *genglus_isfromt_branch;
	bool genglus_isfromt_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genglus_p4_;
	TBranch *genglus_p4_branch;
	bool genglus_p4_isLoaded;
	vector<float> *genglus_charge_;
	TBranch *genglus_charge_branch;
	bool genglus_charge_isLoaded;
	vector<float> *genglus_iso_;
	TBranch *genglus_iso_branch;
	bool genglus_iso_isLoaded;
	vector<float> *genglus_mass_;
	TBranch *genglus_mass_branch;
	bool genglus_mass_isLoaded;
	vector<int> *genglus_id_;
	TBranch *genglus_id_branch;
	bool genglus_id_isLoaded;
	vector<int> *genglus__genpsidx_;
	TBranch *genglus__genpsidx_branch;
	bool genglus__genpsidx_isLoaded;
	vector<int> *genglus_status_;
	TBranch *genglus_status_branch;
	bool genglus_status_isLoaded;
	vector<bool> *genglus_fromHardProcessBeforeFSR_;
	TBranch *genglus_fromHardProcessBeforeFSR_branch;
	bool genglus_fromHardProcessBeforeFSR_isLoaded;
	vector<bool> *genglus_fromHardProcessDecayed_;
	TBranch *genglus_fromHardProcessDecayed_branch;
	bool genglus_fromHardProcessDecayed_isLoaded;
	vector<bool> *genglus_fromHardProcessFinalState_;
	TBranch *genglus_fromHardProcessFinalState_branch;
	bool genglus_fromHardProcessFinalState_isLoaded;
	vector<bool> *genglus_isDirectHardProcessTauDecayProductFinalState_;
	TBranch *genglus_isDirectHardProcessTauDecayProductFinalState_branch;
	bool genglus_isDirectHardProcessTauDecayProductFinalState_isLoaded;
	vector<bool> *genglus_isDirectPromptTauDecayProductFinalState_;
	TBranch *genglus_isDirectPromptTauDecayProductFinalState_branch;
	bool genglus_isDirectPromptTauDecayProductFinalState_isLoaded;
	vector<bool> *genglus_isHardProcess_;
	TBranch *genglus_isHardProcess_branch;
	bool genglus_isHardProcess_isLoaded;
	vector<bool> *genglus_isLastCopy_;
	TBranch *genglus_isLastCopy_branch;
	bool genglus_isLastCopy_isLoaded;
	vector<bool> *genglus_isLastCopyBeforeFSR_;
	TBranch *genglus_isLastCopyBeforeFSR_branch;
	bool genglus_isLastCopyBeforeFSR_isLoaded;
	vector<bool> *genglus_isMostlyLikePythia6Status3_;
	TBranch *genglus_isMostlyLikePythia6Status3_branch;
	bool genglus_isMostlyLikePythia6Status3_isLoaded;
	vector<bool> *genglus_isPromptDecayed_;
	TBranch *genglus_isPromptDecayed_branch;
	bool genglus_isPromptDecayed_isLoaded;
	vector<bool> *genglus_isPromptFinalState_;
	TBranch *genglus_isPromptFinalState_branch;
	bool genglus_isPromptFinalState_isLoaded;
	vector<vector<int> > *genglus_lepdaughter_id_;
	TBranch *genglus_lepdaughter_id_branch;
	bool genglus_lepdaughter_id_isLoaded;
	vector<int> *genglus_gentaudecay_;
	TBranch *genglus_gentaudecay_branch;
	bool genglus_gentaudecay_isLoaded;
	int	gen_nfromtglus__;
	TBranch *gen_nfromtglus__branch;
	bool gen_nfromtglus__isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genglus_motherp4_;
	TBranch *genglus_motherp4_branch;
	bool genglus_motherp4_isLoaded;
	vector<float> *genglus_mothercharge_;
	TBranch *genglus_mothercharge_branch;
	bool genglus_mothercharge_isLoaded;
	vector<int> *genglus_motherid_;
	TBranch *genglus_motherid_branch;
	bool genglus_motherid_isLoaded;
	vector<int> *genglus_motheridx_;
	TBranch *genglus_motheridx_branch;
	bool genglus_motheridx_isLoaded;
	vector<int> *genglus_motherstatus_;
	TBranch *genglus_motherstatus_branch;
	bool genglus_motherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genglus_gmotherp4_;
	TBranch *genglus_gmotherp4_branch;
	bool genglus_gmotherp4_isLoaded;
	vector<int> *genglus_gmothercharge_;
	TBranch *genglus_gmothercharge_branch;
	bool genglus_gmothercharge_isLoaded;
	vector<int> *genglus_gmotherid_;
	TBranch *genglus_gmotherid_branch;
	bool genglus_gmotherid_isLoaded;
	vector<int> *genglus_gmotheridx_;
	TBranch *genglus_gmotheridx_branch;
	bool genglus_gmotheridx_isLoaded;
	vector<int> *genglus_gmotherstatus_;
	TBranch *genglus_gmotherstatus_branch;
	bool genglus_gmotherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genglus_simplemotherp4_;
	TBranch *genglus_simplemotherp4_branch;
	bool genglus_simplemotherp4_isLoaded;
	vector<int> *genglus_simplemothercharge_;
	TBranch *genglus_simplemothercharge_branch;
	bool genglus_simplemothercharge_isLoaded;
	vector<int> *genglus_simplemotherid_;
	TBranch *genglus_simplemotherid_branch;
	bool genglus_simplemotherid_isLoaded;
	vector<int> *genglus_simplemotheridx_;
	TBranch *genglus_simplemotheridx_branch;
	bool genglus_simplemotheridx_isLoaded;
	vector<int> *genglus_simplemotherstatus_;
	TBranch *genglus_simplemotherstatus_branch;
	bool genglus_simplemotherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genglus_simplegmotherp4_;
	TBranch *genglus_simplegmotherp4_branch;
	bool genglus_simplegmotherp4_isLoaded;
	vector<int> *genglus_simplegmothercharge_;
	TBranch *genglus_simplegmothercharge_branch;
	bool genglus_simplegmothercharge_isLoaded;
	vector<int> *genglus_simplegmotherid_;
	TBranch *genglus_simplegmotherid_branch;
	bool genglus_simplegmotherid_isLoaded;
	vector<int> *genglus_simplegmotheridx_;
	TBranch *genglus_simplegmotheridx_branch;
	bool genglus_simplegmotheridx_isLoaded;
	vector<int> *genglus_simplegmotherstatus_;
	TBranch *genglus_simplegmotherstatus_branch;
	bool genglus_simplegmotherstatus_isLoaded;
	vector<bool> *genws_isfromt_;
	TBranch *genws_isfromt_branch;
	bool genws_isfromt_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genws_p4_;
	TBranch *genws_p4_branch;
	bool genws_p4_isLoaded;
	vector<float> *genws_charge_;
	TBranch *genws_charge_branch;
	bool genws_charge_isLoaded;
	vector<float> *genws_iso_;
	TBranch *genws_iso_branch;
	bool genws_iso_isLoaded;
	vector<float> *genws_mass_;
	TBranch *genws_mass_branch;
	bool genws_mass_isLoaded;
	vector<int> *genws_id_;
	TBranch *genws_id_branch;
	bool genws_id_isLoaded;
	vector<int> *genws__genpsidx_;
	TBranch *genws__genpsidx_branch;
	bool genws__genpsidx_isLoaded;
	vector<int> *genws_status_;
	TBranch *genws_status_branch;
	bool genws_status_isLoaded;
	vector<bool> *genws_fromHardProcessBeforeFSR_;
	TBranch *genws_fromHardProcessBeforeFSR_branch;
	bool genws_fromHardProcessBeforeFSR_isLoaded;
	vector<bool> *genws_fromHardProcessDecayed_;
	TBranch *genws_fromHardProcessDecayed_branch;
	bool genws_fromHardProcessDecayed_isLoaded;
	vector<bool> *genws_fromHardProcessFinalState_;
	TBranch *genws_fromHardProcessFinalState_branch;
	bool genws_fromHardProcessFinalState_isLoaded;
	vector<bool> *genws_isDirectHardProcessTauDecayProductFinalState_;
	TBranch *genws_isDirectHardProcessTauDecayProductFinalState_branch;
	bool genws_isDirectHardProcessTauDecayProductFinalState_isLoaded;
	vector<bool> *genws_isDirectPromptTauDecayProductFinalState_;
	TBranch *genws_isDirectPromptTauDecayProductFinalState_branch;
	bool genws_isDirectPromptTauDecayProductFinalState_isLoaded;
	vector<bool> *genws_isHardProcess_;
	TBranch *genws_isHardProcess_branch;
	bool genws_isHardProcess_isLoaded;
	vector<bool> *genws_isLastCopy_;
	TBranch *genws_isLastCopy_branch;
	bool genws_isLastCopy_isLoaded;
	vector<bool> *genws_isLastCopyBeforeFSR_;
	TBranch *genws_isLastCopyBeforeFSR_branch;
	bool genws_isLastCopyBeforeFSR_isLoaded;
	vector<bool> *genws_isMostlyLikePythia6Status3_;
	TBranch *genws_isMostlyLikePythia6Status3_branch;
	bool genws_isMostlyLikePythia6Status3_isLoaded;
	vector<bool> *genws_isPromptDecayed_;
	TBranch *genws_isPromptDecayed_branch;
	bool genws_isPromptDecayed_isLoaded;
	vector<bool> *genws_isPromptFinalState_;
	TBranch *genws_isPromptFinalState_branch;
	bool genws_isPromptFinalState_isLoaded;
	vector<vector<int> > *genws_lepdaughter_id_;
	TBranch *genws_lepdaughter_id_branch;
	bool genws_lepdaughter_id_isLoaded;
	vector<int> *genws_gentaudecay_;
	TBranch *genws_gentaudecay_branch;
	bool genws_gentaudecay_isLoaded;
	int	gen_nfromtws__;
	TBranch *gen_nfromtws__branch;
	bool gen_nfromtws__isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genws_motherp4_;
	TBranch *genws_motherp4_branch;
	bool genws_motherp4_isLoaded;
	vector<float> *genws_mothercharge_;
	TBranch *genws_mothercharge_branch;
	bool genws_mothercharge_isLoaded;
	vector<int> *genws_motherid_;
	TBranch *genws_motherid_branch;
	bool genws_motherid_isLoaded;
	vector<int> *genws_motheridx_;
	TBranch *genws_motheridx_branch;
	bool genws_motheridx_isLoaded;
	vector<int> *genws_motherstatus_;
	TBranch *genws_motherstatus_branch;
	bool genws_motherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genws_gmotherp4_;
	TBranch *genws_gmotherp4_branch;
	bool genws_gmotherp4_isLoaded;
	vector<int> *genws_gmothercharge_;
	TBranch *genws_gmothercharge_branch;
	bool genws_gmothercharge_isLoaded;
	vector<int> *genws_gmotherid_;
	TBranch *genws_gmotherid_branch;
	bool genws_gmotherid_isLoaded;
	vector<int> *genws_gmotheridx_;
	TBranch *genws_gmotheridx_branch;
	bool genws_gmotheridx_isLoaded;
	vector<int> *genws_gmotherstatus_;
	TBranch *genws_gmotherstatus_branch;
	bool genws_gmotherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genws_simplemotherp4_;
	TBranch *genws_simplemotherp4_branch;
	bool genws_simplemotherp4_isLoaded;
	vector<int> *genws_simplemothercharge_;
	TBranch *genws_simplemothercharge_branch;
	bool genws_simplemothercharge_isLoaded;
	vector<int> *genws_simplemotherid_;
	TBranch *genws_simplemotherid_branch;
	bool genws_simplemotherid_isLoaded;
	vector<int> *genws_simplemotheridx_;
	TBranch *genws_simplemotheridx_branch;
	bool genws_simplemotheridx_isLoaded;
	vector<int> *genws_simplemotherstatus_;
	TBranch *genws_simplemotherstatus_branch;
	bool genws_simplemotherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genws_simplegmotherp4_;
	TBranch *genws_simplegmotherp4_branch;
	bool genws_simplegmotherp4_isLoaded;
	vector<int> *genws_simplegmothercharge_;
	TBranch *genws_simplegmothercharge_branch;
	bool genws_simplegmothercharge_isLoaded;
	vector<int> *genws_simplegmotherid_;
	TBranch *genws_simplegmotherid_branch;
	bool genws_simplegmotherid_isLoaded;
	vector<int> *genws_simplegmotheridx_;
	TBranch *genws_simplegmotheridx_branch;
	bool genws_simplegmotheridx_isLoaded;
	vector<int> *genws_simplegmotherstatus_;
	TBranch *genws_simplegmotherstatus_branch;
	bool genws_simplegmotherstatus_isLoaded;
	vector<bool> *genzs_isfromt_;
	TBranch *genzs_isfromt_branch;
	bool genzs_isfromt_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genzs_p4_;
	TBranch *genzs_p4_branch;
	bool genzs_p4_isLoaded;
	vector<float> *genzs_charge_;
	TBranch *genzs_charge_branch;
	bool genzs_charge_isLoaded;
	vector<float> *genzs_iso_;
	TBranch *genzs_iso_branch;
	bool genzs_iso_isLoaded;
	vector<float> *genzs_mass_;
	TBranch *genzs_mass_branch;
	bool genzs_mass_isLoaded;
	vector<int> *genzs_id_;
	TBranch *genzs_id_branch;
	bool genzs_id_isLoaded;
	vector<int> *genzs__genpsidx_;
	TBranch *genzs__genpsidx_branch;
	bool genzs__genpsidx_isLoaded;
	vector<int> *genzs_status_;
	TBranch *genzs_status_branch;
	bool genzs_status_isLoaded;
	vector<bool> *genzs_fromHardProcessBeforeFSR_;
	TBranch *genzs_fromHardProcessBeforeFSR_branch;
	bool genzs_fromHardProcessBeforeFSR_isLoaded;
	vector<bool> *genzs_fromHardProcessDecayed_;
	TBranch *genzs_fromHardProcessDecayed_branch;
	bool genzs_fromHardProcessDecayed_isLoaded;
	vector<bool> *genzs_fromHardProcessFinalState_;
	TBranch *genzs_fromHardProcessFinalState_branch;
	bool genzs_fromHardProcessFinalState_isLoaded;
	vector<bool> *genzs_isDirectHardProcessTauDecayProductFinalState_;
	TBranch *genzs_isDirectHardProcessTauDecayProductFinalState_branch;
	bool genzs_isDirectHardProcessTauDecayProductFinalState_isLoaded;
	vector<bool> *genzs_isDirectPromptTauDecayProductFinalState_;
	TBranch *genzs_isDirectPromptTauDecayProductFinalState_branch;
	bool genzs_isDirectPromptTauDecayProductFinalState_isLoaded;
	vector<bool> *genzs_isHardProcess_;
	TBranch *genzs_isHardProcess_branch;
	bool genzs_isHardProcess_isLoaded;
	vector<bool> *genzs_isLastCopy_;
	TBranch *genzs_isLastCopy_branch;
	bool genzs_isLastCopy_isLoaded;
	vector<bool> *genzs_isLastCopyBeforeFSR_;
	TBranch *genzs_isLastCopyBeforeFSR_branch;
	bool genzs_isLastCopyBeforeFSR_isLoaded;
	vector<bool> *genzs_isMostlyLikePythia6Status3_;
	TBranch *genzs_isMostlyLikePythia6Status3_branch;
	bool genzs_isMostlyLikePythia6Status3_isLoaded;
	vector<bool> *genzs_isPromptDecayed_;
	TBranch *genzs_isPromptDecayed_branch;
	bool genzs_isPromptDecayed_isLoaded;
	vector<bool> *genzs_isPromptFinalState_;
	TBranch *genzs_isPromptFinalState_branch;
	bool genzs_isPromptFinalState_isLoaded;
	vector<vector<int> > *genzs_lepdaughter_id_;
	TBranch *genzs_lepdaughter_id_branch;
	bool genzs_lepdaughter_id_isLoaded;
	vector<int> *genzs_gentaudecay_;
	TBranch *genzs_gentaudecay_branch;
	bool genzs_gentaudecay_isLoaded;
	int	gen_nfromtzs__;
	TBranch *gen_nfromtzs__branch;
	bool gen_nfromtzs__isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genzs_motherp4_;
	TBranch *genzs_motherp4_branch;
	bool genzs_motherp4_isLoaded;
	vector<float> *genzs_mothercharge_;
	TBranch *genzs_mothercharge_branch;
	bool genzs_mothercharge_isLoaded;
	vector<int> *genzs_motherid_;
	TBranch *genzs_motherid_branch;
	bool genzs_motherid_isLoaded;
	vector<int> *genzs_motheridx_;
	TBranch *genzs_motheridx_branch;
	bool genzs_motheridx_isLoaded;
	vector<int> *genzs_motherstatus_;
	TBranch *genzs_motherstatus_branch;
	bool genzs_motherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genzs_gmotherp4_;
	TBranch *genzs_gmotherp4_branch;
	bool genzs_gmotherp4_isLoaded;
	vector<int> *genzs_gmothercharge_;
	TBranch *genzs_gmothercharge_branch;
	bool genzs_gmothercharge_isLoaded;
	vector<int> *genzs_gmotherid_;
	TBranch *genzs_gmotherid_branch;
	bool genzs_gmotherid_isLoaded;
	vector<int> *genzs_gmotheridx_;
	TBranch *genzs_gmotheridx_branch;
	bool genzs_gmotheridx_isLoaded;
	vector<int> *genzs_gmotherstatus_;
	TBranch *genzs_gmotherstatus_branch;
	bool genzs_gmotherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genzs_simplemotherp4_;
	TBranch *genzs_simplemotherp4_branch;
	bool genzs_simplemotherp4_isLoaded;
	vector<int> *genzs_simplemothercharge_;
	TBranch *genzs_simplemothercharge_branch;
	bool genzs_simplemothercharge_isLoaded;
	vector<int> *genzs_simplemotherid_;
	TBranch *genzs_simplemotherid_branch;
	bool genzs_simplemotherid_isLoaded;
	vector<int> *genzs_simplemotheridx_;
	TBranch *genzs_simplemotheridx_branch;
	bool genzs_simplemotheridx_isLoaded;
	vector<int> *genzs_simplemotherstatus_;
	TBranch *genzs_simplemotherstatus_branch;
	bool genzs_simplemotherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genzs_simplegmotherp4_;
	TBranch *genzs_simplegmotherp4_branch;
	bool genzs_simplegmotherp4_isLoaded;
	vector<int> *genzs_simplegmothercharge_;
	TBranch *genzs_simplegmothercharge_branch;
	bool genzs_simplegmothercharge_isLoaded;
	vector<int> *genzs_simplegmotherid_;
	TBranch *genzs_simplegmotherid_branch;
	bool genzs_simplegmotherid_isLoaded;
	vector<int> *genzs_simplegmotheridx_;
	TBranch *genzs_simplegmotheridx_branch;
	bool genzs_simplegmotheridx_isLoaded;
	vector<int> *genzs_simplegmotherstatus_;
	TBranch *genzs_simplegmotherstatus_branch;
	bool genzs_simplegmotherstatus_isLoaded;
	vector<bool> *genphs_isfromt_;
	TBranch *genphs_isfromt_branch;
	bool genphs_isfromt_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genphs_p4_;
	TBranch *genphs_p4_branch;
	bool genphs_p4_isLoaded;
	vector<float> *genphs_charge_;
	TBranch *genphs_charge_branch;
	bool genphs_charge_isLoaded;
	vector<float> *genphs_iso_;
	TBranch *genphs_iso_branch;
	bool genphs_iso_isLoaded;
	vector<float> *genphs_mass_;
	TBranch *genphs_mass_branch;
	bool genphs_mass_isLoaded;
	vector<int> *genphs_id_;
	TBranch *genphs_id_branch;
	bool genphs_id_isLoaded;
	vector<int> *genphs__genpsidx_;
	TBranch *genphs__genpsidx_branch;
	bool genphs__genpsidx_isLoaded;
	vector<int> *genphs_status_;
	TBranch *genphs_status_branch;
	bool genphs_status_isLoaded;
	vector<bool> *genphs_fromHardProcessBeforeFSR_;
	TBranch *genphs_fromHardProcessBeforeFSR_branch;
	bool genphs_fromHardProcessBeforeFSR_isLoaded;
	vector<bool> *genphs_fromHardProcessDecayed_;
	TBranch *genphs_fromHardProcessDecayed_branch;
	bool genphs_fromHardProcessDecayed_isLoaded;
	vector<bool> *genphs_fromHardProcessFinalState_;
	TBranch *genphs_fromHardProcessFinalState_branch;
	bool genphs_fromHardProcessFinalState_isLoaded;
	vector<bool> *genphs_isDirectHardProcessTauDecayProductFinalState_;
	TBranch *genphs_isDirectHardProcessTauDecayProductFinalState_branch;
	bool genphs_isDirectHardProcessTauDecayProductFinalState_isLoaded;
	vector<bool> *genphs_isDirectPromptTauDecayProductFinalState_;
	TBranch *genphs_isDirectPromptTauDecayProductFinalState_branch;
	bool genphs_isDirectPromptTauDecayProductFinalState_isLoaded;
	vector<bool> *genphs_isHardProcess_;
	TBranch *genphs_isHardProcess_branch;
	bool genphs_isHardProcess_isLoaded;
	vector<bool> *genphs_isLastCopy_;
	TBranch *genphs_isLastCopy_branch;
	bool genphs_isLastCopy_isLoaded;
	vector<bool> *genphs_isLastCopyBeforeFSR_;
	TBranch *genphs_isLastCopyBeforeFSR_branch;
	bool genphs_isLastCopyBeforeFSR_isLoaded;
	vector<bool> *genphs_isMostlyLikePythia6Status3_;
	TBranch *genphs_isMostlyLikePythia6Status3_branch;
	bool genphs_isMostlyLikePythia6Status3_isLoaded;
	vector<bool> *genphs_isPromptDecayed_;
	TBranch *genphs_isPromptDecayed_branch;
	bool genphs_isPromptDecayed_isLoaded;
	vector<bool> *genphs_isPromptFinalState_;
	TBranch *genphs_isPromptFinalState_branch;
	bool genphs_isPromptFinalState_isLoaded;
	vector<vector<int> > *genphs_lepdaughter_id_;
	TBranch *genphs_lepdaughter_id_branch;
	bool genphs_lepdaughter_id_isLoaded;
	vector<int> *genphs_gentaudecay_;
	TBranch *genphs_gentaudecay_branch;
	bool genphs_gentaudecay_isLoaded;
	int	gen_nfromtphs__;
	TBranch *gen_nfromtphs__branch;
	bool gen_nfromtphs__isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genphs_motherp4_;
	TBranch *genphs_motherp4_branch;
	bool genphs_motherp4_isLoaded;
	vector<float> *genphs_mothercharge_;
	TBranch *genphs_mothercharge_branch;
	bool genphs_mothercharge_isLoaded;
	vector<int> *genphs_motherid_;
	TBranch *genphs_motherid_branch;
	bool genphs_motherid_isLoaded;
	vector<int> *genphs_motheridx_;
	TBranch *genphs_motheridx_branch;
	bool genphs_motheridx_isLoaded;
	vector<int> *genphs_motherstatus_;
	TBranch *genphs_motherstatus_branch;
	bool genphs_motherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genphs_gmotherp4_;
	TBranch *genphs_gmotherp4_branch;
	bool genphs_gmotherp4_isLoaded;
	vector<int> *genphs_gmothercharge_;
	TBranch *genphs_gmothercharge_branch;
	bool genphs_gmothercharge_isLoaded;
	vector<int> *genphs_gmotherid_;
	TBranch *genphs_gmotherid_branch;
	bool genphs_gmotherid_isLoaded;
	vector<int> *genphs_gmotheridx_;
	TBranch *genphs_gmotheridx_branch;
	bool genphs_gmotheridx_isLoaded;
	vector<int> *genphs_gmotherstatus_;
	TBranch *genphs_gmotherstatus_branch;
	bool genphs_gmotherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genphs_simplemotherp4_;
	TBranch *genphs_simplemotherp4_branch;
	bool genphs_simplemotherp4_isLoaded;
	vector<int> *genphs_simplemothercharge_;
	TBranch *genphs_simplemothercharge_branch;
	bool genphs_simplemothercharge_isLoaded;
	vector<int> *genphs_simplemotherid_;
	TBranch *genphs_simplemotherid_branch;
	bool genphs_simplemotherid_isLoaded;
	vector<int> *genphs_simplemotheridx_;
	TBranch *genphs_simplemotheridx_branch;
	bool genphs_simplemotheridx_isLoaded;
	vector<int> *genphs_simplemotherstatus_;
	TBranch *genphs_simplemotherstatus_branch;
	bool genphs_simplemotherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genphs_simplegmotherp4_;
	TBranch *genphs_simplegmotherp4_branch;
	bool genphs_simplegmotherp4_isLoaded;
	vector<int> *genphs_simplegmothercharge_;
	TBranch *genphs_simplegmothercharge_branch;
	bool genphs_simplegmothercharge_isLoaded;
	vector<int> *genphs_simplegmotherid_;
	TBranch *genphs_simplegmotherid_branch;
	bool genphs_simplegmotherid_isLoaded;
	vector<int> *genphs_simplegmotheridx_;
	TBranch *genphs_simplegmotheridx_branch;
	bool genphs_simplegmotheridx_isLoaded;
	vector<int> *genphs_simplegmotherstatus_;
	TBranch *genphs_simplegmotherstatus_branch;
	bool genphs_simplegmotherstatus_isLoaded;
	vector<bool> *genhs_isfromt_;
	TBranch *genhs_isfromt_branch;
	bool genhs_isfromt_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genhs_p4_;
	TBranch *genhs_p4_branch;
	bool genhs_p4_isLoaded;
	vector<float> *genhs_charge_;
	TBranch *genhs_charge_branch;
	bool genhs_charge_isLoaded;
	vector<float> *genhs_iso_;
	TBranch *genhs_iso_branch;
	bool genhs_iso_isLoaded;
	vector<float> *genhs_mass_;
	TBranch *genhs_mass_branch;
	bool genhs_mass_isLoaded;
	vector<int> *genhs_id_;
	TBranch *genhs_id_branch;
	bool genhs_id_isLoaded;
	vector<int> *genhs__genpsidx_;
	TBranch *genhs__genpsidx_branch;
	bool genhs__genpsidx_isLoaded;
	vector<int> *genhs_status_;
	TBranch *genhs_status_branch;
	bool genhs_status_isLoaded;
	vector<bool> *genhs_fromHardProcessBeforeFSR_;
	TBranch *genhs_fromHardProcessBeforeFSR_branch;
	bool genhs_fromHardProcessBeforeFSR_isLoaded;
	vector<bool> *genhs_fromHardProcessDecayed_;
	TBranch *genhs_fromHardProcessDecayed_branch;
	bool genhs_fromHardProcessDecayed_isLoaded;
	vector<bool> *genhs_fromHardProcessFinalState_;
	TBranch *genhs_fromHardProcessFinalState_branch;
	bool genhs_fromHardProcessFinalState_isLoaded;
	vector<bool> *genhs_isDirectHardProcessTauDecayProductFinalState_;
	TBranch *genhs_isDirectHardProcessTauDecayProductFinalState_branch;
	bool genhs_isDirectHardProcessTauDecayProductFinalState_isLoaded;
	vector<bool> *genhs_isDirectPromptTauDecayProductFinalState_;
	TBranch *genhs_isDirectPromptTauDecayProductFinalState_branch;
	bool genhs_isDirectPromptTauDecayProductFinalState_isLoaded;
	vector<bool> *genhs_isHardProcess_;
	TBranch *genhs_isHardProcess_branch;
	bool genhs_isHardProcess_isLoaded;
	vector<bool> *genhs_isLastCopy_;
	TBranch *genhs_isLastCopy_branch;
	bool genhs_isLastCopy_isLoaded;
	vector<bool> *genhs_isLastCopyBeforeFSR_;
	TBranch *genhs_isLastCopyBeforeFSR_branch;
	bool genhs_isLastCopyBeforeFSR_isLoaded;
	vector<bool> *genhs_isMostlyLikePythia6Status3_;
	TBranch *genhs_isMostlyLikePythia6Status3_branch;
	bool genhs_isMostlyLikePythia6Status3_isLoaded;
	vector<bool> *genhs_isPromptDecayed_;
	TBranch *genhs_isPromptDecayed_branch;
	bool genhs_isPromptDecayed_isLoaded;
	vector<bool> *genhs_isPromptFinalState_;
	TBranch *genhs_isPromptFinalState_branch;
	bool genhs_isPromptFinalState_isLoaded;
	vector<vector<int> > *genhs_lepdaughter_id_;
	TBranch *genhs_lepdaughter_id_branch;
	bool genhs_lepdaughter_id_isLoaded;
	vector<int> *genhs_gentaudecay_;
	TBranch *genhs_gentaudecay_branch;
	bool genhs_gentaudecay_isLoaded;
	int	gen_nfromths__;
	TBranch *gen_nfromths__branch;
	bool gen_nfromths__isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genhs_motherp4_;
	TBranch *genhs_motherp4_branch;
	bool genhs_motherp4_isLoaded;
	vector<float> *genhs_mothercharge_;
	TBranch *genhs_mothercharge_branch;
	bool genhs_mothercharge_isLoaded;
	vector<int> *genhs_motherid_;
	TBranch *genhs_motherid_branch;
	bool genhs_motherid_isLoaded;
	vector<int> *genhs_motheridx_;
	TBranch *genhs_motheridx_branch;
	bool genhs_motheridx_isLoaded;
	vector<int> *genhs_motherstatus_;
	TBranch *genhs_motherstatus_branch;
	bool genhs_motherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genhs_gmotherp4_;
	TBranch *genhs_gmotherp4_branch;
	bool genhs_gmotherp4_isLoaded;
	vector<int> *genhs_gmothercharge_;
	TBranch *genhs_gmothercharge_branch;
	bool genhs_gmothercharge_isLoaded;
	vector<int> *genhs_gmotherid_;
	TBranch *genhs_gmotherid_branch;
	bool genhs_gmotherid_isLoaded;
	vector<int> *genhs_gmotheridx_;
	TBranch *genhs_gmotheridx_branch;
	bool genhs_gmotheridx_isLoaded;
	vector<int> *genhs_gmotherstatus_;
	TBranch *genhs_gmotherstatus_branch;
	bool genhs_gmotherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genhs_simplemotherp4_;
	TBranch *genhs_simplemotherp4_branch;
	bool genhs_simplemotherp4_isLoaded;
	vector<int> *genhs_simplemothercharge_;
	TBranch *genhs_simplemothercharge_branch;
	bool genhs_simplemothercharge_isLoaded;
	vector<int> *genhs_simplemotherid_;
	TBranch *genhs_simplemotherid_branch;
	bool genhs_simplemotherid_isLoaded;
	vector<int> *genhs_simplemotheridx_;
	TBranch *genhs_simplemotheridx_branch;
	bool genhs_simplemotheridx_isLoaded;
	vector<int> *genhs_simplemotherstatus_;
	TBranch *genhs_simplemotherstatus_branch;
	bool genhs_simplemotherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genhs_simplegmotherp4_;
	TBranch *genhs_simplegmotherp4_branch;
	bool genhs_simplegmotherp4_isLoaded;
	vector<int> *genhs_simplegmothercharge_;
	TBranch *genhs_simplegmothercharge_branch;
	bool genhs_simplegmothercharge_isLoaded;
	vector<int> *genhs_simplegmotherid_;
	TBranch *genhs_simplegmotherid_branch;
	bool genhs_simplegmotherid_isLoaded;
	vector<int> *genhs_simplegmotheridx_;
	TBranch *genhs_simplegmotheridx_branch;
	bool genhs_simplegmotheridx_isLoaded;
	vector<int> *genhs_simplegmotherstatus_;
	TBranch *genhs_simplegmotherstatus_branch;
	bool genhs_simplegmotherstatus_isLoaded;
	vector<bool> *genlsp_isfromt_;
	TBranch *genlsp_isfromt_branch;
	bool genlsp_isfromt_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genlsp_p4_;
	TBranch *genlsp_p4_branch;
	bool genlsp_p4_isLoaded;
	vector<float> *genlsp_charge_;
	TBranch *genlsp_charge_branch;
	bool genlsp_charge_isLoaded;
	vector<float> *genlsp_iso_;
	TBranch *genlsp_iso_branch;
	bool genlsp_iso_isLoaded;
	vector<float> *genlsp_mass_;
	TBranch *genlsp_mass_branch;
	bool genlsp_mass_isLoaded;
	vector<int> *genlsp_id_;
	TBranch *genlsp_id_branch;
	bool genlsp_id_isLoaded;
	vector<int> *genlsp__genpsidx_;
	TBranch *genlsp__genpsidx_branch;
	bool genlsp__genpsidx_isLoaded;
	vector<int> *genlsp_status_;
	TBranch *genlsp_status_branch;
	bool genlsp_status_isLoaded;
	vector<bool> *genlsp_fromHardProcessBeforeFSR_;
	TBranch *genlsp_fromHardProcessBeforeFSR_branch;
	bool genlsp_fromHardProcessBeforeFSR_isLoaded;
	vector<bool> *genlsp_fromHardProcessDecayed_;
	TBranch *genlsp_fromHardProcessDecayed_branch;
	bool genlsp_fromHardProcessDecayed_isLoaded;
	vector<bool> *genlsp_fromHardProcessFinalState_;
	TBranch *genlsp_fromHardProcessFinalState_branch;
	bool genlsp_fromHardProcessFinalState_isLoaded;
	vector<bool> *genlsp_isDirectHardProcessTauDecayProductFinalState_;
	TBranch *genlsp_isDirectHardProcessTauDecayProductFinalState_branch;
	bool genlsp_isDirectHardProcessTauDecayProductFinalState_isLoaded;
	vector<bool> *genlsp_isDirectPromptTauDecayProductFinalState_;
	TBranch *genlsp_isDirectPromptTauDecayProductFinalState_branch;
	bool genlsp_isDirectPromptTauDecayProductFinalState_isLoaded;
	vector<bool> *genlsp_isHardProcess_;
	TBranch *genlsp_isHardProcess_branch;
	bool genlsp_isHardProcess_isLoaded;
	vector<bool> *genlsp_isLastCopy_;
	TBranch *genlsp_isLastCopy_branch;
	bool genlsp_isLastCopy_isLoaded;
	vector<bool> *genlsp_isLastCopyBeforeFSR_;
	TBranch *genlsp_isLastCopyBeforeFSR_branch;
	bool genlsp_isLastCopyBeforeFSR_isLoaded;
	vector<bool> *genlsp_isMostlyLikePythia6Status3_;
	TBranch *genlsp_isMostlyLikePythia6Status3_branch;
	bool genlsp_isMostlyLikePythia6Status3_isLoaded;
	vector<bool> *genlsp_isPromptDecayed_;
	TBranch *genlsp_isPromptDecayed_branch;
	bool genlsp_isPromptDecayed_isLoaded;
	vector<bool> *genlsp_isPromptFinalState_;
	TBranch *genlsp_isPromptFinalState_branch;
	bool genlsp_isPromptFinalState_isLoaded;
	vector<vector<int> > *genlsp_lepdaughter_id_;
	TBranch *genlsp_lepdaughter_id_branch;
	bool genlsp_lepdaughter_id_isLoaded;
	vector<int> *genlsp_gentaudecay_;
	TBranch *genlsp_gentaudecay_branch;
	bool genlsp_gentaudecay_isLoaded;
	int	gen_nfromtlsp__;
	TBranch *gen_nfromtlsp__branch;
	bool gen_nfromtlsp__isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genlsp_motherp4_;
	TBranch *genlsp_motherp4_branch;
	bool genlsp_motherp4_isLoaded;
	vector<float> *genlsp_mothercharge_;
	TBranch *genlsp_mothercharge_branch;
	bool genlsp_mothercharge_isLoaded;
	vector<int> *genlsp_motherid_;
	TBranch *genlsp_motherid_branch;
	bool genlsp_motherid_isLoaded;
	vector<int> *genlsp_motheridx_;
	TBranch *genlsp_motheridx_branch;
	bool genlsp_motheridx_isLoaded;
	vector<int> *genlsp_motherstatus_;
	TBranch *genlsp_motherstatus_branch;
	bool genlsp_motherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genlsp_gmotherp4_;
	TBranch *genlsp_gmotherp4_branch;
	bool genlsp_gmotherp4_isLoaded;
	vector<int> *genlsp_gmothercharge_;
	TBranch *genlsp_gmothercharge_branch;
	bool genlsp_gmothercharge_isLoaded;
	vector<int> *genlsp_gmotherid_;
	TBranch *genlsp_gmotherid_branch;
	bool genlsp_gmotherid_isLoaded;
	vector<int> *genlsp_gmotheridx_;
	TBranch *genlsp_gmotheridx_branch;
	bool genlsp_gmotheridx_isLoaded;
	vector<int> *genlsp_gmotherstatus_;
	TBranch *genlsp_gmotherstatus_branch;
	bool genlsp_gmotherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genlsp_simplemotherp4_;
	TBranch *genlsp_simplemotherp4_branch;
	bool genlsp_simplemotherp4_isLoaded;
	vector<int> *genlsp_simplemothercharge_;
	TBranch *genlsp_simplemothercharge_branch;
	bool genlsp_simplemothercharge_isLoaded;
	vector<int> *genlsp_simplemotherid_;
	TBranch *genlsp_simplemotherid_branch;
	bool genlsp_simplemotherid_isLoaded;
	vector<int> *genlsp_simplemotheridx_;
	TBranch *genlsp_simplemotheridx_branch;
	bool genlsp_simplemotheridx_isLoaded;
	vector<int> *genlsp_simplemotherstatus_;
	TBranch *genlsp_simplemotherstatus_branch;
	bool genlsp_simplemotherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genlsp_simplegmotherp4_;
	TBranch *genlsp_simplegmotherp4_branch;
	bool genlsp_simplegmotherp4_isLoaded;
	vector<int> *genlsp_simplegmothercharge_;
	TBranch *genlsp_simplegmothercharge_branch;
	bool genlsp_simplegmothercharge_isLoaded;
	vector<int> *genlsp_simplegmotherid_;
	TBranch *genlsp_simplegmotherid_branch;
	bool genlsp_simplegmotherid_isLoaded;
	vector<int> *genlsp_simplegmotheridx_;
	TBranch *genlsp_simplegmotheridx_branch;
	bool genlsp_simplegmotheridx_isLoaded;
	vector<int> *genlsp_simplegmotherstatus_;
	TBranch *genlsp_simplegmotherstatus_branch;
	bool genlsp_simplegmotherstatus_isLoaded;
	vector<bool> *genstop_isfromt_;
	TBranch *genstop_isfromt_branch;
	bool genstop_isfromt_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genstop_p4_;
	TBranch *genstop_p4_branch;
	bool genstop_p4_isLoaded;
	vector<float> *genstop_charge_;
	TBranch *genstop_charge_branch;
	bool genstop_charge_isLoaded;
	vector<float> *genstop_iso_;
	TBranch *genstop_iso_branch;
	bool genstop_iso_isLoaded;
	vector<float> *genstop_mass_;
	TBranch *genstop_mass_branch;
	bool genstop_mass_isLoaded;
	vector<int> *genstop_id_;
	TBranch *genstop_id_branch;
	bool genstop_id_isLoaded;
	vector<int> *genstop__genpsidx_;
	TBranch *genstop__genpsidx_branch;
	bool genstop__genpsidx_isLoaded;
	vector<int> *genstop_status_;
	TBranch *genstop_status_branch;
	bool genstop_status_isLoaded;
	vector<bool> *genstop_fromHardProcessBeforeFSR_;
	TBranch *genstop_fromHardProcessBeforeFSR_branch;
	bool genstop_fromHardProcessBeforeFSR_isLoaded;
	vector<bool> *genstop_fromHardProcessDecayed_;
	TBranch *genstop_fromHardProcessDecayed_branch;
	bool genstop_fromHardProcessDecayed_isLoaded;
	vector<bool> *genstop_fromHardProcessFinalState_;
	TBranch *genstop_fromHardProcessFinalState_branch;
	bool genstop_fromHardProcessFinalState_isLoaded;
	vector<bool> *genstop_isDirectHardProcessTauDecayProductFinalState_;
	TBranch *genstop_isDirectHardProcessTauDecayProductFinalState_branch;
	bool genstop_isDirectHardProcessTauDecayProductFinalState_isLoaded;
	vector<bool> *genstop_isDirectPromptTauDecayProductFinalState_;
	TBranch *genstop_isDirectPromptTauDecayProductFinalState_branch;
	bool genstop_isDirectPromptTauDecayProductFinalState_isLoaded;
	vector<bool> *genstop_isHardProcess_;
	TBranch *genstop_isHardProcess_branch;
	bool genstop_isHardProcess_isLoaded;
	vector<bool> *genstop_isLastCopy_;
	TBranch *genstop_isLastCopy_branch;
	bool genstop_isLastCopy_isLoaded;
	vector<bool> *genstop_isLastCopyBeforeFSR_;
	TBranch *genstop_isLastCopyBeforeFSR_branch;
	bool genstop_isLastCopyBeforeFSR_isLoaded;
	vector<bool> *genstop_isMostlyLikePythia6Status3_;
	TBranch *genstop_isMostlyLikePythia6Status3_branch;
	bool genstop_isMostlyLikePythia6Status3_isLoaded;
	vector<bool> *genstop_isPromptDecayed_;
	TBranch *genstop_isPromptDecayed_branch;
	bool genstop_isPromptDecayed_isLoaded;
	vector<bool> *genstop_isPromptFinalState_;
	TBranch *genstop_isPromptFinalState_branch;
	bool genstop_isPromptFinalState_isLoaded;
	vector<vector<int> > *genstop_lepdaughter_id_;
	TBranch *genstop_lepdaughter_id_branch;
	bool genstop_lepdaughter_id_isLoaded;
	vector<int> *genstop_gentaudecay_;
	TBranch *genstop_gentaudecay_branch;
	bool genstop_gentaudecay_isLoaded;
	int	gen_nfromtstop__;
	TBranch *gen_nfromtstop__branch;
	bool gen_nfromtstop__isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genstop_motherp4_;
	TBranch *genstop_motherp4_branch;
	bool genstop_motherp4_isLoaded;
	vector<float> *genstop_mothercharge_;
	TBranch *genstop_mothercharge_branch;
	bool genstop_mothercharge_isLoaded;
	vector<int> *genstop_motherid_;
	TBranch *genstop_motherid_branch;
	bool genstop_motherid_isLoaded;
	vector<int> *genstop_motheridx_;
	TBranch *genstop_motheridx_branch;
	bool genstop_motheridx_isLoaded;
	vector<int> *genstop_motherstatus_;
	TBranch *genstop_motherstatus_branch;
	bool genstop_motherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genstop_gmotherp4_;
	TBranch *genstop_gmotherp4_branch;
	bool genstop_gmotherp4_isLoaded;
	vector<int> *genstop_gmothercharge_;
	TBranch *genstop_gmothercharge_branch;
	bool genstop_gmothercharge_isLoaded;
	vector<int> *genstop_gmotherid_;
	TBranch *genstop_gmotherid_branch;
	bool genstop_gmotherid_isLoaded;
	vector<int> *genstop_gmotheridx_;
	TBranch *genstop_gmotheridx_branch;
	bool genstop_gmotheridx_isLoaded;
	vector<int> *genstop_gmotherstatus_;
	TBranch *genstop_gmotherstatus_branch;
	bool genstop_gmotherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genstop_simplemotherp4_;
	TBranch *genstop_simplemotherp4_branch;
	bool genstop_simplemotherp4_isLoaded;
	vector<int> *genstop_simplemothercharge_;
	TBranch *genstop_simplemothercharge_branch;
	bool genstop_simplemothercharge_isLoaded;
	vector<int> *genstop_simplemotherid_;
	TBranch *genstop_simplemotherid_branch;
	bool genstop_simplemotherid_isLoaded;
	vector<int> *genstop_simplemotheridx_;
	TBranch *genstop_simplemotheridx_branch;
	bool genstop_simplemotheridx_isLoaded;
	vector<int> *genstop_simplemotherstatus_;
	TBranch *genstop_simplemotherstatus_branch;
	bool genstop_simplemotherstatus_isLoaded;
	vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *genstop_simplegmotherp4_;
	TBranch *genstop_simplegmotherp4_branch;
	bool genstop_simplegmotherp4_isLoaded;
	vector<int> *genstop_simplegmothercharge_;
	TBranch *genstop_simplegmothercharge_branch;
	bool genstop_simplegmothercharge_isLoaded;
	vector<int> *genstop_simplegmotherid_;
	TBranch *genstop_simplegmotherid_branch;
	bool genstop_simplegmotherid_isLoaded;
	vector<int> *genstop_simplegmotheridx_;
	TBranch *genstop_simplegmotheridx_branch;
	bool genstop_simplegmotheridx_isLoaded;
	vector<int> *genstop_simplegmotherstatus_;
	TBranch *genstop_simplegmotherstatus_branch;
	bool genstop_simplegmotherstatus_isLoaded;
public: 
void Init(TTree *tree);
void GetEntry(unsigned int idx); 
void LoadAllBranches(); 
	const unsigned int &run();
	const unsigned int &ls();
	const unsigned int &evt();
	const int &nvtxs();
	const int &firstGoodVtxIdx();
	const int &firstVtx_isfake();
	const float &firstVtx_ndof();
	const float &firstVtx_posRho();
	const float &firstVtx_posZ();
	const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &firstVtx_posp4();
	const int &pu_nvtxs();
	const float &pfmet();
	const float &pfmet_phi();
	const float &calomet();
	const float &calomet_phi();
	const float &filt_cscbeamhalo();
	const float &filt_ecallaser();
	const float &filt_ecaltp();
	const float &filt_eebadsc();
	const float &filt_goodvtx();
	const float &filt_hbhenoise();
	const float &filt_hbhenoise_25ns();
	const float &filt_hbhenoise_50ns();
	const float &filt_hcallaser();
	const float &filt_met();
	const float &filt_trkfail();
	const float &filt_trkPOG();
	const float &filt_trkPOG_tmc();
	const float &filt_trkPOG_tms();
	const float &filt_eff();
	const float &scale1fb();
	const float &xsec();
	const float &kfactor();
	const float &pu_ntrue();
	const int &ngoodleps();
	const int &nlooseleps();
	const int &nvetoleps();
	const bool &	is_data();
	const string &dataset();
	const string &filename();
	const string &cms3tag();
	const unsigned int &nEvents();
	const unsigned int &nEvents_goodvtx();
	const unsigned int &nEvents_MET30();
	const unsigned int &nEvents_1goodlep();
	const unsigned int &nEvents_2goodjets();
	const int &genlepsfromtop();
	const float &MT2W();
	const float &MT2W_lep2();
	const float &mindphi_met_j1_j2();
	const float &mt_met_lep();
	const float &mt_met_lep2();
	const float &dR_lep_leadb();
	const float &dR_lep2_leadb();
	const float &hadronic_top_chi2();
	const float &dphi_Wlep();
	const float &MET_over_sqrtHT();
	const float &ak4pfjets_rho();
	const vector<string> &genweightsID();
	const vector<float> &genweights();
	const vector<string> &sparms_names();
	const float &sparms_filterEfficiency();
	const float &sparms_pdfScale();
	const float &sparms_pdfWeight1();
	const float &sparms_pdfWeight2();
	const float &sparms_weight();
	const float &sparms_xsec();
	const vector<float> &sparms_values();
	const int &sparms_subProcessId();
	const float &mass_lsp();
	const float &mass_chargino();
	const float &mass_stop();
	const float &genmet();
	const float &genmet_phi();
	const bool &	PassTrackVeto();
	const bool &	PassTrackVeto_v2();
	const bool &	PassTrackVeto_v3();
	const bool &	PassTauVeto();
	const float &EA_all_rho();
	const float &EA_allcalo_rho();
	const float &EA_centralcalo_rho();
	const float &EA_centralchargedpileup_rho();
	const float &EA_centralneutral_rho();
	const float &topness();
	const float &topness_lep2();
	const float &topnessMod();
	const float &topnessMod_lep2();
	const float &MT2_lb_b();
	const float &MT2_lb_b_lep2();
	const float &MT2_lb_b_mass();
	const float &MT2_lb_b_mass_lep2();
	const float &MT2_lb_bqq();
	const float &MT2_lb_bqq_lep2();
	const float &MT2_lb_bqq_mass();
	const float &MT2_lb_bqq_mass_lep2();
	const float &Mlb_closestb();
	const float &Mlb_lead_bdiscr();
	const float &Mlb_closestb_lep2();
	const float &Mlb_lead_bdiscr_lep2();
	const float &Mjjj();
	const float &Mjjj_lep2();
	const int &HLT_SingleEl();
	const int &HLT_SingleMu();
	const int &HLT_MET170();
	const int &HLT_MET120Btag();
	const int &HLT_MET120Mu5();
	const int &HLT_HT350MET120();
	const int &HLT_DiEl();
	const int &HLT_DiMu();
	const int &HLT_Mu8El17();
	const int &HLT_Mu8El23();
	const int &HLT_Mu17El12();
	const int &HLT_Mu23El12();
	const int &HLT_SingleEl27();
	const int &HLT_SingleEl27Tight();
	const int &HLT_SingleElTight();
	const int &HLT_SingleElHT200();
	const int &HLT_SingleMuNoEta();
	const int &HLT_SingleMuNoIso();
	const int &HLT_SingleMuNoIsoNoEta();
	const int &HLT_Mu6HT200MET100();
	const int &HLT_HT350MET100();
	const int &HLT_SingleMu17();
	const int &HLT_SingleMu20();
	const int &HLT_SingleMu24();
	const int &HLT_MonoCentPFJet80_METNoMu90_MHTNoMu90_IDTight();
	const int &HLT_MET90_MHT90_IDTight();
	const int &HLT_METNoMu90_NoiseCleaned_MHTNoMu90_IDTight();
	const int &HLT_Photon90_CaloIdL_PFHT500();
	const int &HLT_Photon165_R9Id90_HE10_IsoM();
	const int &HLT_Photon175();
	const int &HLT_Photon165_HE10();
	const float &pu_weight();
	const float &lep_sf();
	const float &btag_sf();
	const float &HLT_SingleEl_eff();
	const float &HLT_SingleMu_eff();
	const int &nPhotons();
	const int &ph_selectedidx();
	const int &ph_ngoodjets();
	const int &ph_ngoodbtags();
	const float &ph_met();
	const float &ph_met_phi();
	const float &ph_HT();
	const float &ph_htssm();
	const float &ph_htosm();
	const float &ph_htratiom();
	const float &ph_mt_met_lep();
	const float &ph_dphi_Wlep();
	const float &ph_MT2W();
	const float &ph_topness();
	const float &ph_topnessMod();
	const float &ph_MT2_lb_b_mass();
	const float &ph_MT2_lb_b();
	const float &ph_MT2_lb_bqq_mass();
	const float &ph_MT2_lb_bqq();
	const float &ph_hadronic_top_chi2();
	const float &ph_mindphi_met_j1_j2();
	const float &ph_Mlb_lead_bdiscr();
	const float &ph_dR_lep_leadb();
	const float &ph_Mlb_closestb();
	const float &ph_Mjjj();
	const int &Zll_idl1();
	const int &Zll_idl2();
	const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &Zll_p4l1();
	const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &Zll_p4l2();
	const bool &	Zll_OS();
	const bool &	Zll_SF();
	const bool &	Zll_isZmass();
	const float &Zll_M();
	const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &Zll_p4();
	const int &Zll_selLep();
	const float &Zll_met();
	const float &Zll_met_phi();
	const float &Zll_mindphi_met_j1_j2();
	const float &Zll_mt_met_lep();
	const float &Zll_dphi_Wlep();
	const float &Zll_MT2W();
	const float &Zll_topness();
	const float &Zll_topnessMod();
	const float &Zll_MT2_lb_b_mass();
	const float &Zll_MT2_lb_b();
	const float &Zll_MT2_lb_bqq_mass();
	const float &Zll_MT2_lb_bqq();
	const bool &	lep1_is_mu();
	const bool &	lep1_is_el();
	const int &lep1_charge();
	const int &lep1_pdgid();
	const int &lep1_type();
	const int &lep1_production_type();
	const float &lep1_d0();
	const float &lep1_d0err();
	const float &lep1_dz();
	const float &lep1_dzerr();
	const float &lep1_sigmaIEtaEta_fill5x5();
	const float &lep1_dEtaIn();
	const float &lep1_dPhiIn();
	const float &lep1_hOverE();
	const float &lep1_ooEmooP();
	const int &lep1_expectedMissingInnerHits();
	const bool &	lep1_conversionVeto();
	const float &lep1_etaSC();
	const float &lep1_ChiSqr();
	const float &lep1_chiso();
	const float &lep1_nhiso();
	const float &lep1_emiso();
	const float &lep1_deltaBeta();
	const float &lep1_relIso03DB();
	const float &lep1_relIso03EA();
	const float &lep1_relIso04DB();
	const float &lep1_miniRelIsoDB();
	const float &lep1_miniRelIsoEA();
	const float &lep1_MiniIso();
	const int &lep1_mcid();
	const int &lep1_mcstatus();
	const int &lep1_mc3dr();
	const int &lep1_mc3id();
	const int &lep1_mc3idx();
	const int &lep1_mc3motherid();
	const int &lep1_mc3motheridx();
	const bool &	lep1_is_eleid_loose();
	const bool &	lep1_is_eleid_medium();
	const bool &	lep1_is_eleid_tight();
	const bool &	lep1_is_phys14_loose_noIso();
	const bool &	lep1_is_phys14_medium_noIso();
	const bool &	lep1_is_phys14_tight_noIso();
	const float &lep1_eoverpin();
	const bool &	lep1_is_muoid_loose();
	const bool &	lep1_is_muoid_medium();
	const bool &	lep1_is_muoid_tight();
	const float &lep1_ip3d();
	const float &lep1_ip3derr();
	const bool &	lep1_is_pfmu();
	const bool &	lep1_passMediumID();
	const bool &	lep1_passVeto();
	const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &lep1_p4();
	const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &lep1_mcp4();
	const float &lep1_pt();
	const float &lep1_eta();
	const float &lep1_phi();
	const float &lep1_mass();
	const bool &	lep2_is_mu();
	const bool &	lep2_is_el();
	const int &lep2_charge();
	const int &lep2_pdgid();
	const int &lep2_type();
	const int &lep2_production_type();
	const float &lep2_d0();
	const float &lep2_d0err();
	const float &lep2_dz();
	const float &lep2_dzerr();
	const float &lep2_sigmaIEtaEta_fill5x5();
	const float &lep2_dEtaIn();
	const float &lep2_dPhiIn();
	const float &lep2_hOverE();
	const float &lep2_ooEmooP();
	const int &lep2_expectedMissingInnerHits();
	const bool &	lep2_conversionVeto();
	const float &lep2_etaSC();
	const float &lep2_ChiSqr();
	const float &lep2_chiso();
	const float &lep2_nhiso();
	const float &lep2_emiso();
	const float &lep2_deltaBeta();
	const float &lep2_relIso03DB();
	const float &lep2_relIso03EA();
	const float &lep2_relIso04DB();
	const float &lep2_miniRelIsoDB();
	const float &lep2_miniRelIsoEA();
	const float &lep2_MiniIso();
	const int &lep2_mcid();
	const int &lep2_mcstatus();
	const int &lep2_mc3dr();
	const int &lep2_mc3id();
	const int &lep2_mc3idx();
	const int &lep2_mc3motherid();
	const int &lep2_mc3motheridx();
	const bool &	lep2_is_eleid_loose();
	const bool &	lep2_is_eleid_medium();
	const bool &	lep2_is_eleid_tight();
	const bool &	lep2_is_phys14_loose_noIso();
	const bool &	lep2_is_phys14_medium_noIso();
	const bool &	lep2_is_phys14_tight_noIso();
	const float &lep2_eoverpin();
	const bool &	lep2_is_muoid_loose();
	const bool &	lep2_is_muoid_medium();
	const bool &	lep2_is_muoid_tight();
	const float &lep2_ip3d();
	const float &lep2_ip3derr();
	const bool &	lep2_is_pfmu();
	const bool &	lep2_passMediumID();
	const bool &	lep2_passVeto();
	const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &lep2_p4();
	const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &lep2_mcp4();
	const float &lep2_pt();
	const float &lep2_eta();
	const float &lep2_phi();
	const float &lep2_mass();
	const vector<float> &ph_sigmaIEtaEta_fill5x5();
	const vector<float> &ph_hOverE();
	const vector<float> &ph_r9();
	const vector<float> &ph_chiso();
	const vector<float> &ph_nhiso();
	const vector<float> &ph_phiso();
	const vector<bool> &ph_idCutBased();
	const vector<int> &ph_overlapJetId();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &ph_p4();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &ph_mcp4();
	const vector<float> &ph_pt();
	const vector<float> &ph_eta();
	const vector<float> &ph_phi();
	const vector<float> &ph_mass();
	const vector<int> &ph_mcMatchId();
	const vector<float> &ph_genIso04();
	const vector<float> &ph_drMinParton();
	const int &nGoodGenJets();
	const int &ngoodjets();
	const int &nfailjets();
	const int &ak8GoodPFJets();
	const int &ngoodbtags();
	const float &ak4_HT();
	const float &ak4_htssm();
	const float &ak4_htosm();
	const float &ak4_htratiom();
	const vector<float> &dphi_ak4pfjet_met();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &ak4pfjets_p4();
	const vector<float> &ak4pfjets_pt();
	const vector<float> &ak4pfjets_eta();
	const vector<float> &ak4pfjets_phi();
	const vector<float> &ak4pfjets_mass();
	const vector<bool> &ak4pfjets_passMEDbtag();
	const vector<float> &ak4pfjets_qg_disc();
	const vector<float> &ak4pfjets_CSV();
	const vector<float> &ak4pfjets_puid();
	const vector<int> &ak4pfjets_parton_flavor();
	const vector<bool> &ak4pfjets_loose_puid();
	const vector<bool> &ak4pfjets_loose_pfid();
	const vector<bool> &ak4pfjets_medium_pfid();
	const vector<bool> &ak4pfjets_tight_pfid();
	const vector<float> &ak4pfjets_MEDbjet_pt();
	const float &ak4pfjets_leadMEDbjet_pt();
	const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &ak4pfjets_leadMEDbjet_p4();
	const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &ak4pfjets_leadbtag_p4();
	const vector<float> &ak4pfjets_chf();
	const vector<float> &ak4pfjets_nhf();
	const vector<float> &ak4pfjets_cef();
	const vector<float> &ak4pfjets_nef();
	const vector<float> &ak4pfjets_muf();
	const vector<int> &ak4pfjets_cm();
	const vector<int> &ak4pfjets_nm();
	const vector<int> &ak4pfjets_mc3dr();
	const vector<int> &ak4pfjets_mc3id();
	const vector<int> &ak4pfjets_mc3idx();
	const vector<int> &ak4pfjets_mcmotherid();
	const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &ak4pfjet_overlep1_p4();
	const float &ak4pfjet_overlep1_CSV();
	const float &ak4pfjet_overlep1_pu_id();
	const float &ak4pfjet_overlep1_chf();
	const float &ak4pfjet_overlep1_nhf();
	const float &ak4pfjet_overlep1_cef();
	const float &ak4pfjet_overlep1_nef();
	const float &ak4pfjet_overlep1_muf();
	const int &ak4pfjet_overlep1_cm();
	const int &ak4pfjet_overlep1_nm();
	const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &ak4pfjet_overlep2_p4();
	const float &ak4pfjet_overlep2_CSV();
	const float &ak4pfjet_overlep2_pu_id();
	const float &ak4pfjet_overlep2_chf();
	const float &ak4pfjet_overlep2_nhf();
	const float &ak4pfjet_overlep2_cef();
	const float &ak4pfjet_overlep2_nef();
	const float &ak4pfjet_overlep2_muf();
	const int &ak4pfjet_overlep2_cm();
	const int &ak4pfjet_overlep2_nm();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &ak8pfjets_p4();
	const vector<float> &ak8pfjets_tau1();
	const vector<float> &ak8pfjets_tau2();
	const vector<float> &ak8pfjets_tau3();
	const vector<float> &ak8pfjets_top_mass();
	const vector<float> &ak8pfjets_pruned_mass();
	const vector<float> &ak8pfjets_trimmed_mass();
	const vector<float> &ak8pfjets_filtered_mass();
	const vector<float> &ak8pfjets_pu_id();
	const vector<int> &ak8pfjets_parton_flavor();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &ak4genjets_p4();
	const vector<TString> &tau_IDnames();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &tau_leadtrack_p4();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &tau_leadneutral_p4();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &tau_p4();
	const vector<vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > > &tau_isocand_p4();
	const vector<vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > > &tau_sigcand_p4();
	const vector<float> &tau_mass();
	const vector<vector<float> > &tau_ID();
	const vector<float> &tau_passID();
	const vector<float> &tau_charge();
	const int &ngoodtaus();
	const vector<float> &tau_againstMuonTight();
	const vector<float> &tau_againstElectronLoose();
	const vector<bool> &tau_isVetoTau();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &isoTracks_p4();
	const vector<int> &isoTracks_charge();
	const vector<float> &isoTracks_absIso();
	const vector<float> &isoTracks_dz();
	const vector<int> &isoTracks_pdgId();
	const vector<int> &isoTracks_selectedidx();
	const int &isoTracks_nselected();
	const vector<bool> &isoTracks_isVetoTrack();
	const vector<bool> &isoTracks_isVetoTrack_v2();
	const vector<bool> &isoTracks_isVetoTrack_v3();
	const vector<bool> &genels_isfromt();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genels_p4();
	const vector<float> &genels_charge();
	const vector<float> &genels_iso();
	const vector<float> &genels_mass();
	const vector<int> &genels_id();
	const vector<int> &genels__genpsidx();
	const vector<int> &genels_status();
	const vector<bool> &genels_fromHardProcessBeforeFSR();
	const vector<bool> &genels_fromHardProcessDecayed();
	const vector<bool> &genels_fromHardProcessFinalState();
	const vector<bool> &genels_isDirectHardProcessTauDecayProductFinalState();
	const vector<bool> &genels_isDirectPromptTauDecayProductFinalState();
	const vector<bool> &genels_isHardProcess();
	const vector<bool> &genels_isLastCopy();
	const vector<bool> &genels_isLastCopyBeforeFSR();
	const vector<bool> &genels_isMostlyLikePythia6Status3();
	const vector<bool> &genels_isPromptDecayed();
	const vector<bool> &genels_isPromptFinalState();
	const vector<vector<int> > &genels_lepdaughter_id();
	const vector<int> &genels_gentaudecay();
	const int &gen_nfromtels_();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genels_motherp4();
	const vector<float> &genels_mothercharge();
	const vector<int> &genels_motherid();
	const vector<int> &genels_motheridx();
	const vector<int> &genels_motherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genels_gmotherp4();
	const vector<int> &genels_gmothercharge();
	const vector<int> &genels_gmotherid();
	const vector<int> &genels_gmotheridx();
	const vector<int> &genels_gmotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genels_simplemotherp4();
	const vector<int> &genels_simplemothercharge();
	const vector<int> &genels_simplemotherid();
	const vector<int> &genels_simplemotheridx();
	const vector<int> &genels_simplemotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genels_simplegmotherp4();
	const vector<int> &genels_simplegmothercharge();
	const vector<int> &genels_simplegmotherid();
	const vector<int> &genels_simplegmotheridx();
	const vector<int> &genels_simplegmotherstatus();
	const vector<bool> &genmus_isfromt();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genmus_p4();
	const vector<float> &genmus_charge();
	const vector<float> &genmus_iso();
	const vector<float> &genmus_mass();
	const vector<int> &genmus_id();
	const vector<int> &genmus__genpsidx();
	const vector<int> &genmus_status();
	const vector<bool> &genmus_fromHardProcessBeforeFSR();
	const vector<bool> &genmus_fromHardProcessDecayed();
	const vector<bool> &genmus_fromHardProcessFinalState();
	const vector<bool> &genmus_isDirectHardProcessTauDecayProductFinalState();
	const vector<bool> &genmus_isDirectPromptTauDecayProductFinalState();
	const vector<bool> &genmus_isHardProcess();
	const vector<bool> &genmus_isLastCopy();
	const vector<bool> &genmus_isLastCopyBeforeFSR();
	const vector<bool> &genmus_isMostlyLikePythia6Status3();
	const vector<bool> &genmus_isPromptDecayed();
	const vector<bool> &genmus_isPromptFinalState();
	const vector<vector<int> > &genmus_lepdaughter_id();
	const vector<int> &genmus_gentaudecay();
	const int &gen_nfromtmus_();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genmus_motherp4();
	const vector<float> &genmus_mothercharge();
	const vector<int> &genmus_motherid();
	const vector<int> &genmus_motheridx();
	const vector<int> &genmus_motherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genmus_gmotherp4();
	const vector<int> &genmus_gmothercharge();
	const vector<int> &genmus_gmotherid();
	const vector<int> &genmus_gmotheridx();
	const vector<int> &genmus_gmotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genmus_simplemotherp4();
	const vector<int> &genmus_simplemothercharge();
	const vector<int> &genmus_simplemotherid();
	const vector<int> &genmus_simplemotheridx();
	const vector<int> &genmus_simplemotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genmus_simplegmotherp4();
	const vector<int> &genmus_simplegmothercharge();
	const vector<int> &genmus_simplegmotherid();
	const vector<int> &genmus_simplegmotheridx();
	const vector<int> &genmus_simplegmotherstatus();
	const vector<bool> &gentaus_isfromt();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gentaus_p4();
	const vector<float> &gentaus_charge();
	const vector<float> &gentaus_iso();
	const vector<float> &gentaus_mass();
	const vector<int> &gentaus_id();
	const vector<int> &gentaus__genpsidx();
	const vector<int> &gentaus_status();
	const vector<bool> &gentaus_fromHardProcessBeforeFSR();
	const vector<bool> &gentaus_fromHardProcessDecayed();
	const vector<bool> &gentaus_fromHardProcessFinalState();
	const vector<bool> &gentaus_isDirectHardProcessTauDecayProductFinalState();
	const vector<bool> &gentaus_isDirectPromptTauDecayProductFinalState();
	const vector<bool> &gentaus_isHardProcess();
	const vector<bool> &gentaus_isLastCopy();
	const vector<bool> &gentaus_isLastCopyBeforeFSR();
	const vector<bool> &gentaus_isMostlyLikePythia6Status3();
	const vector<bool> &gentaus_isPromptDecayed();
	const vector<bool> &gentaus_isPromptFinalState();
	const vector<vector<int> > &gentaus_lepdaughter_id();
	const vector<int> &gentaus_gentaudecay();
	const int &gen_nfromttaus_();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gentaus_motherp4();
	const vector<float> &gentaus_mothercharge();
	const vector<int> &gentaus_motherid();
	const vector<int> &gentaus_motheridx();
	const vector<int> &gentaus_motherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gentaus_gmotherp4();
	const vector<int> &gentaus_gmothercharge();
	const vector<int> &gentaus_gmotherid();
	const vector<int> &gentaus_gmotheridx();
	const vector<int> &gentaus_gmotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gentaus_simplemotherp4();
	const vector<int> &gentaus_simplemothercharge();
	const vector<int> &gentaus_simplemotherid();
	const vector<int> &gentaus_simplemotheridx();
	const vector<int> &gentaus_simplemotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gentaus_simplegmotherp4();
	const vector<int> &gentaus_simplegmothercharge();
	const vector<int> &gentaus_simplegmotherid();
	const vector<int> &gentaus_simplegmotheridx();
	const vector<int> &gentaus_simplegmotherstatus();
	const vector<bool> &gennuels_isfromt();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gennuels_p4();
	const vector<float> &gennuels_charge();
	const vector<float> &gennuels_iso();
	const vector<float> &gennuels_mass();
	const vector<int> &gennuels_id();
	const vector<int> &gennuels__genpsidx();
	const vector<int> &gennuels_status();
	const vector<bool> &gennuels_fromHardProcessBeforeFSR();
	const vector<bool> &gennuels_fromHardProcessDecayed();
	const vector<bool> &gennuels_fromHardProcessFinalState();
	const vector<bool> &gennuels_isDirectHardProcessTauDecayProductFinalState();
	const vector<bool> &gennuels_isDirectPromptTauDecayProductFinalState();
	const vector<bool> &gennuels_isHardProcess();
	const vector<bool> &gennuels_isLastCopy();
	const vector<bool> &gennuels_isLastCopyBeforeFSR();
	const vector<bool> &gennuels_isMostlyLikePythia6Status3();
	const vector<bool> &gennuels_isPromptDecayed();
	const vector<bool> &gennuels_isPromptFinalState();
	const vector<vector<int> > &gennuels_lepdaughter_id();
	const vector<int> &gennuels_gentaudecay();
	const int &gen_nfromtnuels_();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gennuels_motherp4();
	const vector<float> &gennuels_mothercharge();
	const vector<int> &gennuels_motherid();
	const vector<int> &gennuels_motheridx();
	const vector<int> &gennuels_motherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gennuels_gmotherp4();
	const vector<int> &gennuels_gmothercharge();
	const vector<int> &gennuels_gmotherid();
	const vector<int> &gennuels_gmotheridx();
	const vector<int> &gennuels_gmotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gennuels_simplemotherp4();
	const vector<int> &gennuels_simplemothercharge();
	const vector<int> &gennuels_simplemotherid();
	const vector<int> &gennuels_simplemotheridx();
	const vector<int> &gennuels_simplemotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gennuels_simplegmotherp4();
	const vector<int> &gennuels_simplegmothercharge();
	const vector<int> &gennuels_simplegmotherid();
	const vector<int> &gennuels_simplegmotheridx();
	const vector<int> &gennuels_simplegmotherstatus();
	const vector<bool> &gennumus_isfromt();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gennumus_p4();
	const vector<float> &gennumus_charge();
	const vector<float> &gennumus_iso();
	const vector<float> &gennumus_mass();
	const vector<int> &gennumus_id();
	const vector<int> &gennumus__genpsidx();
	const vector<int> &gennumus_status();
	const vector<bool> &gennumus_fromHardProcessBeforeFSR();
	const vector<bool> &gennumus_fromHardProcessDecayed();
	const vector<bool> &gennumus_fromHardProcessFinalState();
	const vector<bool> &gennumus_isDirectHardProcessTauDecayProductFinalState();
	const vector<bool> &gennumus_isDirectPromptTauDecayProductFinalState();
	const vector<bool> &gennumus_isHardProcess();
	const vector<bool> &gennumus_isLastCopy();
	const vector<bool> &gennumus_isLastCopyBeforeFSR();
	const vector<bool> &gennumus_isMostlyLikePythia6Status3();
	const vector<bool> &gennumus_isPromptDecayed();
	const vector<bool> &gennumus_isPromptFinalState();
	const vector<vector<int> > &gennumus_lepdaughter_id();
	const vector<int> &gennumus_gentaudecay();
	const int &gen_nfromtnumus_();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gennumus_motherp4();
	const vector<float> &gennumus_mothercharge();
	const vector<int> &gennumus_motherid();
	const vector<int> &gennumus_motheridx();
	const vector<int> &gennumus_motherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gennumus_gmotherp4();
	const vector<int> &gennumus_gmothercharge();
	const vector<int> &gennumus_gmotherid();
	const vector<int> &gennumus_gmotheridx();
	const vector<int> &gennumus_gmotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gennumus_simplemotherp4();
	const vector<int> &gennumus_simplemothercharge();
	const vector<int> &gennumus_simplemotherid();
	const vector<int> &gennumus_simplemotheridx();
	const vector<int> &gennumus_simplemotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gennumus_simplegmotherp4();
	const vector<int> &gennumus_simplegmothercharge();
	const vector<int> &gennumus_simplegmotherid();
	const vector<int> &gennumus_simplegmotheridx();
	const vector<int> &gennumus_simplegmotherstatus();
	const vector<bool> &gennutaus_isfromt();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gennutaus_p4();
	const vector<float> &gennutaus_charge();
	const vector<float> &gennutaus_iso();
	const vector<float> &gennutaus_mass();
	const vector<int> &gennutaus_id();
	const vector<int> &gennutaus__genpsidx();
	const vector<int> &gennutaus_status();
	const vector<bool> &gennutaus_fromHardProcessBeforeFSR();
	const vector<bool> &gennutaus_fromHardProcessDecayed();
	const vector<bool> &gennutaus_fromHardProcessFinalState();
	const vector<bool> &gennutaus_isDirectHardProcessTauDecayProductFinalState();
	const vector<bool> &gennutaus_isDirectPromptTauDecayProductFinalState();
	const vector<bool> &gennutaus_isHardProcess();
	const vector<bool> &gennutaus_isLastCopy();
	const vector<bool> &gennutaus_isLastCopyBeforeFSR();
	const vector<bool> &gennutaus_isMostlyLikePythia6Status3();
	const vector<bool> &gennutaus_isPromptDecayed();
	const vector<bool> &gennutaus_isPromptFinalState();
	const vector<vector<int> > &gennutaus_lepdaughter_id();
	const vector<int> &gennutaus_gentaudecay();
	const int &gen_nfromtnutaus_();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gennutaus_motherp4();
	const vector<float> &gennutaus_mothercharge();
	const vector<int> &gennutaus_motherid();
	const vector<int> &gennutaus_motheridx();
	const vector<int> &gennutaus_motherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gennutaus_gmotherp4();
	const vector<int> &gennutaus_gmothercharge();
	const vector<int> &gennutaus_gmotherid();
	const vector<int> &gennutaus_gmotheridx();
	const vector<int> &gennutaus_gmotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gennutaus_simplemotherp4();
	const vector<int> &gennutaus_simplemothercharge();
	const vector<int> &gennutaus_simplemotherid();
	const vector<int> &gennutaus_simplemotheridx();
	const vector<int> &gennutaus_simplemotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gennutaus_simplegmotherp4();
	const vector<int> &gennutaus_simplegmothercharge();
	const vector<int> &gennutaus_simplegmotherid();
	const vector<int> &gennutaus_simplegmotheridx();
	const vector<int> &gennutaus_simplegmotherstatus();
	const vector<bool> &gents_isfromt();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gents_p4();
	const vector<float> &gents_charge();
	const vector<float> &gents_iso();
	const vector<float> &gents_mass();
	const vector<int> &gents_id();
	const vector<int> &gents__genpsidx();
	const vector<int> &gents_status();
	const vector<bool> &gents_fromHardProcessBeforeFSR();
	const vector<bool> &gents_fromHardProcessDecayed();
	const vector<bool> &gents_fromHardProcessFinalState();
	const vector<bool> &gents_isDirectHardProcessTauDecayProductFinalState();
	const vector<bool> &gents_isDirectPromptTauDecayProductFinalState();
	const vector<bool> &gents_isHardProcess();
	const vector<bool> &gents_isLastCopy();
	const vector<bool> &gents_isLastCopyBeforeFSR();
	const vector<bool> &gents_isMostlyLikePythia6Status3();
	const vector<bool> &gents_isPromptDecayed();
	const vector<bool> &gents_isPromptFinalState();
	const vector<vector<int> > &gents_lepdaughter_id();
	const vector<int> &gents_gentaudecay();
	const int &gen_nfromtts_();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gents_motherp4();
	const vector<float> &gents_mothercharge();
	const vector<int> &gents_motherid();
	const vector<int> &gents_motheridx();
	const vector<int> &gents_motherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gents_gmotherp4();
	const vector<int> &gents_gmothercharge();
	const vector<int> &gents_gmotherid();
	const vector<int> &gents_gmotheridx();
	const vector<int> &gents_gmotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gents_simplemotherp4();
	const vector<int> &gents_simplemothercharge();
	const vector<int> &gents_simplemotherid();
	const vector<int> &gents_simplemotheridx();
	const vector<int> &gents_simplemotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gents_simplegmotherp4();
	const vector<int> &gents_simplegmothercharge();
	const vector<int> &gents_simplegmotherid();
	const vector<int> &gents_simplegmotheridx();
	const vector<int> &gents_simplegmotherstatus();
	const vector<bool> &genbs_isfromt();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genbs_p4();
	const vector<float> &genbs_charge();
	const vector<float> &genbs_iso();
	const vector<float> &genbs_mass();
	const vector<int> &genbs_id();
	const vector<int> &genbs__genpsidx();
	const vector<int> &genbs_status();
	const vector<bool> &genbs_fromHardProcessBeforeFSR();
	const vector<bool> &genbs_fromHardProcessDecayed();
	const vector<bool> &genbs_fromHardProcessFinalState();
	const vector<bool> &genbs_isDirectHardProcessTauDecayProductFinalState();
	const vector<bool> &genbs_isDirectPromptTauDecayProductFinalState();
	const vector<bool> &genbs_isHardProcess();
	const vector<bool> &genbs_isLastCopy();
	const vector<bool> &genbs_isLastCopyBeforeFSR();
	const vector<bool> &genbs_isMostlyLikePythia6Status3();
	const vector<bool> &genbs_isPromptDecayed();
	const vector<bool> &genbs_isPromptFinalState();
	const vector<vector<int> > &genbs_lepdaughter_id();
	const vector<int> &genbs_gentaudecay();
	const int &gen_nfromtbs_();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genbs_motherp4();
	const vector<float> &genbs_mothercharge();
	const vector<int> &genbs_motherid();
	const vector<int> &genbs_motheridx();
	const vector<int> &genbs_motherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genbs_gmotherp4();
	const vector<int> &genbs_gmothercharge();
	const vector<int> &genbs_gmotherid();
	const vector<int> &genbs_gmotheridx();
	const vector<int> &genbs_gmotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genbs_simplemotherp4();
	const vector<int> &genbs_simplemothercharge();
	const vector<int> &genbs_simplemotherid();
	const vector<int> &genbs_simplemotheridx();
	const vector<int> &genbs_simplemotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genbs_simplegmotherp4();
	const vector<int> &genbs_simplegmothercharge();
	const vector<int> &genbs_simplegmotherid();
	const vector<int> &genbs_simplegmotheridx();
	const vector<int> &genbs_simplegmotherstatus();
	const vector<bool> &gencs_isfromt();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gencs_p4();
	const vector<float> &gencs_charge();
	const vector<float> &gencs_iso();
	const vector<float> &gencs_mass();
	const vector<int> &gencs_id();
	const vector<int> &gencs__genpsidx();
	const vector<int> &gencs_status();
	const vector<bool> &gencs_fromHardProcessBeforeFSR();
	const vector<bool> &gencs_fromHardProcessDecayed();
	const vector<bool> &gencs_fromHardProcessFinalState();
	const vector<bool> &gencs_isDirectHardProcessTauDecayProductFinalState();
	const vector<bool> &gencs_isDirectPromptTauDecayProductFinalState();
	const vector<bool> &gencs_isHardProcess();
	const vector<bool> &gencs_isLastCopy();
	const vector<bool> &gencs_isLastCopyBeforeFSR();
	const vector<bool> &gencs_isMostlyLikePythia6Status3();
	const vector<bool> &gencs_isPromptDecayed();
	const vector<bool> &gencs_isPromptFinalState();
	const vector<vector<int> > &gencs_lepdaughter_id();
	const vector<int> &gencs_gentaudecay();
	const int &gen_nfromtcs_();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gencs_motherp4();
	const vector<float> &gencs_mothercharge();
	const vector<int> &gencs_motherid();
	const vector<int> &gencs_motheridx();
	const vector<int> &gencs_motherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gencs_gmotherp4();
	const vector<int> &gencs_gmothercharge();
	const vector<int> &gencs_gmotherid();
	const vector<int> &gencs_gmotheridx();
	const vector<int> &gencs_gmotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gencs_simplemotherp4();
	const vector<int> &gencs_simplemothercharge();
	const vector<int> &gencs_simplemotherid();
	const vector<int> &gencs_simplemotheridx();
	const vector<int> &gencs_simplemotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gencs_simplegmotherp4();
	const vector<int> &gencs_simplegmothercharge();
	const vector<int> &gencs_simplegmotherid();
	const vector<int> &gencs_simplegmotheridx();
	const vector<int> &gencs_simplegmotherstatus();
	const vector<bool> &genqs_isfromt();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genqs_p4();
	const vector<float> &genqs_charge();
	const vector<float> &genqs_iso();
	const vector<float> &genqs_mass();
	const vector<int> &genqs_id();
	const vector<int> &genqs__genpsidx();
	const vector<int> &genqs_status();
	const vector<bool> &genqs_fromHardProcessBeforeFSR();
	const vector<bool> &genqs_fromHardProcessDecayed();
	const vector<bool> &genqs_fromHardProcessFinalState();
	const vector<bool> &genqs_isDirectHardProcessTauDecayProductFinalState();
	const vector<bool> &genqs_isDirectPromptTauDecayProductFinalState();
	const vector<bool> &genqs_isHardProcess();
	const vector<bool> &genqs_isLastCopy();
	const vector<bool> &genqs_isLastCopyBeforeFSR();
	const vector<bool> &genqs_isMostlyLikePythia6Status3();
	const vector<bool> &genqs_isPromptDecayed();
	const vector<bool> &genqs_isPromptFinalState();
	const vector<vector<int> > &genqs_lepdaughter_id();
	const vector<int> &genqs_gentaudecay();
	const int &gen_nfromtqs_();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genqs_motherp4();
	const vector<float> &genqs_mothercharge();
	const vector<int> &genqs_motherid();
	const vector<int> &genqs_motheridx();
	const vector<int> &genqs_motherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genqs_gmotherp4();
	const vector<int> &genqs_gmothercharge();
	const vector<int> &genqs_gmotherid();
	const vector<int> &genqs_gmotheridx();
	const vector<int> &genqs_gmotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genqs_simplemotherp4();
	const vector<int> &genqs_simplemothercharge();
	const vector<int> &genqs_simplemotherid();
	const vector<int> &genqs_simplemotheridx();
	const vector<int> &genqs_simplemotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genqs_simplegmotherp4();
	const vector<int> &genqs_simplegmothercharge();
	const vector<int> &genqs_simplegmotherid();
	const vector<int> &genqs_simplegmotheridx();
	const vector<int> &genqs_simplegmotherstatus();
	const vector<bool> &genglus_isfromt();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genglus_p4();
	const vector<float> &genglus_charge();
	const vector<float> &genglus_iso();
	const vector<float> &genglus_mass();
	const vector<int> &genglus_id();
	const vector<int> &genglus__genpsidx();
	const vector<int> &genglus_status();
	const vector<bool> &genglus_fromHardProcessBeforeFSR();
	const vector<bool> &genglus_fromHardProcessDecayed();
	const vector<bool> &genglus_fromHardProcessFinalState();
	const vector<bool> &genglus_isDirectHardProcessTauDecayProductFinalState();
	const vector<bool> &genglus_isDirectPromptTauDecayProductFinalState();
	const vector<bool> &genglus_isHardProcess();
	const vector<bool> &genglus_isLastCopy();
	const vector<bool> &genglus_isLastCopyBeforeFSR();
	const vector<bool> &genglus_isMostlyLikePythia6Status3();
	const vector<bool> &genglus_isPromptDecayed();
	const vector<bool> &genglus_isPromptFinalState();
	const vector<vector<int> > &genglus_lepdaughter_id();
	const vector<int> &genglus_gentaudecay();
	const int &gen_nfromtglus_();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genglus_motherp4();
	const vector<float> &genglus_mothercharge();
	const vector<int> &genglus_motherid();
	const vector<int> &genglus_motheridx();
	const vector<int> &genglus_motherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genglus_gmotherp4();
	const vector<int> &genglus_gmothercharge();
	const vector<int> &genglus_gmotherid();
	const vector<int> &genglus_gmotheridx();
	const vector<int> &genglus_gmotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genglus_simplemotherp4();
	const vector<int> &genglus_simplemothercharge();
	const vector<int> &genglus_simplemotherid();
	const vector<int> &genglus_simplemotheridx();
	const vector<int> &genglus_simplemotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genglus_simplegmotherp4();
	const vector<int> &genglus_simplegmothercharge();
	const vector<int> &genglus_simplegmotherid();
	const vector<int> &genglus_simplegmotheridx();
	const vector<int> &genglus_simplegmotherstatus();
	const vector<bool> &genws_isfromt();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genws_p4();
	const vector<float> &genws_charge();
	const vector<float> &genws_iso();
	const vector<float> &genws_mass();
	const vector<int> &genws_id();
	const vector<int> &genws__genpsidx();
	const vector<int> &genws_status();
	const vector<bool> &genws_fromHardProcessBeforeFSR();
	const vector<bool> &genws_fromHardProcessDecayed();
	const vector<bool> &genws_fromHardProcessFinalState();
	const vector<bool> &genws_isDirectHardProcessTauDecayProductFinalState();
	const vector<bool> &genws_isDirectPromptTauDecayProductFinalState();
	const vector<bool> &genws_isHardProcess();
	const vector<bool> &genws_isLastCopy();
	const vector<bool> &genws_isLastCopyBeforeFSR();
	const vector<bool> &genws_isMostlyLikePythia6Status3();
	const vector<bool> &genws_isPromptDecayed();
	const vector<bool> &genws_isPromptFinalState();
	const vector<vector<int> > &genws_lepdaughter_id();
	const vector<int> &genws_gentaudecay();
	const int &gen_nfromtws_();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genws_motherp4();
	const vector<float> &genws_mothercharge();
	const vector<int> &genws_motherid();
	const vector<int> &genws_motheridx();
	const vector<int> &genws_motherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genws_gmotherp4();
	const vector<int> &genws_gmothercharge();
	const vector<int> &genws_gmotherid();
	const vector<int> &genws_gmotheridx();
	const vector<int> &genws_gmotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genws_simplemotherp4();
	const vector<int> &genws_simplemothercharge();
	const vector<int> &genws_simplemotherid();
	const vector<int> &genws_simplemotheridx();
	const vector<int> &genws_simplemotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genws_simplegmotherp4();
	const vector<int> &genws_simplegmothercharge();
	const vector<int> &genws_simplegmotherid();
	const vector<int> &genws_simplegmotheridx();
	const vector<int> &genws_simplegmotherstatus();
	const vector<bool> &genzs_isfromt();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genzs_p4();
	const vector<float> &genzs_charge();
	const vector<float> &genzs_iso();
	const vector<float> &genzs_mass();
	const vector<int> &genzs_id();
	const vector<int> &genzs__genpsidx();
	const vector<int> &genzs_status();
	const vector<bool> &genzs_fromHardProcessBeforeFSR();
	const vector<bool> &genzs_fromHardProcessDecayed();
	const vector<bool> &genzs_fromHardProcessFinalState();
	const vector<bool> &genzs_isDirectHardProcessTauDecayProductFinalState();
	const vector<bool> &genzs_isDirectPromptTauDecayProductFinalState();
	const vector<bool> &genzs_isHardProcess();
	const vector<bool> &genzs_isLastCopy();
	const vector<bool> &genzs_isLastCopyBeforeFSR();
	const vector<bool> &genzs_isMostlyLikePythia6Status3();
	const vector<bool> &genzs_isPromptDecayed();
	const vector<bool> &genzs_isPromptFinalState();
	const vector<vector<int> > &genzs_lepdaughter_id();
	const vector<int> &genzs_gentaudecay();
	const int &gen_nfromtzs_();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genzs_motherp4();
	const vector<float> &genzs_mothercharge();
	const vector<int> &genzs_motherid();
	const vector<int> &genzs_motheridx();
	const vector<int> &genzs_motherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genzs_gmotherp4();
	const vector<int> &genzs_gmothercharge();
	const vector<int> &genzs_gmotherid();
	const vector<int> &genzs_gmotheridx();
	const vector<int> &genzs_gmotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genzs_simplemotherp4();
	const vector<int> &genzs_simplemothercharge();
	const vector<int> &genzs_simplemotherid();
	const vector<int> &genzs_simplemotheridx();
	const vector<int> &genzs_simplemotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genzs_simplegmotherp4();
	const vector<int> &genzs_simplegmothercharge();
	const vector<int> &genzs_simplegmotherid();
	const vector<int> &genzs_simplegmotheridx();
	const vector<int> &genzs_simplegmotherstatus();
	const vector<bool> &genphs_isfromt();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genphs_p4();
	const vector<float> &genphs_charge();
	const vector<float> &genphs_iso();
	const vector<float> &genphs_mass();
	const vector<int> &genphs_id();
	const vector<int> &genphs__genpsidx();
	const vector<int> &genphs_status();
	const vector<bool> &genphs_fromHardProcessBeforeFSR();
	const vector<bool> &genphs_fromHardProcessDecayed();
	const vector<bool> &genphs_fromHardProcessFinalState();
	const vector<bool> &genphs_isDirectHardProcessTauDecayProductFinalState();
	const vector<bool> &genphs_isDirectPromptTauDecayProductFinalState();
	const vector<bool> &genphs_isHardProcess();
	const vector<bool> &genphs_isLastCopy();
	const vector<bool> &genphs_isLastCopyBeforeFSR();
	const vector<bool> &genphs_isMostlyLikePythia6Status3();
	const vector<bool> &genphs_isPromptDecayed();
	const vector<bool> &genphs_isPromptFinalState();
	const vector<vector<int> > &genphs_lepdaughter_id();
	const vector<int> &genphs_gentaudecay();
	const int &gen_nfromtphs_();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genphs_motherp4();
	const vector<float> &genphs_mothercharge();
	const vector<int> &genphs_motherid();
	const vector<int> &genphs_motheridx();
	const vector<int> &genphs_motherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genphs_gmotherp4();
	const vector<int> &genphs_gmothercharge();
	const vector<int> &genphs_gmotherid();
	const vector<int> &genphs_gmotheridx();
	const vector<int> &genphs_gmotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genphs_simplemotherp4();
	const vector<int> &genphs_simplemothercharge();
	const vector<int> &genphs_simplemotherid();
	const vector<int> &genphs_simplemotheridx();
	const vector<int> &genphs_simplemotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genphs_simplegmotherp4();
	const vector<int> &genphs_simplegmothercharge();
	const vector<int> &genphs_simplegmotherid();
	const vector<int> &genphs_simplegmotheridx();
	const vector<int> &genphs_simplegmotherstatus();
	const vector<bool> &genhs_isfromt();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genhs_p4();
	const vector<float> &genhs_charge();
	const vector<float> &genhs_iso();
	const vector<float> &genhs_mass();
	const vector<int> &genhs_id();
	const vector<int> &genhs__genpsidx();
	const vector<int> &genhs_status();
	const vector<bool> &genhs_fromHardProcessBeforeFSR();
	const vector<bool> &genhs_fromHardProcessDecayed();
	const vector<bool> &genhs_fromHardProcessFinalState();
	const vector<bool> &genhs_isDirectHardProcessTauDecayProductFinalState();
	const vector<bool> &genhs_isDirectPromptTauDecayProductFinalState();
	const vector<bool> &genhs_isHardProcess();
	const vector<bool> &genhs_isLastCopy();
	const vector<bool> &genhs_isLastCopyBeforeFSR();
	const vector<bool> &genhs_isMostlyLikePythia6Status3();
	const vector<bool> &genhs_isPromptDecayed();
	const vector<bool> &genhs_isPromptFinalState();
	const vector<vector<int> > &genhs_lepdaughter_id();
	const vector<int> &genhs_gentaudecay();
	const int &gen_nfromths_();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genhs_motherp4();
	const vector<float> &genhs_mothercharge();
	const vector<int> &genhs_motherid();
	const vector<int> &genhs_motheridx();
	const vector<int> &genhs_motherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genhs_gmotherp4();
	const vector<int> &genhs_gmothercharge();
	const vector<int> &genhs_gmotherid();
	const vector<int> &genhs_gmotheridx();
	const vector<int> &genhs_gmotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genhs_simplemotherp4();
	const vector<int> &genhs_simplemothercharge();
	const vector<int> &genhs_simplemotherid();
	const vector<int> &genhs_simplemotheridx();
	const vector<int> &genhs_simplemotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genhs_simplegmotherp4();
	const vector<int> &genhs_simplegmothercharge();
	const vector<int> &genhs_simplegmotherid();
	const vector<int> &genhs_simplegmotheridx();
	const vector<int> &genhs_simplegmotherstatus();
	const vector<bool> &genlsp_isfromt();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genlsp_p4();
	const vector<float> &genlsp_charge();
	const vector<float> &genlsp_iso();
	const vector<float> &genlsp_mass();
	const vector<int> &genlsp_id();
	const vector<int> &genlsp__genpsidx();
	const vector<int> &genlsp_status();
	const vector<bool> &genlsp_fromHardProcessBeforeFSR();
	const vector<bool> &genlsp_fromHardProcessDecayed();
	const vector<bool> &genlsp_fromHardProcessFinalState();
	const vector<bool> &genlsp_isDirectHardProcessTauDecayProductFinalState();
	const vector<bool> &genlsp_isDirectPromptTauDecayProductFinalState();
	const vector<bool> &genlsp_isHardProcess();
	const vector<bool> &genlsp_isLastCopy();
	const vector<bool> &genlsp_isLastCopyBeforeFSR();
	const vector<bool> &genlsp_isMostlyLikePythia6Status3();
	const vector<bool> &genlsp_isPromptDecayed();
	const vector<bool> &genlsp_isPromptFinalState();
	const vector<vector<int> > &genlsp_lepdaughter_id();
	const vector<int> &genlsp_gentaudecay();
	const int &gen_nfromtlsp_();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genlsp_motherp4();
	const vector<float> &genlsp_mothercharge();
	const vector<int> &genlsp_motherid();
	const vector<int> &genlsp_motheridx();
	const vector<int> &genlsp_motherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genlsp_gmotherp4();
	const vector<int> &genlsp_gmothercharge();
	const vector<int> &genlsp_gmotherid();
	const vector<int> &genlsp_gmotheridx();
	const vector<int> &genlsp_gmotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genlsp_simplemotherp4();
	const vector<int> &genlsp_simplemothercharge();
	const vector<int> &genlsp_simplemotherid();
	const vector<int> &genlsp_simplemotheridx();
	const vector<int> &genlsp_simplemotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genlsp_simplegmotherp4();
	const vector<int> &genlsp_simplegmothercharge();
	const vector<int> &genlsp_simplegmotherid();
	const vector<int> &genlsp_simplegmotheridx();
	const vector<int> &genlsp_simplegmotherstatus();
	const vector<bool> &genstop_isfromt();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genstop_p4();
	const vector<float> &genstop_charge();
	const vector<float> &genstop_iso();
	const vector<float> &genstop_mass();
	const vector<int> &genstop_id();
	const vector<int> &genstop__genpsidx();
	const vector<int> &genstop_status();
	const vector<bool> &genstop_fromHardProcessBeforeFSR();
	const vector<bool> &genstop_fromHardProcessDecayed();
	const vector<bool> &genstop_fromHardProcessFinalState();
	const vector<bool> &genstop_isDirectHardProcessTauDecayProductFinalState();
	const vector<bool> &genstop_isDirectPromptTauDecayProductFinalState();
	const vector<bool> &genstop_isHardProcess();
	const vector<bool> &genstop_isLastCopy();
	const vector<bool> &genstop_isLastCopyBeforeFSR();
	const vector<bool> &genstop_isMostlyLikePythia6Status3();
	const vector<bool> &genstop_isPromptDecayed();
	const vector<bool> &genstop_isPromptFinalState();
	const vector<vector<int> > &genstop_lepdaughter_id();
	const vector<int> &genstop_gentaudecay();
	const int &gen_nfromtstop_();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genstop_motherp4();
	const vector<float> &genstop_mothercharge();
	const vector<int> &genstop_motherid();
	const vector<int> &genstop_motheridx();
	const vector<int> &genstop_motherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genstop_gmotherp4();
	const vector<int> &genstop_gmothercharge();
	const vector<int> &genstop_gmotherid();
	const vector<int> &genstop_gmotheridx();
	const vector<int> &genstop_gmotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genstop_simplemotherp4();
	const vector<int> &genstop_simplemothercharge();
	const vector<int> &genstop_simplemotherid();
	const vector<int> &genstop_simplemotheridx();
	const vector<int> &genstop_simplemotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genstop_simplegmotherp4();
	const vector<int> &genstop_simplegmothercharge();
	const vector<int> &genstop_simplegmotherid();
	const vector<int> &genstop_simplegmotheridx();
	const vector<int> &genstop_simplegmotherstatus();

  static void progress( int nEventsTotal, int nEventsChain );
};

#ifndef __CINT__
extern V00_00_01 cms3;
#endif

namespace V00_00_01_np {
	const unsigned int &run();
	const unsigned int &ls();
	const unsigned int &evt();
	const int &nvtxs();
	const int &firstGoodVtxIdx();
	const int &firstVtx_isfake();
	const float &firstVtx_ndof();
	const float &firstVtx_posRho();
	const float &firstVtx_posZ();
	const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &firstVtx_posp4();
	const int &pu_nvtxs();
	const float &pfmet();
	const float &pfmet_phi();
	const float &calomet();
	const float &calomet_phi();
	const float &filt_cscbeamhalo();
	const float &filt_ecallaser();
	const float &filt_ecaltp();
	const float &filt_eebadsc();
	const float &filt_goodvtx();
	const float &filt_hbhenoise();
	const float &filt_hbhenoise_25ns();
	const float &filt_hbhenoise_50ns();
	const float &filt_hcallaser();
	const float &filt_met();
	const float &filt_trkfail();
	const float &filt_trkPOG();
	const float &filt_trkPOG_tmc();
	const float &filt_trkPOG_tms();
	const float &filt_eff();
	const float &scale1fb();
	const float &xsec();
	const float &kfactor();
	const float &pu_ntrue();
	const int &ngoodleps();
	const int &nlooseleps();
	const int &nvetoleps();
	const bool &is_data();
	const string &dataset();
	const string &filename();
	const string &cms3tag();
	const unsigned int &nEvents();
	const unsigned int &nEvents_goodvtx();
	const unsigned int &nEvents_MET30();
	const unsigned int &nEvents_1goodlep();
	const unsigned int &nEvents_2goodjets();
	const int &genlepsfromtop();
	const float &MT2W();
	const float &MT2W_lep2();
	const float &mindphi_met_j1_j2();
	const float &mt_met_lep();
	const float &mt_met_lep2();
	const float &dR_lep_leadb();
	const float &dR_lep2_leadb();
	const float &hadronic_top_chi2();
	const float &dphi_Wlep();
	const float &MET_over_sqrtHT();
	const float &ak4pfjets_rho();
	const vector<string> &genweightsID();
	const vector<float> &genweights();
	const vector<string> &sparms_names();
	const float &sparms_filterEfficiency();
	const float &sparms_pdfScale();
	const float &sparms_pdfWeight1();
	const float &sparms_pdfWeight2();
	const float &sparms_weight();
	const float &sparms_xsec();
	const vector<float> &sparms_values();
	const int &sparms_subProcessId();
	const float &mass_lsp();
	const float &mass_chargino();
	const float &mass_stop();
	const float &genmet();
	const float &genmet_phi();
	const bool &PassTrackVeto();
	const bool &PassTrackVeto_v2();
	const bool &PassTrackVeto_v3();
	const bool &PassTauVeto();
	const float &EA_all_rho();
	const float &EA_allcalo_rho();
	const float &EA_centralcalo_rho();
	const float &EA_centralchargedpileup_rho();
	const float &EA_centralneutral_rho();
	const float &topness();
	const float &topness_lep2();
	const float &topnessMod();
	const float &topnessMod_lep2();
	const float &MT2_lb_b();
	const float &MT2_lb_b_lep2();
	const float &MT2_lb_b_mass();
	const float &MT2_lb_b_mass_lep2();
	const float &MT2_lb_bqq();
	const float &MT2_lb_bqq_lep2();
	const float &MT2_lb_bqq_mass();
	const float &MT2_lb_bqq_mass_lep2();
	const float &Mlb_closestb();
	const float &Mlb_lead_bdiscr();
	const float &Mlb_closestb_lep2();
	const float &Mlb_lead_bdiscr_lep2();
	const float &Mjjj();
	const float &Mjjj_lep2();
	const int &HLT_SingleEl();
	const int &HLT_SingleMu();
	const int &HLT_MET170();
	const int &HLT_MET120Btag();
	const int &HLT_MET120Mu5();
	const int &HLT_HT350MET120();
	const int &HLT_DiEl();
	const int &HLT_DiMu();
	const int &HLT_Mu8El17();
	const int &HLT_Mu8El23();
	const int &HLT_Mu17El12();
	const int &HLT_Mu23El12();
	const int &HLT_SingleEl27();
	const int &HLT_SingleEl27Tight();
	const int &HLT_SingleElTight();
	const int &HLT_SingleElHT200();
	const int &HLT_SingleMuNoEta();
	const int &HLT_SingleMuNoIso();
	const int &HLT_SingleMuNoIsoNoEta();
	const int &HLT_Mu6HT200MET100();
	const int &HLT_HT350MET100();
	const int &HLT_SingleMu17();
	const int &HLT_SingleMu20();
	const int &HLT_SingleMu24();
	const int &HLT_MonoCentPFJet80_METNoMu90_MHTNoMu90_IDTight();
	const int &HLT_MET90_MHT90_IDTight();
	const int &HLT_METNoMu90_NoiseCleaned_MHTNoMu90_IDTight();
	const int &HLT_Photon90_CaloIdL_PFHT500();
	const int &HLT_Photon165_R9Id90_HE10_IsoM();
	const int &HLT_Photon175();
	const int &HLT_Photon165_HE10();
	const float &pu_weight();
	const float &lep_sf();
	const float &btag_sf();
	const float &HLT_SingleEl_eff();
	const float &HLT_SingleMu_eff();
	const int &nPhotons();
	const int &ph_selectedidx();
	const int &ph_ngoodjets();
	const int &ph_ngoodbtags();
	const float &ph_met();
	const float &ph_met_phi();
	const float &ph_HT();
	const float &ph_htssm();
	const float &ph_htosm();
	const float &ph_htratiom();
	const float &ph_mt_met_lep();
	const float &ph_dphi_Wlep();
	const float &ph_MT2W();
	const float &ph_topness();
	const float &ph_topnessMod();
	const float &ph_MT2_lb_b_mass();
	const float &ph_MT2_lb_b();
	const float &ph_MT2_lb_bqq_mass();
	const float &ph_MT2_lb_bqq();
	const float &ph_hadronic_top_chi2();
	const float &ph_mindphi_met_j1_j2();
	const float &ph_Mlb_lead_bdiscr();
	const float &ph_dR_lep_leadb();
	const float &ph_Mlb_closestb();
	const float &ph_Mjjj();
	const int &Zll_idl1();
	const int &Zll_idl2();
	const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &Zll_p4l1();
	const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &Zll_p4l2();
	const bool &Zll_OS();
	const bool &Zll_SF();
	const bool &Zll_isZmass();
	const float &Zll_M();
	const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &Zll_p4();
	const int &Zll_selLep();
	const float &Zll_met();
	const float &Zll_met_phi();
	const float &Zll_mindphi_met_j1_j2();
	const float &Zll_mt_met_lep();
	const float &Zll_dphi_Wlep();
	const float &Zll_MT2W();
	const float &Zll_topness();
	const float &Zll_topnessMod();
	const float &Zll_MT2_lb_b_mass();
	const float &Zll_MT2_lb_b();
	const float &Zll_MT2_lb_bqq_mass();
	const float &Zll_MT2_lb_bqq();
	const bool &lep1_is_mu();
	const bool &lep1_is_el();
	const int &lep1_charge();
	const int &lep1_pdgid();
	const int &lep1_type();
	const int &lep1_production_type();
	const float &lep1_d0();
	const float &lep1_d0err();
	const float &lep1_dz();
	const float &lep1_dzerr();
	const float &lep1_sigmaIEtaEta_fill5x5();
	const float &lep1_dEtaIn();
	const float &lep1_dPhiIn();
	const float &lep1_hOverE();
	const float &lep1_ooEmooP();
	const int &lep1_expectedMissingInnerHits();
	const bool &lep1_conversionVeto();
	const float &lep1_etaSC();
	const float &lep1_ChiSqr();
	const float &lep1_chiso();
	const float &lep1_nhiso();
	const float &lep1_emiso();
	const float &lep1_deltaBeta();
	const float &lep1_relIso03DB();
	const float &lep1_relIso03EA();
	const float &lep1_relIso04DB();
	const float &lep1_miniRelIsoDB();
	const float &lep1_miniRelIsoEA();
	const float &lep1_MiniIso();
	const int &lep1_mcid();
	const int &lep1_mcstatus();
	const int &lep1_mc3dr();
	const int &lep1_mc3id();
	const int &lep1_mc3idx();
	const int &lep1_mc3motherid();
	const int &lep1_mc3motheridx();
	const bool &lep1_is_eleid_loose();
	const bool &lep1_is_eleid_medium();
	const bool &lep1_is_eleid_tight();
	const bool &lep1_is_phys14_loose_noIso();
	const bool &lep1_is_phys14_medium_noIso();
	const bool &lep1_is_phys14_tight_noIso();
	const float &lep1_eoverpin();
	const bool &lep1_is_muoid_loose();
	const bool &lep1_is_muoid_medium();
	const bool &lep1_is_muoid_tight();
	const float &lep1_ip3d();
	const float &lep1_ip3derr();
	const bool &lep1_is_pfmu();
	const bool &lep1_passMediumID();
	const bool &lep1_passVeto();
	const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &lep1_p4();
	const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &lep1_mcp4();
	const float &lep1_pt();
	const float &lep1_eta();
	const float &lep1_phi();
	const float &lep1_mass();
	const bool &lep2_is_mu();
	const bool &lep2_is_el();
	const int &lep2_charge();
	const int &lep2_pdgid();
	const int &lep2_type();
	const int &lep2_production_type();
	const float &lep2_d0();
	const float &lep2_d0err();
	const float &lep2_dz();
	const float &lep2_dzerr();
	const float &lep2_sigmaIEtaEta_fill5x5();
	const float &lep2_dEtaIn();
	const float &lep2_dPhiIn();
	const float &lep2_hOverE();
	const float &lep2_ooEmooP();
	const int &lep2_expectedMissingInnerHits();
	const bool &lep2_conversionVeto();
	const float &lep2_etaSC();
	const float &lep2_ChiSqr();
	const float &lep2_chiso();
	const float &lep2_nhiso();
	const float &lep2_emiso();
	const float &lep2_deltaBeta();
	const float &lep2_relIso03DB();
	const float &lep2_relIso03EA();
	const float &lep2_relIso04DB();
	const float &lep2_miniRelIsoDB();
	const float &lep2_miniRelIsoEA();
	const float &lep2_MiniIso();
	const int &lep2_mcid();
	const int &lep2_mcstatus();
	const int &lep2_mc3dr();
	const int &lep2_mc3id();
	const int &lep2_mc3idx();
	const int &lep2_mc3motherid();
	const int &lep2_mc3motheridx();
	const bool &lep2_is_eleid_loose();
	const bool &lep2_is_eleid_medium();
	const bool &lep2_is_eleid_tight();
	const bool &lep2_is_phys14_loose_noIso();
	const bool &lep2_is_phys14_medium_noIso();
	const bool &lep2_is_phys14_tight_noIso();
	const float &lep2_eoverpin();
	const bool &lep2_is_muoid_loose();
	const bool &lep2_is_muoid_medium();
	const bool &lep2_is_muoid_tight();
	const float &lep2_ip3d();
	const float &lep2_ip3derr();
	const bool &lep2_is_pfmu();
	const bool &lep2_passMediumID();
	const bool &lep2_passVeto();
	const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &lep2_p4();
	const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &lep2_mcp4();
	const float &lep2_pt();
	const float &lep2_eta();
	const float &lep2_phi();
	const float &lep2_mass();
	const vector<float> &ph_sigmaIEtaEta_fill5x5();
	const vector<float> &ph_hOverE();
	const vector<float> &ph_r9();
	const vector<float> &ph_chiso();
	const vector<float> &ph_nhiso();
	const vector<float> &ph_phiso();
	const vector<bool> &ph_idCutBased();
	const vector<int> &ph_overlapJetId();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &ph_p4();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &ph_mcp4();
	const vector<float> &ph_pt();
	const vector<float> &ph_eta();
	const vector<float> &ph_phi();
	const vector<float> &ph_mass();
	const vector<int> &ph_mcMatchId();
	const vector<float> &ph_genIso04();
	const vector<float> &ph_drMinParton();
	const int &nGoodGenJets();
	const int &ngoodjets();
	const int &nfailjets();
	const int &ak8GoodPFJets();
	const int &ngoodbtags();
	const float &ak4_HT();
	const float &ak4_htssm();
	const float &ak4_htosm();
	const float &ak4_htratiom();
	const vector<float> &dphi_ak4pfjet_met();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &ak4pfjets_p4();
	const vector<float> &ak4pfjets_pt();
	const vector<float> &ak4pfjets_eta();
	const vector<float> &ak4pfjets_phi();
	const vector<float> &ak4pfjets_mass();
	const vector<bool> &ak4pfjets_passMEDbtag();
	const vector<float> &ak4pfjets_qg_disc();
	const vector<float> &ak4pfjets_CSV();
	const vector<float> &ak4pfjets_puid();
	const vector<int> &ak4pfjets_parton_flavor();
	const vector<bool> &ak4pfjets_loose_puid();
	const vector<bool> &ak4pfjets_loose_pfid();
	const vector<bool> &ak4pfjets_medium_pfid();
	const vector<bool> &ak4pfjets_tight_pfid();
	const vector<float> &ak4pfjets_MEDbjet_pt();
	const float &ak4pfjets_leadMEDbjet_pt();
	const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &ak4pfjets_leadMEDbjet_p4();
	const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &ak4pfjets_leadbtag_p4();
	const vector<float> &ak4pfjets_chf();
	const vector<float> &ak4pfjets_nhf();
	const vector<float> &ak4pfjets_cef();
	const vector<float> &ak4pfjets_nef();
	const vector<float> &ak4pfjets_muf();
	const vector<int> &ak4pfjets_cm();
	const vector<int> &ak4pfjets_nm();
	const vector<int> &ak4pfjets_mc3dr();
	const vector<int> &ak4pfjets_mc3id();
	const vector<int> &ak4pfjets_mc3idx();
	const vector<int> &ak4pfjets_mcmotherid();
	const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &ak4pfjet_overlep1_p4();
	const float &ak4pfjet_overlep1_CSV();
	const float &ak4pfjet_overlep1_pu_id();
	const float &ak4pfjet_overlep1_chf();
	const float &ak4pfjet_overlep1_nhf();
	const float &ak4pfjet_overlep1_cef();
	const float &ak4pfjet_overlep1_nef();
	const float &ak4pfjet_overlep1_muf();
	const int &ak4pfjet_overlep1_cm();
	const int &ak4pfjet_overlep1_nm();
	const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &ak4pfjet_overlep2_p4();
	const float &ak4pfjet_overlep2_CSV();
	const float &ak4pfjet_overlep2_pu_id();
	const float &ak4pfjet_overlep2_chf();
	const float &ak4pfjet_overlep2_nhf();
	const float &ak4pfjet_overlep2_cef();
	const float &ak4pfjet_overlep2_nef();
	const float &ak4pfjet_overlep2_muf();
	const int &ak4pfjet_overlep2_cm();
	const int &ak4pfjet_overlep2_nm();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &ak8pfjets_p4();
	const vector<float> &ak8pfjets_tau1();
	const vector<float> &ak8pfjets_tau2();
	const vector<float> &ak8pfjets_tau3();
	const vector<float> &ak8pfjets_top_mass();
	const vector<float> &ak8pfjets_pruned_mass();
	const vector<float> &ak8pfjets_trimmed_mass();
	const vector<float> &ak8pfjets_filtered_mass();
	const vector<float> &ak8pfjets_pu_id();
	const vector<int> &ak8pfjets_parton_flavor();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &ak4genjets_p4();
	const vector<TString> &tau_IDnames();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &tau_leadtrack_p4();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &tau_leadneutral_p4();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &tau_p4();
	const vector<vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > > &tau_isocand_p4();
	const vector<vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > > &tau_sigcand_p4();
	const vector<float> &tau_mass();
	const vector<vector<float> > &tau_ID();
	const vector<float> &tau_passID();
	const vector<float> &tau_charge();
	const int &ngoodtaus();
	const vector<float> &tau_againstMuonTight();
	const vector<float> &tau_againstElectronLoose();
	const vector<bool> &tau_isVetoTau();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &isoTracks_p4();
	const vector<int> &isoTracks_charge();
	const vector<float> &isoTracks_absIso();
	const vector<float> &isoTracks_dz();
	const vector<int> &isoTracks_pdgId();
	const vector<int> &isoTracks_selectedidx();
	const int &isoTracks_nselected();
	const vector<bool> &isoTracks_isVetoTrack();
	const vector<bool> &isoTracks_isVetoTrack_v2();
	const vector<bool> &isoTracks_isVetoTrack_v3();
	const vector<bool> &genels_isfromt();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genels_p4();
	const vector<float> &genels_charge();
	const vector<float> &genels_iso();
	const vector<float> &genels_mass();
	const vector<int> &genels_id();
	const vector<int> &genels__genpsidx();
	const vector<int> &genels_status();
	const vector<bool> &genels_fromHardProcessBeforeFSR();
	const vector<bool> &genels_fromHardProcessDecayed();
	const vector<bool> &genels_fromHardProcessFinalState();
	const vector<bool> &genels_isDirectHardProcessTauDecayProductFinalState();
	const vector<bool> &genels_isDirectPromptTauDecayProductFinalState();
	const vector<bool> &genels_isHardProcess();
	const vector<bool> &genels_isLastCopy();
	const vector<bool> &genels_isLastCopyBeforeFSR();
	const vector<bool> &genels_isMostlyLikePythia6Status3();
	const vector<bool> &genels_isPromptDecayed();
	const vector<bool> &genels_isPromptFinalState();
	const vector<vector<int> > &genels_lepdaughter_id();
	const vector<int> &genels_gentaudecay();
	const int &gen_nfromtels_();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genels_motherp4();
	const vector<float> &genels_mothercharge();
	const vector<int> &genels_motherid();
	const vector<int> &genels_motheridx();
	const vector<int> &genels_motherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genels_gmotherp4();
	const vector<int> &genels_gmothercharge();
	const vector<int> &genels_gmotherid();
	const vector<int> &genels_gmotheridx();
	const vector<int> &genels_gmotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genels_simplemotherp4();
	const vector<int> &genels_simplemothercharge();
	const vector<int> &genels_simplemotherid();
	const vector<int> &genels_simplemotheridx();
	const vector<int> &genels_simplemotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genels_simplegmotherp4();
	const vector<int> &genels_simplegmothercharge();
	const vector<int> &genels_simplegmotherid();
	const vector<int> &genels_simplegmotheridx();
	const vector<int> &genels_simplegmotherstatus();
	const vector<bool> &genmus_isfromt();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genmus_p4();
	const vector<float> &genmus_charge();
	const vector<float> &genmus_iso();
	const vector<float> &genmus_mass();
	const vector<int> &genmus_id();
	const vector<int> &genmus__genpsidx();
	const vector<int> &genmus_status();
	const vector<bool> &genmus_fromHardProcessBeforeFSR();
	const vector<bool> &genmus_fromHardProcessDecayed();
	const vector<bool> &genmus_fromHardProcessFinalState();
	const vector<bool> &genmus_isDirectHardProcessTauDecayProductFinalState();
	const vector<bool> &genmus_isDirectPromptTauDecayProductFinalState();
	const vector<bool> &genmus_isHardProcess();
	const vector<bool> &genmus_isLastCopy();
	const vector<bool> &genmus_isLastCopyBeforeFSR();
	const vector<bool> &genmus_isMostlyLikePythia6Status3();
	const vector<bool> &genmus_isPromptDecayed();
	const vector<bool> &genmus_isPromptFinalState();
	const vector<vector<int> > &genmus_lepdaughter_id();
	const vector<int> &genmus_gentaudecay();
	const int &gen_nfromtmus_();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genmus_motherp4();
	const vector<float> &genmus_mothercharge();
	const vector<int> &genmus_motherid();
	const vector<int> &genmus_motheridx();
	const vector<int> &genmus_motherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genmus_gmotherp4();
	const vector<int> &genmus_gmothercharge();
	const vector<int> &genmus_gmotherid();
	const vector<int> &genmus_gmotheridx();
	const vector<int> &genmus_gmotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genmus_simplemotherp4();
	const vector<int> &genmus_simplemothercharge();
	const vector<int> &genmus_simplemotherid();
	const vector<int> &genmus_simplemotheridx();
	const vector<int> &genmus_simplemotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genmus_simplegmotherp4();
	const vector<int> &genmus_simplegmothercharge();
	const vector<int> &genmus_simplegmotherid();
	const vector<int> &genmus_simplegmotheridx();
	const vector<int> &genmus_simplegmotherstatus();
	const vector<bool> &gentaus_isfromt();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gentaus_p4();
	const vector<float> &gentaus_charge();
	const vector<float> &gentaus_iso();
	const vector<float> &gentaus_mass();
	const vector<int> &gentaus_id();
	const vector<int> &gentaus__genpsidx();
	const vector<int> &gentaus_status();
	const vector<bool> &gentaus_fromHardProcessBeforeFSR();
	const vector<bool> &gentaus_fromHardProcessDecayed();
	const vector<bool> &gentaus_fromHardProcessFinalState();
	const vector<bool> &gentaus_isDirectHardProcessTauDecayProductFinalState();
	const vector<bool> &gentaus_isDirectPromptTauDecayProductFinalState();
	const vector<bool> &gentaus_isHardProcess();
	const vector<bool> &gentaus_isLastCopy();
	const vector<bool> &gentaus_isLastCopyBeforeFSR();
	const vector<bool> &gentaus_isMostlyLikePythia6Status3();
	const vector<bool> &gentaus_isPromptDecayed();
	const vector<bool> &gentaus_isPromptFinalState();
	const vector<vector<int> > &gentaus_lepdaughter_id();
	const vector<int> &gentaus_gentaudecay();
	const int &gen_nfromttaus_();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gentaus_motherp4();
	const vector<float> &gentaus_mothercharge();
	const vector<int> &gentaus_motherid();
	const vector<int> &gentaus_motheridx();
	const vector<int> &gentaus_motherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gentaus_gmotherp4();
	const vector<int> &gentaus_gmothercharge();
	const vector<int> &gentaus_gmotherid();
	const vector<int> &gentaus_gmotheridx();
	const vector<int> &gentaus_gmotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gentaus_simplemotherp4();
	const vector<int> &gentaus_simplemothercharge();
	const vector<int> &gentaus_simplemotherid();
	const vector<int> &gentaus_simplemotheridx();
	const vector<int> &gentaus_simplemotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gentaus_simplegmotherp4();
	const vector<int> &gentaus_simplegmothercharge();
	const vector<int> &gentaus_simplegmotherid();
	const vector<int> &gentaus_simplegmotheridx();
	const vector<int> &gentaus_simplegmotherstatus();
	const vector<bool> &gennuels_isfromt();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gennuels_p4();
	const vector<float> &gennuels_charge();
	const vector<float> &gennuels_iso();
	const vector<float> &gennuels_mass();
	const vector<int> &gennuels_id();
	const vector<int> &gennuels__genpsidx();
	const vector<int> &gennuels_status();
	const vector<bool> &gennuels_fromHardProcessBeforeFSR();
	const vector<bool> &gennuels_fromHardProcessDecayed();
	const vector<bool> &gennuels_fromHardProcessFinalState();
	const vector<bool> &gennuels_isDirectHardProcessTauDecayProductFinalState();
	const vector<bool> &gennuels_isDirectPromptTauDecayProductFinalState();
	const vector<bool> &gennuels_isHardProcess();
	const vector<bool> &gennuels_isLastCopy();
	const vector<bool> &gennuels_isLastCopyBeforeFSR();
	const vector<bool> &gennuels_isMostlyLikePythia6Status3();
	const vector<bool> &gennuels_isPromptDecayed();
	const vector<bool> &gennuels_isPromptFinalState();
	const vector<vector<int> > &gennuels_lepdaughter_id();
	const vector<int> &gennuels_gentaudecay();
	const int &gen_nfromtnuels_();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gennuels_motherp4();
	const vector<float> &gennuels_mothercharge();
	const vector<int> &gennuels_motherid();
	const vector<int> &gennuels_motheridx();
	const vector<int> &gennuels_motherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gennuels_gmotherp4();
	const vector<int> &gennuels_gmothercharge();
	const vector<int> &gennuels_gmotherid();
	const vector<int> &gennuels_gmotheridx();
	const vector<int> &gennuels_gmotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gennuels_simplemotherp4();
	const vector<int> &gennuels_simplemothercharge();
	const vector<int> &gennuels_simplemotherid();
	const vector<int> &gennuels_simplemotheridx();
	const vector<int> &gennuels_simplemotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gennuels_simplegmotherp4();
	const vector<int> &gennuels_simplegmothercharge();
	const vector<int> &gennuels_simplegmotherid();
	const vector<int> &gennuels_simplegmotheridx();
	const vector<int> &gennuels_simplegmotherstatus();
	const vector<bool> &gennumus_isfromt();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gennumus_p4();
	const vector<float> &gennumus_charge();
	const vector<float> &gennumus_iso();
	const vector<float> &gennumus_mass();
	const vector<int> &gennumus_id();
	const vector<int> &gennumus__genpsidx();
	const vector<int> &gennumus_status();
	const vector<bool> &gennumus_fromHardProcessBeforeFSR();
	const vector<bool> &gennumus_fromHardProcessDecayed();
	const vector<bool> &gennumus_fromHardProcessFinalState();
	const vector<bool> &gennumus_isDirectHardProcessTauDecayProductFinalState();
	const vector<bool> &gennumus_isDirectPromptTauDecayProductFinalState();
	const vector<bool> &gennumus_isHardProcess();
	const vector<bool> &gennumus_isLastCopy();
	const vector<bool> &gennumus_isLastCopyBeforeFSR();
	const vector<bool> &gennumus_isMostlyLikePythia6Status3();
	const vector<bool> &gennumus_isPromptDecayed();
	const vector<bool> &gennumus_isPromptFinalState();
	const vector<vector<int> > &gennumus_lepdaughter_id();
	const vector<int> &gennumus_gentaudecay();
	const int &gen_nfromtnumus_();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gennumus_motherp4();
	const vector<float> &gennumus_mothercharge();
	const vector<int> &gennumus_motherid();
	const vector<int> &gennumus_motheridx();
	const vector<int> &gennumus_motherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gennumus_gmotherp4();
	const vector<int> &gennumus_gmothercharge();
	const vector<int> &gennumus_gmotherid();
	const vector<int> &gennumus_gmotheridx();
	const vector<int> &gennumus_gmotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gennumus_simplemotherp4();
	const vector<int> &gennumus_simplemothercharge();
	const vector<int> &gennumus_simplemotherid();
	const vector<int> &gennumus_simplemotheridx();
	const vector<int> &gennumus_simplemotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gennumus_simplegmotherp4();
	const vector<int> &gennumus_simplegmothercharge();
	const vector<int> &gennumus_simplegmotherid();
	const vector<int> &gennumus_simplegmotheridx();
	const vector<int> &gennumus_simplegmotherstatus();
	const vector<bool> &gennutaus_isfromt();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gennutaus_p4();
	const vector<float> &gennutaus_charge();
	const vector<float> &gennutaus_iso();
	const vector<float> &gennutaus_mass();
	const vector<int> &gennutaus_id();
	const vector<int> &gennutaus__genpsidx();
	const vector<int> &gennutaus_status();
	const vector<bool> &gennutaus_fromHardProcessBeforeFSR();
	const vector<bool> &gennutaus_fromHardProcessDecayed();
	const vector<bool> &gennutaus_fromHardProcessFinalState();
	const vector<bool> &gennutaus_isDirectHardProcessTauDecayProductFinalState();
	const vector<bool> &gennutaus_isDirectPromptTauDecayProductFinalState();
	const vector<bool> &gennutaus_isHardProcess();
	const vector<bool> &gennutaus_isLastCopy();
	const vector<bool> &gennutaus_isLastCopyBeforeFSR();
	const vector<bool> &gennutaus_isMostlyLikePythia6Status3();
	const vector<bool> &gennutaus_isPromptDecayed();
	const vector<bool> &gennutaus_isPromptFinalState();
	const vector<vector<int> > &gennutaus_lepdaughter_id();
	const vector<int> &gennutaus_gentaudecay();
	const int &gen_nfromtnutaus_();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gennutaus_motherp4();
	const vector<float> &gennutaus_mothercharge();
	const vector<int> &gennutaus_motherid();
	const vector<int> &gennutaus_motheridx();
	const vector<int> &gennutaus_motherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gennutaus_gmotherp4();
	const vector<int> &gennutaus_gmothercharge();
	const vector<int> &gennutaus_gmotherid();
	const vector<int> &gennutaus_gmotheridx();
	const vector<int> &gennutaus_gmotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gennutaus_simplemotherp4();
	const vector<int> &gennutaus_simplemothercharge();
	const vector<int> &gennutaus_simplemotherid();
	const vector<int> &gennutaus_simplemotheridx();
	const vector<int> &gennutaus_simplemotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gennutaus_simplegmotherp4();
	const vector<int> &gennutaus_simplegmothercharge();
	const vector<int> &gennutaus_simplegmotherid();
	const vector<int> &gennutaus_simplegmotheridx();
	const vector<int> &gennutaus_simplegmotherstatus();
	const vector<bool> &gents_isfromt();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gents_p4();
	const vector<float> &gents_charge();
	const vector<float> &gents_iso();
	const vector<float> &gents_mass();
	const vector<int> &gents_id();
	const vector<int> &gents__genpsidx();
	const vector<int> &gents_status();
	const vector<bool> &gents_fromHardProcessBeforeFSR();
	const vector<bool> &gents_fromHardProcessDecayed();
	const vector<bool> &gents_fromHardProcessFinalState();
	const vector<bool> &gents_isDirectHardProcessTauDecayProductFinalState();
	const vector<bool> &gents_isDirectPromptTauDecayProductFinalState();
	const vector<bool> &gents_isHardProcess();
	const vector<bool> &gents_isLastCopy();
	const vector<bool> &gents_isLastCopyBeforeFSR();
	const vector<bool> &gents_isMostlyLikePythia6Status3();
	const vector<bool> &gents_isPromptDecayed();
	const vector<bool> &gents_isPromptFinalState();
	const vector<vector<int> > &gents_lepdaughter_id();
	const vector<int> &gents_gentaudecay();
	const int &gen_nfromtts_();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gents_motherp4();
	const vector<float> &gents_mothercharge();
	const vector<int> &gents_motherid();
	const vector<int> &gents_motheridx();
	const vector<int> &gents_motherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gents_gmotherp4();
	const vector<int> &gents_gmothercharge();
	const vector<int> &gents_gmotherid();
	const vector<int> &gents_gmotheridx();
	const vector<int> &gents_gmotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gents_simplemotherp4();
	const vector<int> &gents_simplemothercharge();
	const vector<int> &gents_simplemotherid();
	const vector<int> &gents_simplemotheridx();
	const vector<int> &gents_simplemotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gents_simplegmotherp4();
	const vector<int> &gents_simplegmothercharge();
	const vector<int> &gents_simplegmotherid();
	const vector<int> &gents_simplegmotheridx();
	const vector<int> &gents_simplegmotherstatus();
	const vector<bool> &genbs_isfromt();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genbs_p4();
	const vector<float> &genbs_charge();
	const vector<float> &genbs_iso();
	const vector<float> &genbs_mass();
	const vector<int> &genbs_id();
	const vector<int> &genbs__genpsidx();
	const vector<int> &genbs_status();
	const vector<bool> &genbs_fromHardProcessBeforeFSR();
	const vector<bool> &genbs_fromHardProcessDecayed();
	const vector<bool> &genbs_fromHardProcessFinalState();
	const vector<bool> &genbs_isDirectHardProcessTauDecayProductFinalState();
	const vector<bool> &genbs_isDirectPromptTauDecayProductFinalState();
	const vector<bool> &genbs_isHardProcess();
	const vector<bool> &genbs_isLastCopy();
	const vector<bool> &genbs_isLastCopyBeforeFSR();
	const vector<bool> &genbs_isMostlyLikePythia6Status3();
	const vector<bool> &genbs_isPromptDecayed();
	const vector<bool> &genbs_isPromptFinalState();
	const vector<vector<int> > &genbs_lepdaughter_id();
	const vector<int> &genbs_gentaudecay();
	const int &gen_nfromtbs_();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genbs_motherp4();
	const vector<float> &genbs_mothercharge();
	const vector<int> &genbs_motherid();
	const vector<int> &genbs_motheridx();
	const vector<int> &genbs_motherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genbs_gmotherp4();
	const vector<int> &genbs_gmothercharge();
	const vector<int> &genbs_gmotherid();
	const vector<int> &genbs_gmotheridx();
	const vector<int> &genbs_gmotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genbs_simplemotherp4();
	const vector<int> &genbs_simplemothercharge();
	const vector<int> &genbs_simplemotherid();
	const vector<int> &genbs_simplemotheridx();
	const vector<int> &genbs_simplemotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genbs_simplegmotherp4();
	const vector<int> &genbs_simplegmothercharge();
	const vector<int> &genbs_simplegmotherid();
	const vector<int> &genbs_simplegmotheridx();
	const vector<int> &genbs_simplegmotherstatus();
	const vector<bool> &gencs_isfromt();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gencs_p4();
	const vector<float> &gencs_charge();
	const vector<float> &gencs_iso();
	const vector<float> &gencs_mass();
	const vector<int> &gencs_id();
	const vector<int> &gencs__genpsidx();
	const vector<int> &gencs_status();
	const vector<bool> &gencs_fromHardProcessBeforeFSR();
	const vector<bool> &gencs_fromHardProcessDecayed();
	const vector<bool> &gencs_fromHardProcessFinalState();
	const vector<bool> &gencs_isDirectHardProcessTauDecayProductFinalState();
	const vector<bool> &gencs_isDirectPromptTauDecayProductFinalState();
	const vector<bool> &gencs_isHardProcess();
	const vector<bool> &gencs_isLastCopy();
	const vector<bool> &gencs_isLastCopyBeforeFSR();
	const vector<bool> &gencs_isMostlyLikePythia6Status3();
	const vector<bool> &gencs_isPromptDecayed();
	const vector<bool> &gencs_isPromptFinalState();
	const vector<vector<int> > &gencs_lepdaughter_id();
	const vector<int> &gencs_gentaudecay();
	const int &gen_nfromtcs_();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gencs_motherp4();
	const vector<float> &gencs_mothercharge();
	const vector<int> &gencs_motherid();
	const vector<int> &gencs_motheridx();
	const vector<int> &gencs_motherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gencs_gmotherp4();
	const vector<int> &gencs_gmothercharge();
	const vector<int> &gencs_gmotherid();
	const vector<int> &gencs_gmotheridx();
	const vector<int> &gencs_gmotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gencs_simplemotherp4();
	const vector<int> &gencs_simplemothercharge();
	const vector<int> &gencs_simplemotherid();
	const vector<int> &gencs_simplemotheridx();
	const vector<int> &gencs_simplemotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gencs_simplegmotherp4();
	const vector<int> &gencs_simplegmothercharge();
	const vector<int> &gencs_simplegmotherid();
	const vector<int> &gencs_simplegmotheridx();
	const vector<int> &gencs_simplegmotherstatus();
	const vector<bool> &genqs_isfromt();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genqs_p4();
	const vector<float> &genqs_charge();
	const vector<float> &genqs_iso();
	const vector<float> &genqs_mass();
	const vector<int> &genqs_id();
	const vector<int> &genqs__genpsidx();
	const vector<int> &genqs_status();
	const vector<bool> &genqs_fromHardProcessBeforeFSR();
	const vector<bool> &genqs_fromHardProcessDecayed();
	const vector<bool> &genqs_fromHardProcessFinalState();
	const vector<bool> &genqs_isDirectHardProcessTauDecayProductFinalState();
	const vector<bool> &genqs_isDirectPromptTauDecayProductFinalState();
	const vector<bool> &genqs_isHardProcess();
	const vector<bool> &genqs_isLastCopy();
	const vector<bool> &genqs_isLastCopyBeforeFSR();
	const vector<bool> &genqs_isMostlyLikePythia6Status3();
	const vector<bool> &genqs_isPromptDecayed();
	const vector<bool> &genqs_isPromptFinalState();
	const vector<vector<int> > &genqs_lepdaughter_id();
	const vector<int> &genqs_gentaudecay();
	const int &gen_nfromtqs_();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genqs_motherp4();
	const vector<float> &genqs_mothercharge();
	const vector<int> &genqs_motherid();
	const vector<int> &genqs_motheridx();
	const vector<int> &genqs_motherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genqs_gmotherp4();
	const vector<int> &genqs_gmothercharge();
	const vector<int> &genqs_gmotherid();
	const vector<int> &genqs_gmotheridx();
	const vector<int> &genqs_gmotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genqs_simplemotherp4();
	const vector<int> &genqs_simplemothercharge();
	const vector<int> &genqs_simplemotherid();
	const vector<int> &genqs_simplemotheridx();
	const vector<int> &genqs_simplemotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genqs_simplegmotherp4();
	const vector<int> &genqs_simplegmothercharge();
	const vector<int> &genqs_simplegmotherid();
	const vector<int> &genqs_simplegmotheridx();
	const vector<int> &genqs_simplegmotherstatus();
	const vector<bool> &genglus_isfromt();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genglus_p4();
	const vector<float> &genglus_charge();
	const vector<float> &genglus_iso();
	const vector<float> &genglus_mass();
	const vector<int> &genglus_id();
	const vector<int> &genglus__genpsidx();
	const vector<int> &genglus_status();
	const vector<bool> &genglus_fromHardProcessBeforeFSR();
	const vector<bool> &genglus_fromHardProcessDecayed();
	const vector<bool> &genglus_fromHardProcessFinalState();
	const vector<bool> &genglus_isDirectHardProcessTauDecayProductFinalState();
	const vector<bool> &genglus_isDirectPromptTauDecayProductFinalState();
	const vector<bool> &genglus_isHardProcess();
	const vector<bool> &genglus_isLastCopy();
	const vector<bool> &genglus_isLastCopyBeforeFSR();
	const vector<bool> &genglus_isMostlyLikePythia6Status3();
	const vector<bool> &genglus_isPromptDecayed();
	const vector<bool> &genglus_isPromptFinalState();
	const vector<vector<int> > &genglus_lepdaughter_id();
	const vector<int> &genglus_gentaudecay();
	const int &gen_nfromtglus_();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genglus_motherp4();
	const vector<float> &genglus_mothercharge();
	const vector<int> &genglus_motherid();
	const vector<int> &genglus_motheridx();
	const vector<int> &genglus_motherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genglus_gmotherp4();
	const vector<int> &genglus_gmothercharge();
	const vector<int> &genglus_gmotherid();
	const vector<int> &genglus_gmotheridx();
	const vector<int> &genglus_gmotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genglus_simplemotherp4();
	const vector<int> &genglus_simplemothercharge();
	const vector<int> &genglus_simplemotherid();
	const vector<int> &genglus_simplemotheridx();
	const vector<int> &genglus_simplemotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genglus_simplegmotherp4();
	const vector<int> &genglus_simplegmothercharge();
	const vector<int> &genglus_simplegmotherid();
	const vector<int> &genglus_simplegmotheridx();
	const vector<int> &genglus_simplegmotherstatus();
	const vector<bool> &genws_isfromt();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genws_p4();
	const vector<float> &genws_charge();
	const vector<float> &genws_iso();
	const vector<float> &genws_mass();
	const vector<int> &genws_id();
	const vector<int> &genws__genpsidx();
	const vector<int> &genws_status();
	const vector<bool> &genws_fromHardProcessBeforeFSR();
	const vector<bool> &genws_fromHardProcessDecayed();
	const vector<bool> &genws_fromHardProcessFinalState();
	const vector<bool> &genws_isDirectHardProcessTauDecayProductFinalState();
	const vector<bool> &genws_isDirectPromptTauDecayProductFinalState();
	const vector<bool> &genws_isHardProcess();
	const vector<bool> &genws_isLastCopy();
	const vector<bool> &genws_isLastCopyBeforeFSR();
	const vector<bool> &genws_isMostlyLikePythia6Status3();
	const vector<bool> &genws_isPromptDecayed();
	const vector<bool> &genws_isPromptFinalState();
	const vector<vector<int> > &genws_lepdaughter_id();
	const vector<int> &genws_gentaudecay();
	const int &gen_nfromtws_();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genws_motherp4();
	const vector<float> &genws_mothercharge();
	const vector<int> &genws_motherid();
	const vector<int> &genws_motheridx();
	const vector<int> &genws_motherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genws_gmotherp4();
	const vector<int> &genws_gmothercharge();
	const vector<int> &genws_gmotherid();
	const vector<int> &genws_gmotheridx();
	const vector<int> &genws_gmotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genws_simplemotherp4();
	const vector<int> &genws_simplemothercharge();
	const vector<int> &genws_simplemotherid();
	const vector<int> &genws_simplemotheridx();
	const vector<int> &genws_simplemotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genws_simplegmotherp4();
	const vector<int> &genws_simplegmothercharge();
	const vector<int> &genws_simplegmotherid();
	const vector<int> &genws_simplegmotheridx();
	const vector<int> &genws_simplegmotherstatus();
	const vector<bool> &genzs_isfromt();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genzs_p4();
	const vector<float> &genzs_charge();
	const vector<float> &genzs_iso();
	const vector<float> &genzs_mass();
	const vector<int> &genzs_id();
	const vector<int> &genzs__genpsidx();
	const vector<int> &genzs_status();
	const vector<bool> &genzs_fromHardProcessBeforeFSR();
	const vector<bool> &genzs_fromHardProcessDecayed();
	const vector<bool> &genzs_fromHardProcessFinalState();
	const vector<bool> &genzs_isDirectHardProcessTauDecayProductFinalState();
	const vector<bool> &genzs_isDirectPromptTauDecayProductFinalState();
	const vector<bool> &genzs_isHardProcess();
	const vector<bool> &genzs_isLastCopy();
	const vector<bool> &genzs_isLastCopyBeforeFSR();
	const vector<bool> &genzs_isMostlyLikePythia6Status3();
	const vector<bool> &genzs_isPromptDecayed();
	const vector<bool> &genzs_isPromptFinalState();
	const vector<vector<int> > &genzs_lepdaughter_id();
	const vector<int> &genzs_gentaudecay();
	const int &gen_nfromtzs_();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genzs_motherp4();
	const vector<float> &genzs_mothercharge();
	const vector<int> &genzs_motherid();
	const vector<int> &genzs_motheridx();
	const vector<int> &genzs_motherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genzs_gmotherp4();
	const vector<int> &genzs_gmothercharge();
	const vector<int> &genzs_gmotherid();
	const vector<int> &genzs_gmotheridx();
	const vector<int> &genzs_gmotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genzs_simplemotherp4();
	const vector<int> &genzs_simplemothercharge();
	const vector<int> &genzs_simplemotherid();
	const vector<int> &genzs_simplemotheridx();
	const vector<int> &genzs_simplemotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genzs_simplegmotherp4();
	const vector<int> &genzs_simplegmothercharge();
	const vector<int> &genzs_simplegmotherid();
	const vector<int> &genzs_simplegmotheridx();
	const vector<int> &genzs_simplegmotherstatus();
	const vector<bool> &genphs_isfromt();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genphs_p4();
	const vector<float> &genphs_charge();
	const vector<float> &genphs_iso();
	const vector<float> &genphs_mass();
	const vector<int> &genphs_id();
	const vector<int> &genphs__genpsidx();
	const vector<int> &genphs_status();
	const vector<bool> &genphs_fromHardProcessBeforeFSR();
	const vector<bool> &genphs_fromHardProcessDecayed();
	const vector<bool> &genphs_fromHardProcessFinalState();
	const vector<bool> &genphs_isDirectHardProcessTauDecayProductFinalState();
	const vector<bool> &genphs_isDirectPromptTauDecayProductFinalState();
	const vector<bool> &genphs_isHardProcess();
	const vector<bool> &genphs_isLastCopy();
	const vector<bool> &genphs_isLastCopyBeforeFSR();
	const vector<bool> &genphs_isMostlyLikePythia6Status3();
	const vector<bool> &genphs_isPromptDecayed();
	const vector<bool> &genphs_isPromptFinalState();
	const vector<vector<int> > &genphs_lepdaughter_id();
	const vector<int> &genphs_gentaudecay();
	const int &gen_nfromtphs_();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genphs_motherp4();
	const vector<float> &genphs_mothercharge();
	const vector<int> &genphs_motherid();
	const vector<int> &genphs_motheridx();
	const vector<int> &genphs_motherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genphs_gmotherp4();
	const vector<int> &genphs_gmothercharge();
	const vector<int> &genphs_gmotherid();
	const vector<int> &genphs_gmotheridx();
	const vector<int> &genphs_gmotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genphs_simplemotherp4();
	const vector<int> &genphs_simplemothercharge();
	const vector<int> &genphs_simplemotherid();
	const vector<int> &genphs_simplemotheridx();
	const vector<int> &genphs_simplemotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genphs_simplegmotherp4();
	const vector<int> &genphs_simplegmothercharge();
	const vector<int> &genphs_simplegmotherid();
	const vector<int> &genphs_simplegmotheridx();
	const vector<int> &genphs_simplegmotherstatus();
	const vector<bool> &genhs_isfromt();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genhs_p4();
	const vector<float> &genhs_charge();
	const vector<float> &genhs_iso();
	const vector<float> &genhs_mass();
	const vector<int> &genhs_id();
	const vector<int> &genhs__genpsidx();
	const vector<int> &genhs_status();
	const vector<bool> &genhs_fromHardProcessBeforeFSR();
	const vector<bool> &genhs_fromHardProcessDecayed();
	const vector<bool> &genhs_fromHardProcessFinalState();
	const vector<bool> &genhs_isDirectHardProcessTauDecayProductFinalState();
	const vector<bool> &genhs_isDirectPromptTauDecayProductFinalState();
	const vector<bool> &genhs_isHardProcess();
	const vector<bool> &genhs_isLastCopy();
	const vector<bool> &genhs_isLastCopyBeforeFSR();
	const vector<bool> &genhs_isMostlyLikePythia6Status3();
	const vector<bool> &genhs_isPromptDecayed();
	const vector<bool> &genhs_isPromptFinalState();
	const vector<vector<int> > &genhs_lepdaughter_id();
	const vector<int> &genhs_gentaudecay();
	const int &gen_nfromths_();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genhs_motherp4();
	const vector<float> &genhs_mothercharge();
	const vector<int> &genhs_motherid();
	const vector<int> &genhs_motheridx();
	const vector<int> &genhs_motherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genhs_gmotherp4();
	const vector<int> &genhs_gmothercharge();
	const vector<int> &genhs_gmotherid();
	const vector<int> &genhs_gmotheridx();
	const vector<int> &genhs_gmotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genhs_simplemotherp4();
	const vector<int> &genhs_simplemothercharge();
	const vector<int> &genhs_simplemotherid();
	const vector<int> &genhs_simplemotheridx();
	const vector<int> &genhs_simplemotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genhs_simplegmotherp4();
	const vector<int> &genhs_simplegmothercharge();
	const vector<int> &genhs_simplegmotherid();
	const vector<int> &genhs_simplegmotheridx();
	const vector<int> &genhs_simplegmotherstatus();
	const vector<bool> &genlsp_isfromt();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genlsp_p4();
	const vector<float> &genlsp_charge();
	const vector<float> &genlsp_iso();
	const vector<float> &genlsp_mass();
	const vector<int> &genlsp_id();
	const vector<int> &genlsp__genpsidx();
	const vector<int> &genlsp_status();
	const vector<bool> &genlsp_fromHardProcessBeforeFSR();
	const vector<bool> &genlsp_fromHardProcessDecayed();
	const vector<bool> &genlsp_fromHardProcessFinalState();
	const vector<bool> &genlsp_isDirectHardProcessTauDecayProductFinalState();
	const vector<bool> &genlsp_isDirectPromptTauDecayProductFinalState();
	const vector<bool> &genlsp_isHardProcess();
	const vector<bool> &genlsp_isLastCopy();
	const vector<bool> &genlsp_isLastCopyBeforeFSR();
	const vector<bool> &genlsp_isMostlyLikePythia6Status3();
	const vector<bool> &genlsp_isPromptDecayed();
	const vector<bool> &genlsp_isPromptFinalState();
	const vector<vector<int> > &genlsp_lepdaughter_id();
	const vector<int> &genlsp_gentaudecay();
	const int &gen_nfromtlsp_();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genlsp_motherp4();
	const vector<float> &genlsp_mothercharge();
	const vector<int> &genlsp_motherid();
	const vector<int> &genlsp_motheridx();
	const vector<int> &genlsp_motherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genlsp_gmotherp4();
	const vector<int> &genlsp_gmothercharge();
	const vector<int> &genlsp_gmotherid();
	const vector<int> &genlsp_gmotheridx();
	const vector<int> &genlsp_gmotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genlsp_simplemotherp4();
	const vector<int> &genlsp_simplemothercharge();
	const vector<int> &genlsp_simplemotherid();
	const vector<int> &genlsp_simplemotheridx();
	const vector<int> &genlsp_simplemotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genlsp_simplegmotherp4();
	const vector<int> &genlsp_simplegmothercharge();
	const vector<int> &genlsp_simplegmotherid();
	const vector<int> &genlsp_simplegmotheridx();
	const vector<int> &genlsp_simplegmotherstatus();
	const vector<bool> &genstop_isfromt();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genstop_p4();
	const vector<float> &genstop_charge();
	const vector<float> &genstop_iso();
	const vector<float> &genstop_mass();
	const vector<int> &genstop_id();
	const vector<int> &genstop__genpsidx();
	const vector<int> &genstop_status();
	const vector<bool> &genstop_fromHardProcessBeforeFSR();
	const vector<bool> &genstop_fromHardProcessDecayed();
	const vector<bool> &genstop_fromHardProcessFinalState();
	const vector<bool> &genstop_isDirectHardProcessTauDecayProductFinalState();
	const vector<bool> &genstop_isDirectPromptTauDecayProductFinalState();
	const vector<bool> &genstop_isHardProcess();
	const vector<bool> &genstop_isLastCopy();
	const vector<bool> &genstop_isLastCopyBeforeFSR();
	const vector<bool> &genstop_isMostlyLikePythia6Status3();
	const vector<bool> &genstop_isPromptDecayed();
	const vector<bool> &genstop_isPromptFinalState();
	const vector<vector<int> > &genstop_lepdaughter_id();
	const vector<int> &genstop_gentaudecay();
	const int &gen_nfromtstop_();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genstop_motherp4();
	const vector<float> &genstop_mothercharge();
	const vector<int> &genstop_motherid();
	const vector<int> &genstop_motheridx();
	const vector<int> &genstop_motherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genstop_gmotherp4();
	const vector<int> &genstop_gmothercharge();
	const vector<int> &genstop_gmotherid();
	const vector<int> &genstop_gmotheridx();
	const vector<int> &genstop_gmotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genstop_simplemotherp4();
	const vector<int> &genstop_simplemothercharge();
	const vector<int> &genstop_simplemotherid();
	const vector<int> &genstop_simplemotheridx();
	const vector<int> &genstop_simplemotherstatus();
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genstop_simplegmotherp4();
	const vector<int> &genstop_simplegmothercharge();
	const vector<int> &genstop_simplegmotherid();
	const vector<int> &genstop_simplegmotheridx();
	const vector<int> &genstop_simplegmotherstatus();
}
#endif
