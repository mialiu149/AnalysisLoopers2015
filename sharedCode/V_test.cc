#include "V_test.h"
V_test cms3;
namespace tas {
	const int &run() { return cms3.run(); }
	const int &lumi() { return cms3.lumi(); }
	const unsigned long long &evt() { return cms3.evt(); }
	const int &isData() { return cms3.isData(); }
	const bool &evt_passgoodrunlist() { return cms3.evt_passgoodrunlist(); }
	const float &evt_scale1fb() { return cms3.evt_scale1fb(); }
	const float &evt_xsec() { return cms3.evt_xsec(); }
	const float &evt_kfactor() { return cms3.evt_kfactor(); }
	const float &evt_filter() { return cms3.evt_filter(); }
	const int &evt_nEvts() { return cms3.evt_nEvts(); }
	const float &puWeight() { return cms3.puWeight(); }
	const int &nVert() { return cms3.nVert(); }
	const int &nTrueInt() { return cms3.nTrueInt(); }
	const float &rho() { return cms3.rho(); }
	const float &rho25() { return cms3.rho25(); }
	const int &njets() { return cms3.njets(); }
	const float &ht() { return cms3.ht(); }
	const float &gen_ht() { return cms3.gen_ht(); }
	const int &njets_eta30() { return cms3.njets_eta30(); }
	const float &ht_eta30() { return cms3.ht_eta30(); }
	const float &mt2() { return cms3.mt2(); }
	const float &mt2j() { return cms3.mt2j(); }
	const float &mt2j_eta30() { return cms3.mt2j_eta30(); }
	const int &nJet40() { return cms3.nJet40(); }
	const int &nBJet40() { return cms3.nBJet40(); }
	const int &nBJetTight() { return cms3.nBJetTight(); }
	const int &nBJetMedium() { return cms3.nBJetMedium(); }
	const int &nBJetLoose() { return cms3.nBJetLoose(); }
	const int &nMuons10() { return cms3.nMuons10(); }
	const int &nElectrons10() { return cms3.nElectrons10(); }
	const int &nTaus20() { return cms3.nTaus20(); }
	const int &nGammas20() { return cms3.nGammas20(); }
	const float &met_pt() { return cms3.met_pt(); }
	const float &met_phi() { return cms3.met_phi(); }
	const float &met_rawPt() { return cms3.met_rawPt(); }
	const float &met_rawPhi() { return cms3.met_rawPhi(); }
	const float &met_caloPt() { return cms3.met_caloPt(); }
	const float &met_caloPhi() { return cms3.met_caloPhi(); }
	const float &met_genPt() { return cms3.met_genPt(); }
	const float &met_genPhi() { return cms3.met_genPhi(); }
	const float &sumet_raw() { return cms3.sumet_raw(); }
	const float &jzb_raw() { return cms3.jzb_raw(); }
	const float &jzb_T1() { return cms3.jzb_T1(); }
	const float &jgb_raw() { return cms3.jgb_raw(); }
	const float &jgb_T1() { return cms3.jgb_T1(); }
	const int &Flag_EcalDeadCellTriggerPrimitiveFilter() { return cms3.Flag_EcalDeadCellTriggerPrimitiveFilter(); }
	const int &Flag_trkPOG_manystripclus53X() { return cms3.Flag_trkPOG_manystripclus53X(); }
	const int &Flag_ecalLaserCorrFilter() { return cms3.Flag_ecalLaserCorrFilter(); }
	const int &Flag_trkPOG_toomanystripclus53X() { return cms3.Flag_trkPOG_toomanystripclus53X(); }
	const int &Flag_hcalLaserEventFilter() { return cms3.Flag_hcalLaserEventFilter(); }
	const int &Flag_trkPOG_logErrorTooManyClusters() { return cms3.Flag_trkPOG_logErrorTooManyClusters(); }
	const int &Flag_trkPOGFilters() { return cms3.Flag_trkPOGFilters(); }
	const int &Flag_trackingFailureFilter() { return cms3.Flag_trackingFailureFilter(); }
	const int &Flag_CSCTightHaloFilter() { return cms3.Flag_CSCTightHaloFilter(); }
	const int &Flag_HBHENoiseFilter() { return cms3.Flag_HBHENoiseFilter(); }
	const int &Flag_goodVertices() { return cms3.Flag_goodVertices(); }
	const int &Flag_eeBadScFilter() { return cms3.Flag_eeBadScFilter(); }
	const int &Flag_METFilters() { return cms3.Flag_METFilters(); }
	const int &HLT_HT900() { return cms3.HLT_HT900(); }
	const int &HLT_MET170() { return cms3.HLT_MET170(); }
	const int &HLT_ht350met120() { return cms3.HLT_ht350met120(); }
	const int &HLT_SingleMu() { return cms3.HLT_SingleMu(); }
	const int &HLT_DoubleEl() { return cms3.HLT_DoubleEl(); }
	const int &HLT_DoubleEl_DZ() { return cms3.HLT_DoubleEl_DZ(); }
	const int &HLT_DoubleEl_noiso() { return cms3.HLT_DoubleEl_noiso(); }
	const int &HLT_MuEG() { return cms3.HLT_MuEG(); }
	const int &HLT_MuEG_2() { return cms3.HLT_MuEG_2(); }
	const int &HLT_DoubleMu() { return cms3.HLT_DoubleMu(); }
	const int &HLT_DoubleMu_tk() { return cms3.HLT_DoubleMu_tk(); }
	const int &HLT_l1prescale() { return cms3.HLT_l1prescale(); }
	const int &HLT_Photons() { return cms3.HLT_Photons(); }
	const int &HLT_Photon22() { return cms3.HLT_Photon22(); }
	const int &HLT_Photon30() { return cms3.HLT_Photon30(); }
	const int &HLT_Photon36() { return cms3.HLT_Photon36(); }
	const int &HLT_Photon50() { return cms3.HLT_Photon50(); }
	const int &HLT_Photon75() { return cms3.HLT_Photon75(); }
	const int &HLT_Photon90() { return cms3.HLT_Photon90(); }
	const int &HLT_Photon120() { return cms3.HLT_Photon120(); }
	const int &HLT_Photon175() { return cms3.HLT_Photon175(); }
	const int &HLT_Photon165_HE10() { return cms3.HLT_Photon165_HE10(); }
	const int &HLT_Photon22_R9Id90_HE10_IsoM() { return cms3.HLT_Photon22_R9Id90_HE10_IsoM(); }
	const int &HLT_Photon30_R9Id90_HE10_IsoM() { return cms3.HLT_Photon30_R9Id90_HE10_IsoM(); }
	const int &HLT_Photon36_R9Id90_HE10_IsoM() { return cms3.HLT_Photon36_R9Id90_HE10_IsoM(); }
	const int &HLT_Photon50_R9Id90_HE10_IsoM() { return cms3.HLT_Photon50_R9Id90_HE10_IsoM(); }
	const int &HLT_Photon75_R9Id90_HE10_IsoM() { return cms3.HLT_Photon75_R9Id90_HE10_IsoM(); }
	const int &HLT_Photon90_R9Id90_HE10_IsoM() { return cms3.HLT_Photon90_R9Id90_HE10_IsoM(); }
	const int &HLT_Photon120_R9Id90_HE10_IsoM() { return cms3.HLT_Photon120_R9Id90_HE10_IsoM(); }
	const int &HLT_Photon165_R9Id90_HE10_IsoM() { return cms3.HLT_Photon165_R9Id90_HE10_IsoM(); }
	const float &dilmass() { return cms3.dilmass(); }
	const float &dilpt() { return cms3.dilpt(); }
	const float &dRll() { return cms3.dRll(); }
	const float &matched_neutralemf() { return cms3.matched_neutralemf(); }
	const bool &elveto() { return cms3.elveto(); }
	const int &nlep() { return cms3.nlep(); }
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &lep_p4() { return cms3.lep_p4(); }
	const vector<float> &lep_pt() { return cms3.lep_pt(); }
	const vector<float> &lep_eta() { return cms3.lep_eta(); }
	const vector<float> &lep_phi() { return cms3.lep_phi(); }
	const vector<float> &lep_mass() { return cms3.lep_mass(); }
	const vector<int> &lep_charge() { return cms3.lep_charge(); }
	const vector<int> &lep_pdgId() { return cms3.lep_pdgId(); }
	const vector<float> &lep_dxy() { return cms3.lep_dxy(); }
	const vector<float> &lep_etaSC() { return cms3.lep_etaSC(); }
	const vector<float> &lep_dz() { return cms3.lep_dz(); }
	const vector<int> &lep_tightId() { return cms3.lep_tightId(); }
	const vector<float> &lep_relIso03() { return cms3.lep_relIso03(); }
	const vector<float> &lep_relIso03MREA() { return cms3.lep_relIso03MREA(); }
	const vector<float> &lep_relIso03MRDB() { return cms3.lep_relIso03MRDB(); }
	const vector<float> &lep_relIso03MRNC() { return cms3.lep_relIso03MRNC(); }
	const vector<float> &lep_relIso04() { return cms3.lep_relIso04(); }
	const vector<int> &lep_mcMatchId() { return cms3.lep_mcMatchId(); }
	const vector<int> &lep_lostHits() { return cms3.lep_lostHits(); }
	const vector<int> &lep_convVeto() { return cms3.lep_convVeto(); }
	const vector<int> &lep_tightCharge() { return cms3.lep_tightCharge(); }
	const vector<int> &lep_islead() { return cms3.lep_islead(); }
	const vector<int> &lep_istail() { return cms3.lep_istail(); }
	const int &ntau() { return cms3.ntau(); }
	const vector<float> &tau_pt() { return cms3.tau_pt(); }
	const vector<float> &tau_eta() { return cms3.tau_eta(); }
	const vector<float> &tau_phi() { return cms3.tau_phi(); }
	const vector<float> &tau_mass() { return cms3.tau_mass(); }
	const vector<int> &tau_charge() { return cms3.tau_charge(); }
	const vector<float> &tau_dxy() { return cms3.tau_dxy(); }
	const vector<float> &tau_dz() { return cms3.tau_dz(); }
	const vector<int> &tau_idCI3hit() { return cms3.tau_idCI3hit(); }
	const vector<float> &tau_isoCI3hit() { return cms3.tau_isoCI3hit(); }
	const int &ngamma() { return cms3.ngamma(); }
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &gamma_p4() { return cms3.gamma_p4(); }
	const vector<float> &gamma_pt() { return cms3.gamma_pt(); }
	const vector<float> &gamma_eta() { return cms3.gamma_eta(); }
	const vector<float> &gamma_phi() { return cms3.gamma_phi(); }
	const vector<float> &gamma_mass() { return cms3.gamma_mass(); }
	const vector<int> &gamma_mcMatchId() { return cms3.gamma_mcMatchId(); }
	const vector<float> &gamma_genIso() { return cms3.gamma_genIso(); }
	const vector<float> &gamma_chHadIso() { return cms3.gamma_chHadIso(); }
	const vector<float> &gamma_neuHadIso() { return cms3.gamma_neuHadIso(); }
	const vector<float> &gamma_phIso() { return cms3.gamma_phIso(); }
	const vector<float> &gamma_sigmaIetaIeta() { return cms3.gamma_sigmaIetaIeta(); }
	const vector<float> &gamma_r9() { return cms3.gamma_r9(); }
	const vector<float> &gamma_hOverE() { return cms3.gamma_hOverE(); }
	const vector<int> &gamma_idCutBased() { return cms3.gamma_idCutBased(); }
	const int &ngenPart() { return cms3.ngenPart(); }
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &genPart_p4() { return cms3.genPart_p4(); }
	const vector<float> &genPart_pt() { return cms3.genPart_pt(); }
	const vector<float> &genPart_eta() { return cms3.genPart_eta(); }
	const vector<float> &genPart_phi() { return cms3.genPart_phi(); }
	const vector<float> &genPart_mass() { return cms3.genPart_mass(); }
	const vector<int> &genPart_pdgId() { return cms3.genPart_pdgId(); }
	const vector<int> &genPart_status() { return cms3.genPart_status(); }
	const vector<float> &genPart_charge() { return cms3.genPart_charge(); }
	const vector<int> &genPart_motherId() { return cms3.genPart_motherId(); }
	const vector<int> &genPart_grandmaId() { return cms3.genPart_grandmaId(); }
	const vector<bool> &genPart_isp6status3() { return cms3.genPart_isp6status3(); }
	const int &gamma_nJet40() { return cms3.gamma_nJet40(); }
	const int &gamma_nBJet40() { return cms3.gamma_nBJet40(); }
	const int &ngenLep() { return cms3.ngenLep(); }
	const vector<float> &genLep_pt() { return cms3.genLep_pt(); }
	const vector<float> &genLep_eta() { return cms3.genLep_eta(); }
	const vector<float> &genLep_phi() { return cms3.genLep_phi(); }
	const vector<float> &genLep_mass() { return cms3.genLep_mass(); }
	const vector<int> &genLep_pdgId() { return cms3.genLep_pdgId(); }
	const vector<int> &genLep_status() { return cms3.genLep_status(); }
	const vector<float> &genLep_charge() { return cms3.genLep_charge(); }
	const vector<int> &genLep_sourceId() { return cms3.genLep_sourceId(); }
	const vector<bool> &genLep_isp6status3() { return cms3.genLep_isp6status3(); }
	const int &ngenTau() { return cms3.ngenTau(); }
	const vector<float> &genTau_pt() { return cms3.genTau_pt(); }
	const vector<float> &genTau_eta() { return cms3.genTau_eta(); }
	const vector<float> &genTau_phi() { return cms3.genTau_phi(); }
	const vector<float> &genTau_mass() { return cms3.genTau_mass(); }
	const vector<int> &genTau_pdgId() { return cms3.genTau_pdgId(); }
	const vector<int> &genTau_status() { return cms3.genTau_status(); }
	const vector<float> &genTau_charge() { return cms3.genTau_charge(); }
	const vector<int> &genTau_sourceId() { return cms3.genTau_sourceId(); }
	const int &ngenLepFromTau() { return cms3.ngenLepFromTau(); }
	const vector<float> &genLepFromTau_pt() { return cms3.genLepFromTau_pt(); }
	const vector<float> &genLepFromTau_eta() { return cms3.genLepFromTau_eta(); }
	const vector<float> &genLepFromTau_phi() { return cms3.genLepFromTau_phi(); }
	const vector<float> &genLepFromTau_mass() { return cms3.genLepFromTau_mass(); }
	const vector<int> &genLepFromTau_pdgId() { return cms3.genLepFromTau_pdgId(); }
	const vector<int> &genLepFromTau_status() { return cms3.genLepFromTau_status(); }
	const vector<float> &genLepFromTau_charge() { return cms3.genLepFromTau_charge(); }
	const vector<int> &genLepFromTau_sourceId() { return cms3.genLepFromTau_sourceId(); }
	const int &njet() { return cms3.njet(); }
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jet_p4() { return cms3.jet_p4(); }
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jets_p4() { return cms3.jets_p4(); }
	const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jets_eta30_p4() { return cms3.jets_eta30_p4(); }
	const vector<float> &jet_pt() { return cms3.jet_pt(); }
	const vector<float> &jet_eta() { return cms3.jet_eta(); }
	const vector<float> &jet_phi() { return cms3.jet_phi(); }
	const vector<float> &jet_mass() { return cms3.jet_mass(); }
	const vector<float> &jet_btagCSV() { return cms3.jet_btagCSV(); }
	const vector<float> &jet_rawPt() { return cms3.jet_rawPt(); }
	const vector<float> &jet_mcPt() { return cms3.jet_mcPt(); }
	const vector<int> &jet_mcFlavour() { return cms3.jet_mcFlavour(); }
	const vector<float> &jet_quarkGluonID() { return cms3.jet_quarkGluonID(); }
	const vector<float> &jet_area() { return cms3.jet_area(); }
	const vector<int> &jet_id() { return cms3.jet_id(); }
	const vector<int> &jet_puId() { return cms3.jet_puId(); }
	const float &met_T1CHS_pt() { return cms3.met_T1CHS_pt(); }
	const float &met_T1CHS_phi() { return cms3.met_T1CHS_phi(); }
	const int &hyp_type() { return cms3.hyp_type(); }
	const int &evt_type() { return cms3.evt_type(); }
}
