// -*- C++ -*-
// This is a header file generated with the command:
// makeCMS3ClassFiles("/hadoop/cms/store/user/phchang/condor/forCommissioningv11/TTbar_1.root", "t", "LeptonTree", "LeptonTreeNameSpace", "lepton_tree")

#ifndef LeptonTree_H
#define LeptonTree_H

#include "Math/LorentzVector.h"
#include "Math/Point3D.h"
#include "TMath.h"
#include "TBranch.h"
#include "TTree.h"
#include "TH1F.h"
#include "TFile.h"
#include "TBits.h"
#include <vector> 
#include <unistd.h> 
typedef ROOT::Math::LorentzVector< ROOT::Math::PxPyPzE4D<float> > LorentzVector;

using namespace std; 
class LeptonTree {
 private: 
 protected: 
  unsigned int index;
  float    evt_pfmet_;
  TBranch *evt_pfmet_branch;
  bool     evt_pfmet_isLoaded;
  float    evt_pfmetPhi_;
  TBranch *evt_pfmetPhi_branch;
  bool     evt_pfmetPhi_isLoaded;
  float    evt_trackmet_;
  TBranch *evt_trackmet_branch;
  bool     evt_trackmet_isLoaded;
  float    evt_trackmetPhi_;
  TBranch *evt_trackmetPhi_branch;
  bool     evt_trackmetPhi_isLoaded;
  float    evt_corrMET_;
  TBranch *evt_corrMET_branch;
  bool     evt_corrMET_isLoaded;
  float    evt_corrMETPhi_;
  TBranch *evt_corrMETPhi_branch;
  bool     evt_corrMETPhi_isLoaded;
  float    evt_corrMETPhi_up_;
  TBranch *evt_corrMETPhi_up_branch;
  bool     evt_corrMETPhi_up_isLoaded;
  float    evt_corrMET_dn_;
  TBranch *evt_corrMET_dn_branch;
  bool     evt_corrMET_dn_isLoaded;
  float    evt_corrMETPhi_dn_;
  TBranch *evt_corrMETPhi_dn_branch;
  bool     evt_corrMETPhi_dn_isLoaded;
  float    evt_pfsumet_;
  TBranch *evt_pfsumet_branch;
  bool     evt_pfsumet_isLoaded;
  float    evt_pfmetSig_;
  TBranch *evt_pfmetSig_branch;
  bool     evt_pfmetSig_isLoaded;
  int      evt_event_;
  TBranch *evt_event_branch;
  bool     evt_event_isLoaded;
  int      evt_lumiBlock_;
  TBranch *evt_lumiBlock_branch;
  bool     evt_lumiBlock_isLoaded;
  int      evt_run_;
  TBranch *evt_run_branch;
  bool     evt_run_isLoaded;
  bool     filt_csc_;
  TBranch *filt_csc_branch;
  bool     filt_csc_isLoaded;
  bool     filt_hbhe_;
  TBranch *filt_hbhe_branch;
  bool     filt_hbhe_isLoaded;
  bool     passes_met_filters_;
  TBranch *passes_met_filters_branch;
  bool     passes_met_filters_isLoaded;
  bool     filt_hcallaser_;
  TBranch *filt_hcallaser_branch;
  bool     filt_hcallaser_isLoaded;
  bool     filt_ecaltp_;
  TBranch *filt_ecaltp_branch;
  bool     filt_ecaltp_isLoaded;
  bool     filt_trkfail_;
  TBranch *filt_trkfail_branch;
  bool     filt_trkfail_isLoaded;
  bool     filt_eebadsc_;
  TBranch *filt_eebadsc_branch;
  bool     filt_eebadsc_isLoaded;
  bool     evt_isRealData_;
  TBranch *evt_isRealData_branch;
  bool     evt_isRealData_isLoaded;
  float    scale1fb_;
  TBranch *scale1fb_branch;
  bool     scale1fb_isLoaded;
  float    evt_xsec_incl_;
  TBranch *evt_xsec_incl_branch;
  bool     evt_xsec_incl_isLoaded;
  float    evt_kfactor_;
  TBranch *evt_kfactor_branch;
  bool     evt_kfactor_isLoaded;
  float    gen_met_;
  TBranch *gen_met_branch;
  bool     gen_met_isLoaded;
  float    gen_metPhi_;
  TBranch *gen_metPhi_branch;
  bool     gen_metPhi_isLoaded;
  float    njets_;
  TBranch *njets_branch;
  bool     njets_isLoaded;
  float    ht_;
  TBranch *ht_branch;
  bool     ht_isLoaded;
  float    ht_SS_;
  TBranch *ht_SS_branch;
  bool     ht_SS_isLoaded;
  vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > *jets_;
  TBranch *jets_branch;
  bool     jets_isLoaded;
  vector<float> *jets_disc_;
  TBranch *jets_disc_branch;
  bool     jets_disc_isLoaded;
  vector<float> *jets_area_;
  TBranch *jets_area_branch;
  bool     jets_area_isLoaded;
  vector<float> *jets_undoJEC_;
  TBranch *jets_undoJEC_branch;
  bool     jets_undoJEC_isLoaded;
  vector<float> *jets_unc_;
  TBranch *jets_unc_branch;
  bool     jets_unc_isLoaded;
  TString *sample_;
  TBranch *sample_branch;
  bool     sample_isLoaded;
  int      nFOs_SS_;
  TBranch *nFOs_SS_branch;
  bool     nFOs_SS_isLoaded;
  int      nFOs_VVV_;
  TBranch *nFOs_VVV_branch;
  bool     nFOs_VVV_isLoaded;
  int      nvtx_;
  TBranch *nvtx_branch;
  bool     nvtx_isLoaded;
  float    pu_ntrue_;
  TBranch *pu_ntrue_branch;
  bool     pu_ntrue_isLoaded;
  float    rho_;
  TBranch *rho_branch;
  bool     rho_isLoaded;
  float    rho_neut_centr_;
  TBranch *rho_neut_centr_branch;
  bool     rho_neut_centr_isLoaded;
  float    rho_calo_;
  TBranch *rho_calo_branch;
  bool     rho_calo_isLoaded;
  float    rho_calo_centr_;
  TBranch *rho_calo_centr_branch;
  bool     rho_calo_centr_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *p4_;
  TBranch *p4_branch;
  bool     p4_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *tag_p4_;
  TBranch *tag_p4_branch;
  bool     tag_p4_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *dilep_p4_;
  TBranch *dilep_p4_branch;
  bool     dilep_p4_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *mc_p4_;
  TBranch *mc_p4_branch;
  bool     mc_p4_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *mc_motherp4_;
  TBranch *mc_motherp4_branch;
  bool     mc_motherp4_isLoaded;
  int      mc_motherid_;
  TBranch *mc_motherid_branch;
  bool     mc_motherid_isLoaded;
  int      id_;
  TBranch *id_branch;
  bool     id_isLoaded;
  int      idx_;
  TBranch *idx_branch;
  bool     idx_isLoaded;
  float    dxyPV_;
  TBranch *dxyPV_branch;
  bool     dxyPV_isLoaded;
  float    dZ_;
  TBranch *dZ_branch;
  bool     dZ_isLoaded;
  float    dxyPV_err_;
  TBranch *dxyPV_err_branch;
  bool     dxyPV_err_isLoaded;
  int      motherID_;
  TBranch *motherID_branch;
  bool     motherID_isLoaded;
  int      mc_id_;
  TBranch *mc_id_branch;
  bool     mc_id_isLoaded;
  float    RelIso03_;
  TBranch *RelIso03_branch;
  bool     RelIso03_isLoaded;
  float    RelIso03EA_;
  TBranch *RelIso03EA_branch;
  bool     RelIso03EA_isLoaded;
  float    tag_RelIso03EA_;
  TBranch *tag_RelIso03EA_branch;
  bool     tag_RelIso03EA_isLoaded;
  float    RelIso03DB_;
  TBranch *RelIso03DB_branch;
  bool     RelIso03DB_isLoaded;
  float    pfChargedHadronIso_;
  TBranch *pfChargedHadronIso_branch;
  bool     pfChargedHadronIso_isLoaded;
  float    pfPhotonIso_;
  TBranch *pfPhotonIso_branch;
  bool     pfPhotonIso_isLoaded;
  float    pfNeutralHadronIso_;
  TBranch *pfNeutralHadronIso_branch;
  bool     pfNeutralHadronIso_isLoaded;
  float    tkIso_;
  TBranch *tkIso_branch;
  bool     tkIso_isLoaded;
  float    sumPUPt_;
  TBranch *sumPUPt_branch;
  bool     sumPUPt_isLoaded;
  bool     passes_VVV_cutbased_veto_;
  TBranch *passes_VVV_cutbased_veto_branch;
  bool     passes_VVV_cutbased_veto_isLoaded;
  bool     passes_VVV_cutbased_veto_noiso_;
  TBranch *passes_VVV_cutbased_veto_noiso_branch;
  bool     passes_VVV_cutbased_veto_noiso_isLoaded;
  bool     passes_VVV_cutbased_veto_noiso_noip_;
  TBranch *passes_VVV_cutbased_veto_noiso_noip_branch;
  bool     passes_VVV_cutbased_veto_noiso_noip_isLoaded;
  bool     passes_VVV_cutbased_fo_;
  TBranch *passes_VVV_cutbased_fo_branch;
  bool     passes_VVV_cutbased_fo_isLoaded;
  bool     passes_VVV_cutbased_fo_noiso_;
  TBranch *passes_VVV_cutbased_fo_noiso_branch;
  bool     passes_VVV_cutbased_fo_noiso_isLoaded;
  bool     passes_VVV_cutbased_tight_noiso_;
  TBranch *passes_VVV_cutbased_tight_noiso_branch;
  bool     passes_VVV_cutbased_tight_noiso_isLoaded;
  bool     passes_VVV_cutbased_tight_;
  TBranch *passes_VVV_cutbased_tight_branch;
  bool     passes_VVV_cutbased_tight_isLoaded;
  bool     passes_VVV_MVAbased_tight_noiso_;
  TBranch *passes_VVV_MVAbased_tight_noiso_branch;
  bool     passes_VVV_MVAbased_tight_noiso_isLoaded;
  bool     passes_VVV_MVAbased_tight_;
  TBranch *passes_VVV_MVAbased_tight_branch;
  bool     passes_VVV_MVAbased_tight_isLoaded;
  bool     passes_VVV_baseline_;
  TBranch *passes_VVV_baseline_branch;
  bool     passes_VVV_baseline_isLoaded;
  float    ip3d_;
  TBranch *ip3d_branch;
  bool     ip3d_isLoaded;
  float    ip3derr_;
  TBranch *ip3derr_branch;
  bool     ip3derr_isLoaded;
  int      type_;
  TBranch *type_branch;
  bool     type_isLoaded;
  float    mt_;
  TBranch *mt_branch;
  bool     mt_isLoaded;
  float    ptrelv0_;
  TBranch *ptrelv0_branch;
  bool     ptrelv0_isLoaded;
  float    ptrelv1_;
  TBranch *ptrelv1_branch;
  bool     ptrelv1_isLoaded;
  float    miniiso_;
  TBranch *miniiso_branch;
  bool     miniiso_isLoaded;
  float    miniisoDB_;
  TBranch *miniisoDB_branch;
  bool     miniisoDB_isLoaded;
  float    reliso04_;
  TBranch *reliso04_branch;
  bool     reliso04_isLoaded;
  float    annulus04_;
  TBranch *annulus04_branch;
  bool     annulus04_isLoaded;
  float    AbsTrkIso_;
  TBranch *AbsTrkIso_branch;
  bool     AbsTrkIso_isLoaded;
  float    TrkAn04_;
  TBranch *TrkAn04_branch;
  bool     TrkAn04_isLoaded;
  float    iso03sumPt_;
  TBranch *iso03sumPt_branch;
  bool     iso03sumPt_isLoaded;
  float    iso03emEt_;
  TBranch *iso03emEt_branch;
  bool     iso03emEt_isLoaded;
  float    iso03hadEt_;
  TBranch *iso03hadEt_branch;
  bool     iso03hadEt_isLoaded;
  int      jet_close_lep_idx_;
  TBranch *jet_close_lep_idx_branch;
  bool     jet_close_lep_idx_isLoaded;
  ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > *jet_close_lep_;
  TBranch *jet_close_lep_branch;
  bool     jet_close_lep_isLoaded;
  float    jet_close_lep_undoJEC_;
  TBranch *jet_close_lep_undoJEC_branch;
  bool     jet_close_lep_undoJEC_isLoaded;
  float    jet_close_lep_area_;
  TBranch *jet_close_lep_area_branch;
  bool     jet_close_lep_area_isLoaded;
  float    jet_close_L1_;
  TBranch *jet_close_L1_branch;
  bool     jet_close_L1_isLoaded;
  float    jet_close_L1nc_;
  TBranch *jet_close_L1nc_branch;
  bool     jet_close_L1nc_isLoaded;
  float    jet_close_L1ncmc_;
  TBranch *jet_close_L1ncmc_branch;
  bool     jet_close_L1ncmc_isLoaded;
  float    jet_close_L1L2L3_;
  TBranch *jet_close_L1L2L3_branch;
  bool     jet_close_L1L2L3_isLoaded;
  float    jet_close_L2L3_;
  TBranch *jet_close_L2L3_branch;
  bool     jet_close_L2L3_isLoaded;
  float    ptratio_;
  TBranch *ptratio_branch;
  bool     ptratio_isLoaded;
  int      tag_charge_;
  TBranch *tag_charge_branch;
  bool     tag_charge_isLoaded;
  int      tag_mc_motherid_;
  TBranch *tag_mc_motherid_branch;
  bool     tag_mc_motherid_isLoaded;
  float    tag_eSeed_;
  TBranch *tag_eSeed_branch;
  bool     tag_eSeed_isLoaded;
  float    tag_eSCRaw_;
  TBranch *tag_eSCRaw_branch;
  bool     tag_eSCRaw_isLoaded;
  float    tag_eSC_;
  TBranch *tag_eSC_branch;
  bool     tag_eSC_isLoaded;
  float    tag_ecalEnergy_;
  TBranch *tag_ecalEnergy_branch;
  bool     tag_ecalEnergy_isLoaded;
  int      exp_innerlayers_;
  TBranch *exp_innerlayers_branch;
  bool     exp_innerlayers_isLoaded;
  int      exp_outerlayers_;
  TBranch *exp_outerlayers_branch;
  bool     exp_outerlayers_isLoaded;
  float    dilep_mass_;
  TBranch *dilep_mass_branch;
  bool     dilep_mass_isLoaded;
  bool     isRandom_;
  TBranch *isRandom_branch;
  bool     isRandom_isLoaded;
  float    sigmaIEtaIEta_full5x5_;
  TBranch *sigmaIEtaIEta_full5x5_branch;
  bool     sigmaIEtaIEta_full5x5_isLoaded;
  float    sigmaIEtaIEta_;
  TBranch *sigmaIEtaIEta_branch;
  bool     sigmaIEtaIEta_isLoaded;
  float    etaSC_;
  TBranch *etaSC_branch;
  bool     etaSC_isLoaded;
  float    dEtaIn_;
  TBranch *dEtaIn_branch;
  bool     dEtaIn_isLoaded;
  float    dPhiIn_;
  TBranch *dPhiIn_branch;
  bool     dPhiIn_isLoaded;
  float    hOverE_;
  TBranch *hOverE_branch;
  bool     hOverE_isLoaded;
  float    eSeed_;
  TBranch *eSeed_branch;
  bool     eSeed_isLoaded;
  float    scSeedEta_;
  TBranch *scSeedEta_branch;
  bool     scSeedEta_isLoaded;
  float    ecalEnergy_;
  TBranch *ecalEnergy_branch;
  bool     ecalEnergy_isLoaded;
  float    eOverPIn_;
  TBranch *eOverPIn_branch;
  bool     eOverPIn_isLoaded;
  bool     conv_vtx_flag_;
  TBranch *conv_vtx_flag_branch;
  bool     conv_vtx_flag_isLoaded;
  int      charge_;
  TBranch *charge_branch;
  bool     charge_isLoaded;
  int      sccharge_;
  TBranch *sccharge_branch;
  bool     sccharge_isLoaded;
  int      ckf_charge_;
  TBranch *ckf_charge_branch;
  bool     ckf_charge_isLoaded;
  bool     threeChargeAgree_;
  TBranch *threeChargeAgree_branch;
  bool     threeChargeAgree_isLoaded;
  float    mva_;
  TBranch *mva_branch;
  bool     mva_isLoaded;
  float    mva_25ns_;
  TBranch *mva_25ns_branch;
  bool     mva_25ns_isLoaded;
  float    tag_mva_25ns_;
  TBranch *tag_mva_25ns_branch;
  bool     tag_mva_25ns_isLoaded;
  float    ecalIso_;
  TBranch *ecalIso_branch;
  bool     ecalIso_isLoaded;
  float    hcalIso_;
  TBranch *hcalIso_branch;
  bool     hcalIso_isLoaded;
  float    ecalPFClusterIso_;
  TBranch *ecalPFClusterIso_branch;
  bool     ecalPFClusterIso_isLoaded;
  float    hcalPFClusterIso_;
  TBranch *hcalPFClusterIso_branch;
  bool     hcalPFClusterIso_isLoaded;
  float    fbrem_;
  TBranch *fbrem_branch;
  bool     fbrem_isLoaded;
  float    conv_vtx_prob_;
  TBranch *conv_vtx_prob_branch;
  bool     conv_vtx_prob_isLoaded;
  int      HLT_Mu8_;
  TBranch *HLT_Mu8_branch;
  bool     HLT_Mu8_isLoaded;
  int      HLT_Mu17_;
  TBranch *HLT_Mu17_branch;
  bool     HLT_Mu17_isLoaded;
  int      HLT_Mu8_TrkIsoVVL_;
  TBranch *HLT_Mu8_TrkIsoVVL_branch;
  bool     HLT_Mu8_TrkIsoVVL_isLoaded;
  int      HLT_Mu17_TrkIsoVVL_;
  TBranch *HLT_Mu17_TrkIsoVVL_branch;
  bool     HLT_Mu17_TrkIsoVVL_isLoaded;
  int      HLT_IsoMu24_;
  TBranch *HLT_IsoMu24_branch;
  bool     HLT_IsoMu24_isLoaded;
  int      HLT_IsoTkMu24_;
  TBranch *HLT_IsoTkMu24_branch;
  bool     HLT_IsoTkMu24_isLoaded;
  int      HLT_Ele8_CaloIdM_TrackIdM_PFJet30_;
  TBranch *HLT_Ele8_CaloIdM_TrackIdM_PFJet30_branch;
  bool     HLT_Ele8_CaloIdM_TrackIdM_PFJet30_isLoaded;
  int      HLT_Ele17_CaloIdM_TrackIdM_PFJet30_;
  TBranch *HLT_Ele17_CaloIdM_TrackIdM_PFJet30_branch;
  bool     HLT_Ele17_CaloIdM_TrackIdM_PFJet30_isLoaded;
  int      HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_;
  TBranch *HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_branch;
  bool     HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_isLoaded;
  int      HLT_Ele17_CaloIdL_TrackIdL_IsoVL_PFJet30_;
  TBranch *HLT_Ele17_CaloIdL_TrackIdL_IsoVL_PFJet30_branch;
  bool     HLT_Ele17_CaloIdL_TrackIdL_IsoVL_PFJet30_isLoaded;
  vector<float> *evt_wgt_vars_;
  TBranch *evt_wgt_vars_branch;
  bool     evt_wgt_vars_isLoaded;
public: 
void Init(TTree *tree);
void GetEntry(unsigned int idx); 
void LoadAllBranches(); 
  const float &evt_pfmet();
  const float &evt_pfmetPhi();
  const float &evt_trackmet();
  const float &evt_trackmetPhi();
  const float &evt_corrMET();
  const float &evt_corrMETPhi();
  const float &evt_corrMETPhi_up();
  const float &evt_corrMET_dn();
  const float &evt_corrMETPhi_dn();
  const float &evt_pfsumet();
  const float &evt_pfmetSig();
  const int &evt_event();
  const int &evt_lumiBlock();
  const int &evt_run();
  const bool &filt_csc();
  const bool &filt_hbhe();
  const bool &passes_met_filters();
  const bool &filt_hcallaser();
  const bool &filt_ecaltp();
  const bool &filt_trkfail();
  const bool &filt_eebadsc();
  const bool &evt_isRealData();
  const float &scale1fb();
  const float &evt_xsec_incl();
  const float &evt_kfactor();
  const float &gen_met();
  const float &gen_metPhi();
  const float &njets();
  const float &ht();
  const float &ht_SS();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jets();
  const vector<float> &jets_disc();
  const vector<float> &jets_area();
  const vector<float> &jets_undoJEC();
  const vector<float> &jets_unc();
  const TString &sample();
  const int &nFOs_SS();
  const int &nFOs_VVV();
  const int &nvtx();
  const float &pu_ntrue();
  const float &rho();
  const float &rho_neut_centr();
  const float &rho_calo();
  const float &rho_calo_centr();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &p4();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &tag_p4();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &dilep_p4();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &mc_p4();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &mc_motherp4();
  const int &mc_motherid();
  const int &id();
  const int &idx();
  const float &dxyPV();
  const float &dZ();
  const float &dxyPV_err();
  const int &motherID();
  const int &mc_id();
  const float &RelIso03();
  const float &RelIso03EA();
  const float &tag_RelIso03EA();
  const float &RelIso03DB();
  const float &pfChargedHadronIso();
  const float &pfPhotonIso();
  const float &pfNeutralHadronIso();
  const float &tkIso();
  const float &sumPUPt();
  const bool &passes_VVV_cutbased_veto();
  const bool &passes_VVV_cutbased_veto_noiso();
  const bool &passes_VVV_cutbased_veto_noiso_noip();
  const bool &passes_VVV_cutbased_fo();
  const bool &passes_VVV_cutbased_fo_noiso();
  const bool &passes_VVV_cutbased_tight_noiso();
  const bool &passes_VVV_cutbased_tight();
  const bool &passes_VVV_MVAbased_tight_noiso();
  const bool &passes_VVV_MVAbased_tight();
  const bool &passes_VVV_baseline();
  const float &ip3d();
  const float &ip3derr();
  const int &type();
  const float &mt();
  const float &ptrelv0();
  const float &ptrelv1();
  const float &miniiso();
  const float &miniisoDB();
  const float &reliso04();
  const float &annulus04();
  const float &AbsTrkIso();
  const float &TrkAn04();
  const float &iso03sumPt();
  const float &iso03emEt();
  const float &iso03hadEt();
  const int &jet_close_lep_idx();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &jet_close_lep();
  const float &jet_close_lep_undoJEC();
  const float &jet_close_lep_area();
  const float &jet_close_L1();
  const float &jet_close_L1nc();
  const float &jet_close_L1ncmc();
  const float &jet_close_L1L2L3();
  const float &jet_close_L2L3();
  const float &ptratio();
  const int &tag_charge();
  const int &tag_mc_motherid();
  const float &tag_eSeed();
  const float &tag_eSCRaw();
  const float &tag_eSC();
  const float &tag_ecalEnergy();
  const int &exp_innerlayers();
  const int &exp_outerlayers();
  const float &dilep_mass();
  const bool &isRandom();
  const float &sigmaIEtaIEta_full5x5();
  const float &sigmaIEtaIEta();
  const float &etaSC();
  const float &dEtaIn();
  const float &dPhiIn();
  const float &hOverE();
  const float &eSeed();
  const float &scSeedEta();
  const float &ecalEnergy();
  const float &eOverPIn();
  const bool &conv_vtx_flag();
  const int &charge();
  const int &sccharge();
  const int &ckf_charge();
  const bool &threeChargeAgree();
  const float &mva();
  const float &mva_25ns();
  const float &tag_mva_25ns();
  const float &ecalIso();
  const float &hcalIso();
  const float &ecalPFClusterIso();
  const float &hcalPFClusterIso();
  const float &fbrem();
  const float &conv_vtx_prob();
  const int &HLT_Mu8();
  const int &HLT_Mu17();
  const int &HLT_Mu8_TrkIsoVVL();
  const int &HLT_Mu17_TrkIsoVVL();
  const int &HLT_IsoMu24();
  const int &HLT_IsoTkMu24();
  const int &HLT_Ele8_CaloIdM_TrackIdM_PFJet30();
  const int &HLT_Ele17_CaloIdM_TrackIdM_PFJet30();
  const int &HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30();
  const int &HLT_Ele17_CaloIdL_TrackIdL_IsoVL_PFJet30();
  const vector<float> &evt_wgt_vars();

  static void progress(int nEventsTotal, int nEventsChain);
};

#ifndef __CINT__
extern LeptonTree lepton_tree;
#endif

namespace LeptonTreeNameSpace {
  const float &evt_pfmet();
  const float &evt_pfmetPhi();
  const float &evt_trackmet();
  const float &evt_trackmetPhi();
  const float &evt_corrMET();
  const float &evt_corrMETPhi();
  const float &evt_corrMETPhi_up();
  const float &evt_corrMET_dn();
  const float &evt_corrMETPhi_dn();
  const float &evt_pfsumet();
  const float &evt_pfmetSig();
  const int &evt_event();
  const int &evt_lumiBlock();
  const int &evt_run();
  const bool &filt_csc();
  const bool &filt_hbhe();
  const bool &passes_met_filters();
  const bool &filt_hcallaser();
  const bool &filt_ecaltp();
  const bool &filt_trkfail();
  const bool &filt_eebadsc();
  const bool &evt_isRealData();
  const float &scale1fb();
  const float &evt_xsec_incl();
  const float &evt_kfactor();
  const float &gen_met();
  const float &gen_metPhi();
  const float &njets();
  const float &ht();
  const float &ht_SS();
  const vector<ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > > &jets();
  const vector<float> &jets_disc();
  const vector<float> &jets_area();
  const vector<float> &jets_undoJEC();
  const vector<float> &jets_unc();
  const TString &sample();
  const int &nFOs_SS();
  const int &nFOs_VVV();
  const int &nvtx();
  const float &pu_ntrue();
  const float &rho();
  const float &rho_neut_centr();
  const float &rho_calo();
  const float &rho_calo_centr();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &p4();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &tag_p4();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &dilep_p4();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &mc_p4();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &mc_motherp4();
  const int &mc_motherid();
  const int &id();
  const int &idx();
  const float &dxyPV();
  const float &dZ();
  const float &dxyPV_err();
  const int &motherID();
  const int &mc_id();
  const float &RelIso03();
  const float &RelIso03EA();
  const float &tag_RelIso03EA();
  const float &RelIso03DB();
  const float &pfChargedHadronIso();
  const float &pfPhotonIso();
  const float &pfNeutralHadronIso();
  const float &tkIso();
  const float &sumPUPt();
  const bool &passes_VVV_cutbased_veto();
  const bool &passes_VVV_cutbased_veto_noiso();
  const bool &passes_VVV_cutbased_veto_noiso_noip();
  const bool &passes_VVV_cutbased_fo();
  const bool &passes_VVV_cutbased_fo_noiso();
  const bool &passes_VVV_cutbased_tight_noiso();
  const bool &passes_VVV_cutbased_tight();
  const bool &passes_VVV_MVAbased_tight_noiso();
  const bool &passes_VVV_MVAbased_tight();
  const bool &passes_VVV_baseline();
  const float &ip3d();
  const float &ip3derr();
  const int &type();
  const float &mt();
  const float &ptrelv0();
  const float &ptrelv1();
  const float &miniiso();
  const float &miniisoDB();
  const float &reliso04();
  const float &annulus04();
  const float &AbsTrkIso();
  const float &TrkAn04();
  const float &iso03sumPt();
  const float &iso03emEt();
  const float &iso03hadEt();
  const int &jet_close_lep_idx();
  const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<float> > &jet_close_lep();
  const float &jet_close_lep_undoJEC();
  const float &jet_close_lep_area();
  const float &jet_close_L1();
  const float &jet_close_L1nc();
  const float &jet_close_L1ncmc();
  const float &jet_close_L1L2L3();
  const float &jet_close_L2L3();
  const float &ptratio();
  const int &tag_charge();
  const int &tag_mc_motherid();
  const float &tag_eSeed();
  const float &tag_eSCRaw();
  const float &tag_eSC();
  const float &tag_ecalEnergy();
  const int &exp_innerlayers();
  const int &exp_outerlayers();
  const float &dilep_mass();
  const bool &isRandom();
  const float &sigmaIEtaIEta_full5x5();
  const float &sigmaIEtaIEta();
  const float &etaSC();
  const float &dEtaIn();
  const float &dPhiIn();
  const float &hOverE();
  const float &eSeed();
  const float &scSeedEta();
  const float &ecalEnergy();
  const float &eOverPIn();
  const bool &conv_vtx_flag();
  const int &charge();
  const int &sccharge();
  const int &ckf_charge();
  const bool &threeChargeAgree();
  const float &mva();
  const float &mva_25ns();
  const float &tag_mva_25ns();
  const float &ecalIso();
  const float &hcalIso();
  const float &ecalPFClusterIso();
  const float &hcalPFClusterIso();
  const float &fbrem();
  const float &conv_vtx_prob();
  const int &HLT_Mu8();
  const int &HLT_Mu17();
  const int &HLT_Mu8_TrkIsoVVL();
  const int &HLT_Mu17_TrkIsoVVL();
  const int &HLT_IsoMu24();
  const int &HLT_IsoTkMu24();
  const int &HLT_Ele8_CaloIdM_TrackIdM_PFJet30();
  const int &HLT_Ele17_CaloIdM_TrackIdM_PFJet30();
  const int &HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30();
  const int &HLT_Ele17_CaloIdL_TrackIdL_IsoVL_PFJet30();
  const vector<float> &evt_wgt_vars();
}
#endif
